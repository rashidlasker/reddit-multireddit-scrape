[{"body": "[Man, I sure love Oracles enterprise quality software.](https://gfycat.com/PlaintiveUnlawfulGander)", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "And here I am, still waiting for my project to adapt to *Java 8*...", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "One of the [key features](https://www.infoworld.com/article/3230507/java/java-jdk-10-what-new-features-to-expect-in-the-next-java.html#toc-2) is local variable type inference:\n\n\"It enhances the Java language to extend type inference to declarations of local variables with initializers.\"\n\nDoes this mean that Java 10 got the initializer list feature of C++ or is it something else?\n\n", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "Neat. Maybe I'll be able to actually use it some day.", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "I've read this entire thread and all I've picked up on is that there is variable type inference now in Java. What else is new?", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "Dammit! and I just got my customer to agree to update to Java 8.", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "Used to be much more excited about new Java releases, I must be getting old.", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "What are some new features? ", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "What happened to 9?", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "... and it just hit EOL ...", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "http, sigh.  Trying https even redirects to http.  Derp.", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "Cool, can't wait to use it in 10 years. Currently compiling to Java 8 in Test.", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "For now, we'll just set this down next to Python 3 so it won't be lonely.", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "And the release notes link point to a 404 not found.. go Oracle...\n\nSee by yourself:\n\nhttp://www.oracle.com/technetwork/java/javase/10u-relnotes-4108739.html\n\nlink to\n\nhttp://www.oracle.com/technetwork/java/javase/ssLINK/4108743\n\nwhich is 404", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "Oracle Java release post.  \nMost comments are on support, not features, efficiencies or fixes.  \nOracle af.", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "Did they add Val as well or just var?", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "Wait, was there a Java 9 and I didn't know?\n\n*Maybe they caught on the skipping 9 trend...*", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "Did we get tail call optimization this time? ", "post": "https://www.reddit.com/r/programming/comments/85u3yl/java_10_released/"}, {"body": "This is more common than some think and my last company lost every single developer because management was unbearable. We repeatedly got demands to introduce security flaws and jeopardize the product from upper management to which we firmly said no. How strange management actually didn't like us enforcing security into our application. ", "post": "https://www.reddit.com/r/programming/comments/85tapa/toxic_management_cost_an_awardwinning_game_studio/"}, {"body": "Missed the opportunity to put \"The Tale of Telltale Games\" in the title.", "post": "https://www.reddit.com/r/programming/comments/85tapa/toxic_management_cost_an_awardwinning_game_studio/"}, {"body": "I worked for certain company I do not want to name but what the article says is so familiar to me. My position was game producer, so I had to coordinate tasks.\n\nWe ported iOS version of the game to Android (roughly around 350 devices and a top ten list of devices with special care) and had to publish 15 days later than iOS release to get a team bonus.\n\nIn one of the projects I worked for 14 weeks in a row. 11 of them 6 weeks per day. Almost every single day overtime. The last three weeks we worked even sunday, meaning more than 21 days in a row. They gave some bonus to the team and to myself. The last week I remember I did 16 hours, 17 hours, 10 hours and 22 hours. The game is not released without the permission of upper management.\n\nWell, this is what happened: after releasing the game, they sent the mail again saying congratulations to all for the delivery!!! Removing one of my bonuses from there, a manipulated version of the original mail with the promised bonus, which I caught and showed to my boss and told him many bad things. So they invented an excuse saying they were not happy with the quality of the textures after we had the authorization in the review.\n\nNot only this, but they also systematically tried to issue 2 warnings in a short period of time to producers and other employees, because if they give you 3, they kick you out without paying absolutely anything. \n\nI myself refused to sign a warning and they got really nervous about this. I simply said there was not reason for such a thing after working as a slave, that if they were not happy they can tell me during the project, and that with an official 8 hours contract I did not find normal this kind of practices, taking into account that I had to manage all the team, which was exhausted and I was staying there and doing all my work.\n\nWhen I left they did not want me to pay as according to the law. I discovered they committed this irregularity all the time. They replied: we never had a problem with this. I did not even ask for all of it, I gave up the overtime money for weekdays!\n\nConclusion: never work for a company like this. If this industry is this inconsiderate with workers, just skip them, do not work for them. ", "post": "https://www.reddit.com/r/programming/comments/85tapa/toxic_management_cost_an_awardwinning_game_studio/"}, {"body": "The headline made it seem like telltale was in the shithole but the end of the article made it sound like theyre better off after losing that one guy as CEO despite losing some top talent. They also seemed to have accumulated way too much staff to try and deal with the rapid growth and had to lay off some people who probably shouldn't have been hired there in the first place, to the fault of the business.", "post": "https://www.reddit.com/r/programming/comments/85tapa/toxic_management_cost_an_awardwinning_game_studio/"}, {"body": "*The software development team will remember that.*", "post": "https://www.reddit.com/r/programming/comments/85tapa/toxic_management_cost_an_awardwinning_game_studio/"}, {"body": "Eh... this is so common in many industries, but I guess entertainment is pretty hard on deadlines. I bet they have lots of people that moved into management that have no technical background whatsoever and think that development is an art-form.\n\nToo often I've seen vaguely worded tasks from product owners, that have an even vaguer idea in their head with an expectation that devs can understand what's asked of them. Not only that, they communicate their change requests with expressions like \"you know what I mean, right?\", \"something like this, but not exactly\", \"you make the decision and we'll see if it's ok\".", "post": "https://www.reddit.com/r/programming/comments/85tapa/toxic_management_cost_an_awardwinning_game_studio/"}, {"body": "All the more reason to make your own games if you want to be in the industry. At least you'll get most of the profit for all the bullshit you put up with", "post": "https://www.reddit.com/r/programming/comments/85tapa/toxic_management_cost_an_awardwinning_game_studio/"}, {"body": "&gt; Very rarely people were writing things down on a wiki or a confluence page or any sort of documentation\n\nwelp", "post": "https://www.reddit.com/r/programming/comments/85tapa/toxic_management_cost_an_awardwinning_game_studio/"}, {"body": "It's hard for me to take this article seriously. The video game media has a habit of doing hit pieces for pageviews. \"Anonymous\" sources make it hard to tell if real live individuals had those complaints or they were made up.", "post": "https://www.reddit.com/r/programming/comments/85tapa/toxic_management_cost_an_awardwinning_game_studio/"}, {"body": "Suits ruin most software companies, and they\u2019re usually old baby boomers with limited understanding of computers. The industry would be better off without them.", "post": "https://www.reddit.com/r/programming/comments/85tapa/toxic_management_cost_an_awardwinning_game_studio/"}, {"body": "Crunch is indeed difficult but it's only during the end of a project and hopefully doesn't last too long.", "post": "https://www.reddit.com/r/programming/comments/85tapa/toxic_management_cost_an_awardwinning_game_studio/"}, {"body": "It really depends on what kind of hackathon it is. If it's one organized by and for a company, I say: yes, that's exploitative. \n\nIf it's just a fun event organized by school, some other non-profit group, or a game jam, that seems fine to me. In those cases it is just a good amount of fun and a chance to do something different.", "post": "https://www.reddit.com/r/programming/comments/85t282/sociologists_examine_hackathons_and_see/"}, {"body": "tl;dr:\n\n&gt; 1. hackthons are the way to make programmers work for free to corporations' tasks\n\n&gt; 2. hackathons rarely results in anything useful\n\nhow both can be true? don't ask me", "post": "https://www.reddit.com/r/programming/comments/85t282/sociologists_examine_hackathons_and_see/"}, {"body": "I've won a hackathon, and it led to a nice contract offer. (I'm not claiming winning was any sort of accomplishment)\n\nMy team and I attended the event to have fun. We were coworkers prior to and it was fun just to get back together, test our chops on a completely unrelated project, and have a \"speed run\" of sorts. It was also a fun test of pros vs student teams.\n\nSo, after winning, we attended a meeting with the group who wanted to contract with us. We convinced them that the project was barely a proof-of-concept and would require actual engineering/design/implementation to get off the ground. None of us had any intention of quitting our day jobs as full time devs, so we had some free donuts, politely declined and went on with life.\n\nNot sure how exploitative the process was.\n\nEdit: it was sponsored by a nonprofit and several government agencies were the target audience. We were essentially delivering them proofs of concept of what they could do with their data - basically slightly fleshed-out prototypes. ", "post": "https://www.reddit.com/r/programming/comments/85t282/sociologists_examine_hackathons_and_see/"}, {"body": "I reserve judgement about this study and its conclusions since (a) it doesn't seem to be publicly available and (b) Wired magazine is hardly a reliable source on critique of technology/tech industry.\n\nAt the same time, it seems to me the major question for the study authors to answer should be to account for participants' own self-reported enjoyment of and benefit from hackathons, beyond the frame of being victims of exploitation. If the study's conclusion is that companies merely benefit \"selling the dream of self-improvement via technology... regardless of any immediate benefit to their bottom line,\" and that they don't actually benefit much in terms of either products or recruitment, this doesn't tell us very much. Why hackathons in particular? And might young workers be getting more out of them practically speaking than the industry, in terms of networking and learning opportunities, freedom of movement between jobs, etc? In which case perhaps the participants aren't duped by the ritual at all but making the most of an opportunity. I hope the study addresses this possibility.  \n\n(And I say all this as someone who personally hates hackathons and the whole idea of 'solving problems' as a sport.)\n\nThere's a more general problem I have with sociological studies of 'precarious work' which is related to this. Our ability to switch jobs and have flexible work schedules is something we want (as long as it's under our control and not forced on us). If we have caring responsibilities at home, it's crucial. So much of the literature presumes full time employment is the ideal and anything less than that represents _only_ exploitation by the industry. It's just not true. \n\nEDIT: Also I hope the study also addresses who can actually participate in hackathons, -- who has the time and motivation and feels safe spending the night with random strangers, -- which I am sure skews toward young white men.", "post": "https://www.reddit.com/r/programming/comments/85t282/sociologists_examine_hackathons_and_see/"}, {"body": "Is it really exploitation if you know exactly what is happening and why, and you participate knowing what you're getting into, because you know you'll have fun?", "post": "https://www.reddit.com/r/programming/comments/85t282/sociologists_examine_hackathons_and_see/"}, {"body": "Providing constant streams of caffeine and food to a bunch of a bunch of college-aged kids and telling them to stay up all night working on \"competitions\" for corporations is exploitation?\n\nWe need to separate our positive feelings of doing work with the negative side effects of having those positive feelings being taken advantage of. Just because something feels good and exciting doesn't mean its actually good for you.", "post": "https://www.reddit.com/r/programming/comments/85t282/sociologists_examine_hackathons_and_see/"}, {"body": "It shouldn't really take a sociologist to see that.", "post": "https://www.reddit.com/r/programming/comments/85t282/sociologists_examine_hackathons_and_see/"}, {"body": "Giving something away for free isn\u2019t just exploitation, it can also be generosity. Depends on context. ", "post": "https://www.reddit.com/r/programming/comments/85t282/sociologists_examine_hackathons_and_see/"}, {"body": "Hackathons are gathering of desperados and socially inept programmers who cannot see they're being exploited. By encouraging and participating in such events, you are promoting and encouraging the crunch culture of exploitation in software industry. If you want to put a stop to bad hours, bad management in software development, your first step is to boycott such events. But I am not putting much hope as I don't see people boycotting even bad interview techniques, simply because there're just too many desperados out there with no clue about human psychology. Perhaps techies need to work under more sociopaths and psychopaths to get what I am talking about.", "post": "https://www.reddit.com/r/programming/comments/85t282/sociologists_examine_hackathons_and_see/"}, {"body": "I won't say it's exploitation, but IMO hackatons are hurting our standard for software quality, by focusing on \"speed of delivery\" above anything else. ", "post": "https://www.reddit.com/r/programming/comments/85t282/sociologists_examine_hackathons_and_see/"}, {"body": "\"I don't have fun in my field so I'm gonna put a downer on others'\" - OP of this article.", "post": "https://www.reddit.com/r/programming/comments/85t282/sociologists_examine_hackathons_and_see/"}, {"body": "Reminds me of the time I went to a hackathon just because of free food. Turns out we had pizza, snickers, unlimited soda, and we even had access to automatic massage chairs. Me and my team were really goofing off, like, we started playing games in the middle of the hackathon and it was really fun.\n\nWe ended up winning because our proof-of-concept product was the one that worked the best. The prize was an iPad.\n\nOn this type of hackathon, where the prize doesn't involve you being hired or selling your code to a company or winning a trip, just go and have fun. Work a bit, eat and sleep. Don't overly stress yourself trying to win and it will become a way more enjoyable experience.\n\n... Does anyone want to buy an iPad? :|", "post": "https://www.reddit.com/r/programming/comments/85t282/sociologists_examine_hackathons_and_see/"}, {"body": "Those kids are fools for abusing their brains health in stupid all-night coding sessions. It is not worth a dime at all. They will need to keep working until a very old age and health care is just too expensive. I hope that kind of abuse will be made illegal in the future.    ", "post": "https://www.reddit.com/r/programming/comments/85t282/sociologists_examine_hackathons_and_see/"}, {"body": "I went to a few corporate sponsored hackathons when I lived in the Bay Area.  At every one I went to, people came with their own ideas to work on.  Their own personal projects, intellectually owned by themselves (or open source stuff).  I don't understand how it could possibly be exploitation.  The supposed exploiters are not gaining the benefits of their work.", "post": "https://www.reddit.com/r/programming/comments/85t282/sociologists_examine_hackathons_and_see/"}, {"body": "I went to a hackathon once and was given a mirror of coke with several other programmers.  We were asked to write an algorithm that could make their numbers legitimate. 2000 was a really interesting year in San Francisco.\n\nIt wasn't very difficult and two of us after 24 hours won and got 5k in cash each.\n\n6 months later they were busted for attempting to traffic MDMA", "post": "https://www.reddit.com/r/programming/comments/85t282/sociologists_examine_hackathons_and_see/"}, {"body": "I wonder if the author is next going to tackle Hollywood or the NFL.\n\n*\"The audience thinks they are showing solidarity with their local community, and engaging in civic pride. Unbeknownst to these naive proles, they are being exploited to the tune of hundreds of dollars, all of which is going straight into the hands of for-profit corporations and the capitalists who own them\"*", "post": "https://www.reddit.com/r/programming/comments/85t282/sociologists_examine_hackathons_and_see/"}, {"body": "Seeing as to how finding x64 programming (or even Assembly Programming in general) resources for macOS is extremely difficult, I chanced upon this in an old HN thread. The code appears to be still here in its entirety - https://bitbucket.org/maghoff/asmtut/src/a91d30dc279c?at=default", "post": "https://www.reddit.com/r/programming/comments/85v2zk/a_6part_x64_assembly_programming_using_nasm/"}, {"body": "Damn. Knut and Jon got put on blast.", "post": "https://www.reddit.com/r/programming/comments/85v2zk/a_6part_x64_assembly_programming_using_nasm/"}, {"body": "This is so great! I\u2019ve been wanting to learn x64 assembly on my Mac for ages. \n\nI tried out Ray Seyfarth\u2019s EBE:\nhttp://rayseyfarth.com/ebe/\n\nWhich is also very good. \n\nOne thing I\u2019ve long been searching for is how to debug on OSX. I can\u2019t get anything to output debug symbols that are supported by gdb. \n\nI think it may be possible to use gcc but I can\u2019t find much in the way of AT&amp;T syntax tutorials so I\u2019m kind of stuck. \n\n", "post": "https://www.reddit.com/r/programming/comments/85v2zk/a_6part_x64_assembly_programming_using_nasm/"}, {"body": "    fun isHappy(person: Person): Boolean {\n        return when {\n            person.isPresident -&gt; false\n            person.isSmart -&gt; person.age &lt; 10\n            else -&gt; person.salary &gt; 100000\n        }\n    }\n\nMan, that's bleak. \nKudos for the innovative examples BTW, it makes reading \"dry\" articles a lot more fun.", "post": "https://www.reddit.com/r/programming/comments/85s2wq/kotlin_avoids_entire_categories_of_java_defects/"}, {"body": "That was a great article.  I come from a C# background and just recently took a job doing Java.  Java has been really frustrating but it led me to discover Kotlin and now I'm happy I took the job or else I never would have found this gem.  Kotlin is like JetBrains took every single complaint I had about Java and addressed them.  I really hope Kotlin continues it's rise because it's really something special.", "post": "https://www.reddit.com/r/programming/comments/85s2wq/kotlin_avoids_entire_categories_of_java_defects/"}, {"body": "Pretty much every one of these is also covered by Scala in my experience. In fact, Kotlin comes from JetBrains liking a lot of the features originally present in Scala but without a lot of what makes Scala a more complex language. Going through your list:\n\n&gt; Equality\n\nDefault behavior in Scala is to compile `==` to `.equals()` so you get value equality by default.\n\n&gt; Data classes\n\nScala has Case Classes which seem to have directly inspired Kotlin's Data Classes. They're especially useful for pattern matching or macros. One feature I use a lot with Scala's (don't know if this is in Kotlin's, so forgive my ignorance) is that you can create one from an equivalent tuple. So if you have a class that's String, String, Int and you have a Tuple3 `tuple` that's type (String, String, Int) you can create an object of that case class type with `.tupled(tuple)`. Very helpful when dealing with certain grouped data without names yet.\n\n&gt; Switch\n\nScala has an immensely powerful pattern matching expressions that work similarly and have even more utility than Kotlin's `when`. They look like:\n\n    val result = someInt match {\n        case 1 =&gt; true\n        case _ =&gt; false\n    }\n\nIn the above example, someInt is matched to a boolean and evaluates to `true` if it equals 1, and `false` otherwise. You can do some extra things with this, like so:\n\n    val result = person match {\n        case Person(\"Bob\", age) =&gt; age == 12\n        case _ =&gt; false\n    }\n\nIn the above example, you're matching the contents of `person` entirely using its Case Class type. The first `case` expression says that if `person` is a `Person` with the name \"Bob\", assign its age to the temporary value `age` and return whether or not his age is 12. Otherwise, return false.\n\n&gt; Nullability\n\nWorks much the same way in Scala (EDIT: but without compile-time guarantees, which can be fixed with a linter or general code style). If you deal with only Scala code you're probably never going to find a null, only an `Option[T]`.\n\nHere's an example of wrapping a possibly null value in an Option and handling it, using pattern matching:\n\n    def foo(bar: String): Unit {\n        Option(bar) match {\n            case Some(string) =&gt; use(string)\n            case None =&gt; // handle nothing here\n        }\n    }\n\nThe Scala standard library never returns null in standard usage, and neither do any of the major Scala libraries. Working in Scala alone is a mostly null-free experience, and when working with Java you can just wrap things in `Option[T]`. You can still get NPEs when working with Java but for the most part, if you apply some basic common sense and read up on documentation for possibly null methods, you'll be fine. **EDIT:** I'd like to stress though that even though, in practice, the result is similar it is not exactly the same and I never meant to give that impression at all. Scala's approach is monadic using types whereas Kotlin's is baked into the language. Both have their pros and cons but I prefer the Scala style, though I do wish it had compile-time null safety.\n\n&gt; Assignment\n\n**EDIT:** One thing that Scala does differently than Kotlin is assignment. In Kotlin, as you mention, assignment is a statement, but in Scala it is an expression that returns `Unit`, essentially the \"void\" type. This is different from Java as well because Java returns the assigned value. The idea is that it performs better returning Unit, though I wouldn't know for sure. The end result is something similar to Kotlin's implementation though because you can't really do anything with Unit.\n\n---\n\nOverall both Kotlin and Scala are really huge improvements over base Java in so many ways. I'm a Scala coder on the weekends but I wouldn't complain if we switched over to Kotlin at work since it's just that much better than Java at ensuring a clean codebase. Still mainly a Scala programmer though because I love its functional slant :) but this is a good article for detailing exactly what it is about Kotlin and similar languages that's better than what most people are used to in Java.", "post": "https://www.reddit.com/r/programming/comments/85s2wq/kotlin_avoids_entire_categories_of_java_defects/"}, {"body": "Hi everyone.  This is the results of my research on how Kotlin impacts defect rates.  I posted it in the Kotlin subreddit but wanted to share this with the rest of the programming community as well.\n\nMost people view Kotlin as a nicer Java with null safety so I was surprised to find that Kotlin actually avoids many more categories of Java defects.", "post": "https://www.reddit.com/r/programming/comments/85s2wq/kotlin_avoids_entire_categories_of_java_defects/"}, {"body": "News flash: A powerful static type system can catch many errors at compile time. Who knew? ", "post": "https://www.reddit.com/r/programming/comments/85s2wq/kotlin_avoids_entire_categories_of_java_defects/"}, {"body": "Is Kotlin like Scala in that equality between any two random unrelated types will still compile, but always return false, as discussed here: http://www.lihaoyi.com/post/WartsoftheScalaProgrammingLanguage.html? If it does allow this, why didn't Kotlin fix it? And if it did fix it, why didn't the author list it?\n\nIMHO allowing comparison between any two types without a compile time failure (or even an exception) is actually much worse than confusing referential and value based equality. Coming from C++ this seems like a mind-blowing type system failure, for Java and Kotlin and especially for Scala which prides itself so much on having a powerful type system.", "post": "https://www.reddit.com/r/programming/comments/85s2wq/kotlin_avoids_entire_categories_of_java_defects/"}, {"body": "Just make Kotlin Java and remove what was formerly known as Java.", "post": "https://www.reddit.com/r/programming/comments/85s2wq/kotlin_avoids_entire_categories_of_java_defects/"}, {"body": "Site is dead.", "post": "https://www.reddit.com/r/programming/comments/85s2wq/kotlin_avoids_entire_categories_of_java_defects/"}, {"body": "Many of these \"defects\" are detected by modern Java dev environments and shown as warnings, or errors if configured.\n\nKotlin may be a nice language but the \"safety\" aspects of those specific attributes of the Java language have already been taken care of for people who care.", "post": "https://www.reddit.com/r/programming/comments/85s2wq/kotlin_avoids_entire_categories_of_java_defects/"}, {"body": "&gt; If you purposely want to check for referential equality, Kotlin has triple equals for that so it\u2019s never accidental.\n\nI must admit I've never been a fan of two syntactically similar tokens having quite different meanings.\n\nIt happens regularly to me to type `=` instead of `==`. Fortunately, `if (x = y)` generally leads the compiler to warn me I've made an error.\n\nI dread to think of mistakenly typing `===` as `==` (or vice-versa); how much time will it take to spot the issue?", "post": "https://www.reddit.com/r/programming/comments/85s2wq/kotlin_avoids_entire_categories_of_java_defects/"}, {"body": "Which defects does it keep? ;)", "post": "https://www.reddit.com/r/programming/comments/85s2wq/kotlin_avoids_entire_categories_of_java_defects/"}, {"body": "This is good, but Know Your Trade-Offs\u2122... :-)\n\nDepending on how you deploy and how you patch (e.g. .NET Core has a recent patch from MS), this might not be ideal. Rebuilding and redeploying that one executable is harder than just deploying patched modules (how harder, depends on mature your organization is and what is deployed; if a container, the difference is minimal).\n\n(Same as statically linking e.g. openSSL into your C program; nothing has changed in the last 30 years :-))", "post": "https://www.reddit.com/r/programming/comments/85rn7q/net_native_cross_platform_native_executables_from/"}, {"body": "How does it work with Linux or native app is just for Windows \n?\n\n\n\nAsking since there is some light for supporting all other platforms by Microsoft since dot net core came ", "post": "https://www.reddit.com/r/programming/comments/85rn7q/net_native_cross_platform_native_executables_from/"}, {"body": "Anything new here?", "post": "https://www.reddit.com/r/programming/comments/85rn7q/net_native_cross_platform_native_executables_from/"}, {"body": "How large do binaries end up being? ", "post": "https://www.reddit.com/r/programming/comments/85rn7q/net_native_cross_platform_native_executables_from/"}, {"body": "Lol no F# support", "post": "https://www.reddit.com/r/programming/comments/85rn7q/net_native_cross_platform_native_executables_from/"}, {"body": "Stop trying to replace us with machines, you bastard! If we let AI monsters convert sketches into HTML, where does it end? Converting sketches into Angular apps? Converting Angular apps into usable websites?", "post": "https://www.reddit.com/r/programming/comments/85u54x/sketchcode_a_deep_learning_model_that_takes/"}, {"body": "I am so going to play with this!!", "post": "https://www.reddit.com/r/programming/comments/85u54x/sketchcode_a_deep_learning_model_that_takes/"}, {"body": "I get the feeling that it generates websites on par with sites created with FrontPage ", "post": "https://www.reddit.com/r/programming/comments/85u54x/sketchcode_a_deep_learning_model_that_takes/"}, {"body": "Skynet", "post": "https://www.reddit.com/r/programming/comments/85u54x/sketchcode_a_deep_learning_model_that_takes/"}, {"body": "Just the idea of \"Safety Critical Neural Networks\" is scary.", "post": "https://www.reddit.com/r/programming/comments/85ty2d/ai2_an_efficient_system_for_verifying_safety/"}, {"body": "Holy shit two dick-bars and two pop-ups.  Have a downvote.\n\n\n", "post": "https://www.reddit.com/r/programming/comments/85tywx/10_common_software_architectural_patterns/"}, {"body": "A very good explanation of important patterns; the ones that aren't tied to the limitations of a particular kind of programming languages.", "post": "https://www.reddit.com/r/programming/comments/85tywx/10_common_software_architectural_patterns/"}, {"body": "Java will suck less on containers, but you're still spinning many copies of a large runtime if you keep the same one-service-per-container approach. On the other hand, the application server approach also had its problems.", "post": "https://www.reddit.com/r/programming/comments/85t7gt/java_on_docker_will_no_longer_suck_improvements/"}, {"body": "As I was saying over on /r/java it's great that Java on Docker is improving, but Docker itself can still be annoyingly unstable if you're running it on a production critical system.", "post": "https://www.reddit.com/r/programming/comments/85t7gt/java_on_docker_will_no_longer_suck_improvements/"}, {"body": "virtual machine on your virtual machine on your virtual machine\n\nif anyone replies to this to explain to me that docker isn't a virtual machine I will kill a kitten.\n", "post": "https://www.reddit.com/r/programming/comments/85t7gt/java_on_docker_will_no_longer_suck_improvements/"}, {"body": "No, Java will always suck. It was a bad idea implemented poorly. Iterating on it hasn't helped. But go on, continue.", "post": "https://www.reddit.com/r/programming/comments/85t7gt/java_on_docker_will_no_longer_suck_improvements/"}, {"body": "tl;dr The relationship is fragile.", "post": "https://www.reddit.com/r/programming/comments/85v8wr/the_relationship_between_cobol_and_computer/"}, {"body": "I will never understand  fascination of /r/programming with cobol", "post": "https://www.reddit.com/r/programming/comments/85v8wr/the_relationship_between_cobol_and_computer/"}, {"body": "Written in 1985, and the bias against COBOL has never ended. The biggest problem with COBOL was (is) most of the users of the language continue(d) to code it like it's still 1974. The bias against COBOL comes mostly from its ability to be much more egalitarian and therefore makes it harder to indulge in the kind of the kind of  apartheid that exists in IT today. ", "post": "https://www.reddit.com/r/programming/comments/85v8wr/the_relationship_between_cobol_and_computer/"}, {"body": "Looks interesting and useful. Thank you!", "post": "https://www.reddit.com/r/programming/comments/85ss3v/haskell_at_work_practical_haskell_programming/"}, {"body": "I finally understand monads - they are like donuts!\n\nJust more abstract.", "post": "https://www.reddit.com/r/programming/comments/85ss3v/haskell_at_work_practical_haskell_programming/"}, {"body": "&gt; according to contemporary biologists the premise is false: a frog that is gradually heated will jump out.\n\nhttps://en.m.wikipedia.org/wiki/Boiling_frog", "post": "https://www.reddit.com/r/programming/comments/85s7vk/boiling_frogs_about_lowering_your_standards_to/"}, {"body": "I\u2019ll counter. \n\nIf you don\u2019t have a management org that believes that there is value to your objections then congratulations, you have just inherited Sisyphus\u2019s rock. ", "post": "https://www.reddit.com/r/programming/comments/85s7vk/boiling_frogs_about_lowering_your_standards_to/"}, {"body": "Related reading: [Dan Luu, \"Normalization of Deviance\"](https://danluu.com/wat/)", "post": "https://www.reddit.com/r/programming/comments/85s7vk/boiling_frogs_about_lowering_your_standards_to/"}, {"body": "I think the main problem is clash of values. One man's top priority is another man's \"waste of time\".\n\nDo you keep code clean by adhering to strict coding rules? Some consider this very important, I think it's a waste of time.\n\nDo you hold daily standup meetings? I see it as mostly a waste of time, but many people think it's very important.\n\nAccepting \"mediocrity\" is basically compromising on your own principles because you recognize you cannot impose your values on the company.", "post": "https://www.reddit.com/r/programming/comments/85s7vk/boiling_frogs_about_lowering_your_standards_to/"}, {"body": "&gt; could be", "post": "https://www.reddit.com/r/programming/comments/85u0rx/digitalocean_spaces_clould_be_10_times_cheaper/"}, {"body": "Where do you go for a hobby project that requires a decent amount of bandwidth, but not much of the rest?\n\nCurrently I have looked mostly at OVH, Hetzner, and Scaleway, and the latter looks best at the moment, where I was planning on getting 2x200mbit unmetered for 2*\u20ac3=\u20ac6 per month. Even with just 1/4 utilization that's still \u20ac6/32000GB = $0.00023/Gb, which way better than DO's $0.01/Gb, or Amazon's insane $0.09/Gb. Although I do realize those other options probably supports burst traffic better. But are there other options for me?", "post": "https://www.reddit.com/r/programming/comments/85u0rx/digitalocean_spaces_clould_be_10_times_cheaper/"}, {"body": "The egress costs of AWS are definitely one of challenges with the platform. Depending on your workload, you may be able to lower them using a Classic Load Balancer or Application Load Balancer. These can reduce per-GB egress costs by over 85%, but introduce a fixed monthly cost for the load balancer. (Plus you can't use them with S3 directly, so you need an EC2 instance to proxy your requests)", "post": "https://www.reddit.com/r/programming/comments/85u0rx/digitalocean_spaces_clould_be_10_times_cheaper/"}, {"body": "I've long been a fan of DO. The caveat, though, is that you have to do the DevOps yourself. Which IMO is not really a problem.", "post": "https://www.reddit.com/r/programming/comments/85u0rx/digitalocean_spaces_clould_be_10_times_cheaper/"}, {"body": "Ex physicist and professional c++ dev. Are you interested in code review/tips? I opened a few files at random and noticed some things immediately that could be improved. Things like inline initializers, rule of zero, etc that would make code more concise and less bug prone. ", "post": "https://www.reddit.com/r/programming/comments/85qyyf/quantum_physics_and_c_looking_for_beta_testers/"}, {"body": "C++ developer here to help.", "post": "https://www.reddit.com/r/programming/comments/85qyyf/quantum_physics_and_c_looking_for_beta_testers/"}, {"body": "Great work! Physicists tend to reimplement numerics for every model over and over again  - this project was overdue ;)", "post": "https://www.reddit.com/r/programming/comments/85qyyf/quantum_physics_and_c_looking_for_beta_testers/"}, {"body": "Granted I didn't look too much into what you did here but the idea could be useful for us chemists as well. \n\nPerhaps you might look into using [libtensor](https://github.com/epifanovsky/libtensor) as a backend. \n\n\nWe have lots of tools in the comminuty of varying quality (lots of fortran) but there's some good stuff too!\n", "post": "https://www.reddit.com/r/programming/comments/85qyyf/quantum_physics_and_c_looking_for_beta_testers/"}, {"body": "cool.", "post": "https://www.reddit.com/r/programming/comments/85qyyf/quantum_physics_and_c_looking_for_beta_testers/"}, {"body": "Can somebody provide some context here?  Raytracing has available for decades.  IIRC, it's one of the original approaches to computer graphics, since it's an intuitive way to doing graphics.\n\nSo I understand that MS adding this to DirectX is a big deal, since it's now generally available.  However it has never been a software problem, but rather a performance/hardware problem.\n\nHas the hardware gotten to the point (or soon will) that Raytracing now has the performance of the usual rasterization?", "post": "https://www.reddit.com/r/programming/comments/85lnor/announcing_microsoft_directx_raytracing/"}, {"body": "Anyone else remember this real-time raytracing demo from 2000?\n\nhttps://www.pouet.net/prod.php?which=5\n\nAn absolute classic, unbelievable back then and still impressive today. The frame rate was in the single digits on contemporary hardware during the most demanding scenes. Since it's using software rendering (for obvious reasons), it runs flawlessly on modern systems. Just select the .exe ending with 'W' (since the other was meant for PCs running DOS and is not compatible with current versions of Windows). The site also has Youtube mirrors in case you don't want to download the tiny 168KB file.\n\nHere's a more recent demo from 2013, also with real-time raytracing (used for the reflections):\n\nhttps://www.pouet.net/prod.php?which=61211", "post": "https://www.reddit.com/r/programming/comments/85lnor/announcing_microsoft_directx_raytracing/"}, {"body": "This is actually a big thing. While there have been efforts to make raytracing viable for real time application, efforts so far have been highly experimental, relying on ugly hacks and/or highly unstable. Microsoft incorporating such capabilities with DirectX is the first step in providing a stable interface, a de facto standardized API for it. And maybe, in the long term, hardware vendors will actually support this.", "post": "https://www.reddit.com/r/programming/comments/85lnor/announcing_microsoft_directx_raytracing/"}, {"body": "Is this like the Nvidia raytracing announcement? They were using machine learning to train a model that could \"fill in the gaps\" of the raytracing output.", "post": "https://www.reddit.com/r/programming/comments/85lnor/announcing_microsoft_directx_raytracing/"}, {"body": "&gt; Developers can use currently in-market hardware to get started on DirectX Raytracing.  There is also a fallback layer which will allow developers to start experimenting with DirectX Raytracing that does not require any specific hardware support.  For hardware roadmap support for DirectX Raytracing, please contact hardware vendors directly for further details.\n\nI gather that means that hardware support is pretty much non-existent\nat this point. It\u2019d be interesting to see how this could be leveraged for\npov-ray. Getting rendering times down on those julia fractals \u2026\n", "post": "https://www.reddit.com/r/programming/comments/85lnor/announcing_microsoft_directx_raytracing/"}, {"body": "I just Vulkan gets a similar deal to this. \n", "post": "https://www.reddit.com/r/programming/comments/85lnor/announcing_microsoft_directx_raytracing/"}, {"body": "Raytracing is sort of like nuclear fusion: a few years away for my entire life. Not clear what changed yet.\n", "post": "https://www.reddit.com/r/programming/comments/85lnor/announcing_microsoft_directx_raytracing/"}, {"body": "Isn't raytracing is also a lie? Eyes don't emit rays but lights do.", "post": "https://www.reddit.com/r/programming/comments/85lnor/announcing_microsoft_directx_raytracing/"}, {"body": "Will this help make my video games look better?", "post": "https://www.reddit.com/r/programming/comments/85lnor/announcing_microsoft_directx_raytracing/"}, {"body": "Anyone else having trouble getting their sample code to run? I can get the hello world with the triangle running just fine, but DXR Smoke Test will not run, it says \"Make sure you have developer mode enabled\" (I do), and \"make sure that the d3d12.dll overlay is running side by side with the app\" which I don't understand and can't find any google results for. Sorry if this is a noob question, I don't know anything about D3D/DirectX development, I've just been working on path tracing in openCL for a few months now and want to play with this.", "post": "https://www.reddit.com/r/programming/comments/85lnor/announcing_microsoft_directx_raytracing/"}, {"body": "ITT - people who think they know more than microsoft and nvidia engineers.", "post": "https://www.reddit.com/r/programming/comments/85lnor/announcing_microsoft_directx_raytracing/"}, {"body": "Oh look, DirectX is not dead.", "post": "https://www.reddit.com/r/programming/comments/85lnor/announcing_microsoft_directx_raytracing/"}, {"body": "&gt; This year, we had 2325 respondents, about the same as last year.\n\nThis bit was glossed over.  Last year (which was confusingly called the State of Clojure 2016 survey): http://blog.cognitect.com/blog/2017/1/31/state-of-clojure-2016-results\n\n&gt; This year we held steady in our response rate as 2,420 of you took the time and effort to weigh in on your experience with Clojure\n\nIt looks like Clojure has peaked, or at least those that feed involved enough to bother filling in a survey has peaked.", "post": "https://www.reddit.com/r/programming/comments/85po5z/state_of_clojure_2018_results/"}, {"body": "The most interesting result for me was to see the increasing influence and growth of the ClojureScript ecosystem, and how it has attracted many JavaScript developers.\n\nFew know that nowadays ClojureScript can work well with react, does not need Java, and has had solid support for source maps, and live reload for a while.", "post": "https://www.reddit.com/r/programming/comments/85po5z/state_of_clojure_2018_results/"}, {"body": "Of all the programming languages, I just cannot figure out *why*. I mean, I know some of us studied lisp/scheme at uni, but honestly, why would you want this? ;)", "post": "https://www.reddit.com/r/programming/comments/85po5z/state_of_clojure_2018_results/"}, {"body": "I used to have a lot of interest in these things (especially [subtext](http://www.subtext-lang.org/)), but seeing them all together like this was quite nauseating.", "post": "https://www.reddit.com/r/programming/comments/85t1a3/gallery_of_programmer_interfaces/"}, {"body": "Awesome! Although many others could be included, but it is still a very cool list!\n\n", "post": "https://www.reddit.com/r/programming/comments/85t1a3/gallery_of_programmer_interfaces/"}, {"body": "No Vim?", "post": "https://www.reddit.com/r/programming/comments/85t1a3/gallery_of_programmer_interfaces/"}, {"body": "Management won't release \"sensitive\" information that would enable employees to easily negotiate raises.", "post": "https://www.reddit.com/r/programming/comments/85wynn/why_dont_you_know_the_impact_of_your_work/"}, {"body": "Glad I'm a back end dev.\n\nAI can't autogenerate what an executive can't describe.", "post": "https://www.reddit.com/r/webdev/comments/85u588/sketchcode_a_deep_learning_model_that_takes/"}, {"body": "I wonder how semantic the markup is...", "post": "https://www.reddit.com/r/webdev/comments/85u588/sketchcode_a_deep_learning_model_that_takes/"}, {"body": "I got a bit over excited then because I thought you meant the graphics application. How well do you think this would fare when using an image of a website designed using sketch / PSD? By the way.. this is incredibly cool and amazing!", "post": "https://www.reddit.com/r/webdev/comments/85u588/sketchcode_a_deep_learning_model_that_takes/"}, {"body": "About damn time.", "post": "https://www.reddit.com/r/webdev/comments/85u588/sketchcode_a_deep_learning_model_that_takes/"}, {"body": "Has anyone tried this yet? I'm curious how fast it is on your typical home PC.", "post": "https://www.reddit.com/r/webdev/comments/85u588/sketchcode_a_deep_learning_model_that_takes/"}, {"body": "I tried the examples and they looked fine. The markup looks decent (it's just bootstrap).\n\nAnything different from the norm completely messes it up though.\n\n- Sample: https://imgur.com/a/Dk0it\n- Result: https://imgur.com/a/f6Yg6", "post": "https://www.reddit.com/r/webdev/comments/85u588/sketchcode_a_deep_learning_model_that_takes/"}, {"body": "Yes.\n\nAt the end of the day, most of us are creating meaningless things for money (not that I'm allergic to money at all), within the confines of a square concrete building that you have to go into which may or may not have a free coffee machine.\n\nSo it's only natural that every now and then you'll come in and think \"Oh this again\". Maybe you change your IDE color scheme, or get a fancy new desk toy but nothing will change the fact that you give the majority of your waking life to looking at a screen - even if you were self employed.\n\nAs to your question: I don't think avoidance if possible. I think this is generally how people at work feel. To expect to be engaged all the time at work is unrealistic, so I think the answer here is to re-frame your expectations and then just sort of, get on with it really.\n\nI think if you're like me, you might enjoy spending your weekends walking around the countryside, and reminding yourself that trees and plants and ecosystems are amazing, and that in the grand scheme of things we code rules for business logic or put pixels somewhere - and rock up to work on Monday with a fresh brain!\n\nPS please don't forget to get regular eye tests.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "I think everyone has different ways of medicating burnout, but the thing I hear most is taking time off. Sometimes you just need a couple days to get away from code, I try to take time off for fridays or mondays so I have a long weekend.\n\nAnother thing I hear a lot is just finding something outside of work that takes your mind off of whatever's stressing you out at work. That could be a hobby, video games, or even just doing your own side project. Everybody's brains work different so your best bet is to try a bunch of different things until you find something that clears your head.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "I try to get some exercise every day, 4 days in the gym, stretching/yoga and some (now indoor) cycling. It really helps to ease the stress. \n\nI had multiple colleagues with burnouts (e.g. staying 10+ years at the same company and feeling almost physically bad at the end in everyday work) and they told me that taking a longer break (e.g 2-3 months) helped them rest and \"freshen up\" their brain for their next challenge.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Make goals outside of work. People with families usually are more happy and fulfilled.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Typically only Monday - Friday.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Yes but then I look outside and I feel how grateful I am that I am employed at a desk job, getting to use technology instead of breaking my back and possibly dying outside in the cold. Even on a sunny day I'd honestly rather be inside most of the time, whether it be working on a computer for my job or unemployed at home working on a computer for myself.\n\nI picked web development because I enjoy it and it has a great future, and I wouldn't want to spend my time any other way than on a computer because I love computers and technology with my whole heart. I am madly in love with computers and technology, and I always will be. \n\nYou can and should do stuff outside of work after work - read a book, watch TV, watch a movie, play video games, hang out with friends, go to the mall or the beach, etc. You can work on personal projects and more learning too of course, but make sure you do other things outside of work as well. \n\nIt's hard when like for example you're sick for 2 weeks straight and your bosses are pushing and you are working through being sick but you just have to keep moving on.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "I take a day off. I guess happens every other month.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "For me it's mostly outside factors, today for instance is a big one.\n\nI had a big falling out of sorts with my fiance (not permanent) - today I can't even stand sitting in this seat, I love my job but we are all human and recognising what throws us off and being able to manage it is part of being a professional.\n\nI've spent most of the day thinking about what I'm going to do to deal with the issue and how to approach it - I'm way off my game.\n\nThankfully I'm not under pressure today, and most of my work is dealing with a client.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "I think accepting the burnout is step one. If you feel yourself getting listless and constantly forgetting what day it is, consciously ask, \"am I burning out?\" \n\nIf the answer just intuitively feels like a yes, it's a yes. I used to fight it for a while, but I just accept that now, and I'll consciously take a productivity dip. I willingly operate at like 60% productivity for a few days and do my best to relax my head. I take more walks around the office and drink more peppermint tea. I completely ignore this sub (except for modding duties), Udemy, my eBooks, etc. \n\nOnly by willingly cutting off exposure to code stuff, and catching up on sleep do I get myself out of the funk. I've come out of burnout after just 2-3 days many times by doing this, instead of spending 2 terribly stressful weeks tiptoeing that line of exhaustion and ultimately collapsing anyway.\n\nI also know how I work. In winter, I straight up burn out really easily - something about the colorless frigid landscape, where all the smells are deadened by frost really saps the life out of me. ", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "I used to feel like I had to constantly program to be considered productive. \n\nI would often have sessions from 10:30 to 3pm, then make my lunch and continue a new session while I ate from 3pm-6pm, then I'd begin my 2.5 hour commute home where I would work on side projects until midnight, wake up at 6 to answer calls and have stand-up before my 2 hour morning commute \n\nRinse and repeat 5 days a week. \n\nThen on the weekends, I would continue to answer client emails, work on stuff for several hours and if I had the time I'd go eat dinner with my girlfriend.\n\nI did that for a few years until one day, on the way to work something snapped. i turned around, went home and stayed in bed for 4 days. I didn't call in or anything. \n\nNow that I realized that my life is far more important than any client or promotion..I keep my session between 2-3 hours, take my full lunch where I avoid programming and watch youtube / play games. \n\nI leave work at my desk at 5pm every day (unless it's crunch time) and never work weekends unless it's absolutely needed and even then it's leisurely and after I've spent the day to my self.\n\nI'm much happier and way more productive now. =)", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Sometimes, tears are falling. Go sleep and continue tomorrow, and just leave a msg to ur team or client - they\u2019ll have to understand our health conditions too!", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "learn to meditate.\n\nalso, this helps much:  https://justgetflux.com/", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "I have a day like those every 2 or 3 weeks (probabily caused by the place I work for, and not entirely by the coding itself). What I do is, if it's possibile, ti work on different activities. In our office we have a lot of \"do it when there's nothing to do\" activities. When I have a bad day I just focus on those kind of activities. I think it's always better to do some low priority job than doing an high priority one but failing and doing it in the wrong way just because your mind won't let you focus.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "I do, right now I have a project that is one month late. I'm afraid it's more serious than \"can't stand looking at your monitor\" though. I've been working for almost 4 years without a week break.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Practice cross disciplines. Graphics design or UI/UX still complements your existing work - and can offer small routine breaks from programming. \n\nSwitching to the other side of your brain for a while can be tiring but very refreshing. ", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "I do things in the mountains where I'm an hour + from cell phone connection almost every weekend, it seems help.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "I work from home, respond to pings and emails, and spend the day making music to remind myself I'm not just a code monkey, as much as I like to joke about it.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Those are the days I lower my desk.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "So i used to have a hobby of reading books. But eventually that book reading moved on to my ipad. But what's the use of ipad not knidle if you can't do internet and that meant slack on my ipad.\n\nYear and a half ago, that was fine. Now, slack messages pulls me right back to work. \n\n\nSo i have created a new fortress of solitude. \nSo everyday after 4am i switch off my electronics till 10am in the morning (i do a late shift).\n\nI go for a run in the morning playing old hits on a super antique chinese knokoff-of-a-knockoff mp3.\n\nAnd in evening just start calling friends. Check up with them on what's they have been doing.\n\nI also do a lot of cooking. Difficult stuff that requires over night preparations.\n\nIf i may be a mister miyagi here, you have to find a zen point. Achieve inner peace. Realize that every small hurdle you face in your life can be overcome by dividing it into smaller managable packages. Taking one step at a time. ", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "My advice...\n\n_1. Lunch = Lunch_ \nNever a desk lunch, never a PM asking if you\u2019ve got a minute, not catching up on Twitter / Reddit.\n\nYou go out, either with your packed lunch or picking something whilst out. I\u2019d recommend the former as it gets you into good habits (financially + health-wise). Honestly, the whole \u201cmeal deal\u201d vibe (UK thing) is bullshit and not even good value or filling.\n\nFind a quiet spot and just enjoy your lunch. If you\u2019re by yourself, either just enjoy the ambience of your surroundings or some podcast you can mentally engage in (read: not music). You just want to make sure your mind can\u2019t race through work things. If you get a tag-along, then chat about non-work stuff.\n\nThen when you stroll into work with 7 mins to spare; enough time to gear up for the forthcoming session (coffee + water), mentally settle in and maybe ease yourself in by answering those emails that came in over lunch.\n\nI honestly think offices would be more productive and happier if you got a 5 min countdown timer from 11:55am for you to wrap shit up before your monitor powered down for the hour and you literally get kicked out of the building.\n\n_2. Screen down-time_\nFind something to do out-of-office that doesn\u2019t require a screen. No binge watching Netflix, or late-night coding / Reddit browsing. We spend like 8 hours daily at a screen, coming home to a different screen isn\u2019t a break.\n\n- Books\n- Podcasts (+in a darkened room)\n- Music (+if you can play an instrument)\n- Cooking\n- Exercise\n- Crafting\n- Boardgaming *\n\n* I like this one in particular because it scratches that logic/problem-solvey itch without a screen, but I get to meet new people / make new friends.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Taking a sick day or two for mental health restoration is always reasonable in my mind.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "i try to not code or look at code unless very necessary on the weekends", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "I think this is normal. There are some days where I really want to hop onto development (like today), and some days where I want to get into design (like I did for the past couple of weeks). I sometimes need to break up the monotony with different, yet related tasks.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Try to get some work from home time if you can. Makes a big difference for me.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Try not wanting to look at 2 monitors ;)", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "I'm in the middle of one right now. It's the end of my work day and i basically have gotten almost 0 work done today. ", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "While I know it cant apply to every work day, I do try and use a Pomodoro type system to make sure Im working but that Im also taking breaks when I should (stretch my legs, walk the dog, etc..).  For the longer break periods, or when I find that Im mentally spinning my wheels on a project (like the burnout the OP describes)... I take advantage of things and choose an activity that incorporates a different track for my brain to go onto.  Yes, it has to be different from whatever Im working on (in the OPs case it would be any activity that isnt involving code).  \n\nThe idea is that, when you return to your project, you might be (or feel) refreshed. :)", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "It's important to have time in your life that's not related to a monitor and keyboard. \n\nBalance is key.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Changing the location can help, and maybe getting used to a different workflow environment that doesn't depend on a proper monitor setup. It might slow you down first, but the freedom of being able to work anywhere might be a good trade off for your mental health.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "There's a support group for that. It's called 'everybody'. We meet at the bar. ", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Honestly, I'm going through that right now. I have a client project I should be finishing this week. Once that live and signed off on I'm going to take 2 days to myself. Do some photography, make use my my gym membership, continue working on my camper conversion. ", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Yeah, sometimes. I think everyone does, in any occupation. One Tuesday I ended up calling in sick and driving up to the mountains and eating a really good pie. ", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Gah, yes.  It gets bad sometimes.  I make myself go outside.  Usually a walk or something to clear my mind.  ", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "I try to watch something not screen like. Go for a walk or just close my eyes for a while. ", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Monday ", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Every day ", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Yep, I definitely get this way (and I know a lot of my co-workers do too).\n\nSeveral of my co-workers will get away for an afternoon at a local coffeeshop. Either they'll just work on their laptop (which isn't really getting away from the screen) or \"go offline\" and work on something that doesn't strictly require computer work. A coffee shop tends to be a bit too busy for me.\n\nI keep a sketch pad with me (just plain, white pages) and will occasionally leave my computer behind and find a place to work with just pen and paper. I'll write a blog post, do some complex diagraming, or just get some thoughts out.\n\nIt can be extremely freeing to have a good change of pace for an afternoon.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Best recipe to cool down from such burnouts:\n\nIn short: Sport/Cardio/Workout/Healthy food/Enough sleep/Nature/Socialization\n\nPersonally i go workout 3x/week, i eat healthier cuz of that, i go ride with a bike up the mountains every 2 weeks with friends during spring and summer. You can add swimming any time and skiing during winter if possible.\n\nAny cardio is awesome for your body and your brain. Drinking enough fluids and eathing healthy gives you enormous energy. Also sleep well and never let yourself chronically sleep less than 7 hours. You wont last long if you do unless your body is used to it and u feel no difference.\n\n", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Yes.  Today is that day.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Some days I am over the hill to code, others... I don't want to even entertain a fucking lick of it.\n\nSome days I just want to turn off my brain and watch some mindless TV (i.e. Trailer Park Boys) and get a good laugh, pop some THC edibles, or just... watch a bunch of sci-fi movies.\n\nToo much of a good thing can be really bad.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Yes, we all do. I just ride out the day, probably producing almost no code.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Yep - especially working with agencies.\n\nI won't touch my computer for the entire weekend unless I'm trying to learn something new.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "On those days, I work from home from my screen porch with a tasty beverage.  I find it's less about the screen, and more about the atmosphere, at least for me.  \n\nI also find it helps a lot to take a few small breaks during the day to take a short walk outside.  ", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Time off has been suggested a lot here, and it\u2019s right.\n\nI try to take a PC-free day a week. Most of those days, I\u2019ll head out, too. Pub, movies, friends\u2019 place, park, etc.\n\nThat one day brings me back fresh and bright every time.\n\nAlso, celebrating the wins. If you complete a big job, even if it\u2019s late; do something for yourself.\n\nFinally, I try to do something physical twice a week. Martial Arts is a great way at this; plenty of encouragement, works for any physical condition, and you won\u2019t be letting a team down if you can\u2019t make it.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Yes. From a professional side my boss is pretty cool, if I'm having one of those days I just work on something random of my choosing to get my brain going again. Sometimes it turns out to be useful, sometimes it's just a learning experience, either way I'm happy and he's happy.\n\nFrom a personal standpoint, break things up. Exercise, meet friends, do stuff to break out of your funk. \n\nA combo of the two and I'm right in a day or two. ", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "I rarely do any programming outside of work.  Striking a strict work/life balance really helps avoid burnout, imho.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "I exercise some other part of my brain by doing something physical, whether cleaning, going for a walk/run, or tinkering with some (non-computer) DIY project. ", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Sometimes with pressing deadlines I use /r/motivation . That subreddit alone has probably saved my job.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Yup. Then i play guitar.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Monday thru Friday.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "I do, but sometimes it's also the other way around, when coding makes me feel better when I am feeling bad.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "More when in was younger... and working on mind numbing things.  Consider yourself blessed it's only a day... if go weeks.\n\nI learned back then to try to relax at work... and have a side project I could pour myself into.  Two hours to do something stimulating, two hours at the gym, for to be social... or relax.\n\nNow that I'm older... I guide the project.  We do it my way, and I try to make sure we have fun so others don't have to be that way.  \n\nThose side projects have slowly evolved over the years... but are slowly growing in usage at the company I work for. \n\nOn weekends... get the hell outside.  Clear your mind.  I like to take along a notebook on hikes if ideas come to mind.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Yes, today.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Yeah I get small burnouts here and there, mainly due to the project or sprint taking too long for my liking or me being g stuck doing a shitty task nobody wants to do.\n\nThe worst part is sometimes you can't just skip the tasks as they're critical.\n\nMy only strategy is to power through it by outlining what I need to do by midday, 2pm,4pm and keep checking tasks off my list to make me feel some sort of progress.\n\nOtherwise I'll take the day off work because I won't be productive to anyone.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "I take Friday off, work out, go away for the weekend, hang out with friends, just get away from screens in general. OR I get really high all weekend and game all weekend, by the time next week comes around I\u2019m sick of being lazy. ", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "So, I've found there are two 'flavors' to this kind of thing:\n\n* Lack of motivation\n* Lack of cognitive resources\n\nThe former is much easier to deal with than the latter in a professional setting, but both are manageable.\n\n###Dealing with Lack of Motivation\n\nThis one is difficult to get into but gets easier the more you do it.  The answer is to _[just do some work](https://markmanson.net/do-something)_.  It doesn't have to be a lot of work or even good work.  Just write 5 or 10 shitty lines of code.\n\nRepeat as necessary, but don't overdo it.  If you're really not feeling it, give yourself a break and try again later.  Chances are you're starting to deal with the harder of the two problems.\n\n###Dealing with Lack of Cognitive Resources\n\nThis one sucks the most - at least, for me.  This manifests for me as feeling like I can't keep thoughts in my head or that my brain is \"running out of my ears\".  Generally, it just means you're tired and you've overtaxed your brain.\n\nThe solution here is simple but difficult to pull off in an office: _take a nap_.\n\nSomething you can reasonably do a couple times a day (as your coffee intake allows) is to take a [\"coffee nap\"](https://blog.bulletproof.com/coffee-naps-bulletproof-power-nap/).\n The short version is to drink a cup of coffee and rest for 15-20 minutes.  You don't need to actually sleep but you do want to be undisturbed with your eyes closed.\n\nIf you feel you've hit your coffee limit[1], just taking some time to relax and rest can be enough to get you over the hump and back into productivity.\n\n----\n\n^[1]: ^Realistically, ^you ^should ^limit ^yourself ^to ^2-4 ^cups ^of ^_black_ ^coffee ^a ^day.  ^The ^less ^junk ^you ^put ^in ^it ^the ^better ^it ^is ^for ^you, ^but ^too ^much ^caffeine ^is ^almost ^always ^bad ^for ^you.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Vacation.  Take a break, stretch your mind and body out, and go do something else for a while.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Go surf \ud83c\udfc4\u200d\u2642\ufe0f", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Regular exercise, healthy diet, and adequate sleep go a long way in preventing burnout. The blue light from staring at a screen can mess up your circadian rhythms and interfere with getting enough sleep, so try something like f.lux. Adjusting things like font, font size, and color contrast can help prevent eye strain which in my experience contributes to not being able to handle the monitor anymore. Take enough breaks too. Both small breaks throughout the day and longer breaks throughout the year. Weed is also good.\n\nFor me, switching to a different task when I start getting that frustrated, non-productive feeling prevents that feeling from growing into burnout. Even just switching to a different project is often enough. Also consider if the burnout is normal burnout, or you aren't getting satisfaction from the things you're working on. I love web development, but WordPress development gives me burnout much worse than other things. I can't take WP for more than 3-4 hours a day, it's just depressing to work with.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Depends. Do you work in an office or at home? If at home, do you ever go to a coworking space? If not try it out. Really gets you out of a funk and others can be motivating. \n\nIf you work at an office, offer to pair program with someone, especially if t is something that you don't know much about or you feel you can really teach somebody something while doing it. It always gets me out of a funk (especially with motivation to start working) if there is another person driving me forward. ", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "No, I don't have those days. I wish I would, I could get some real life things done occasionally.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Currently going insane trying to set up hiearchial carrying and traefik for my multiple docker containers as a reverse proxy. Dear God. It all seems so simple yet, so unbelievably hard.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "first read that as \"mother\", not monitor.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Not anymore... Laravel.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Yeah, every day. I need a break. And I need to stop committing to so many damn side projects.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "Weed is the answer, seriously.", "post": "https://www.reddit.com/r/webdev/comments/85s7f8/do_you_guys_have_days_in_which_you_cant_stand/"}, {"body": "The linked tweet was tweeted by [@wesbos](https://twitter.com/wesbos) on Mar 20, 2018 14:04:33 UTC\n\n-------------------------------------------------\n\n\ud83d\ude2e Did you know Chrome has a FaceDetector API? \n\n[Attached photo](https://pbs.twimg.com/media/DYvLKKMXkAAUxjf.jpg:orig)\n\n-------------------------------------------------\n\n^\u2022\u00a0Beep\u00a0boop\u00a0I'm\u00a0a\u00a0bot\u00a0\u2022\u00a0Find\u00a0out\u00a0more\u00a0about\u00a0me\u00a0at\u00a0/r/tweettranscriberbot/\u00a0\u2022", "post": "https://www.reddit.com/r/webdev/comments/85tql5/did_you_know_chrome_has_a_facedetector_api_and_it/"}, {"body": "[deleted]", "post": "https://www.reddit.com/r/webdev/comments/85tql5/did_you_know_chrome_has_a_facedetector_api_and_it/"}, {"body": "Oh boy, do I have the article for you! I wrote [Setting up a Brand New Mac for Development](https://www.taniarascia.com/setting-up-a-brand-new-mac-for-development/), which details steps for sensible defaults and installing all sorts of things properly, such as Node, Homebrew, SSH configs, Git configs, showing hidden files, etc.  If you don't want to read the article, I compiled it all in [this Git repository](https://github.com/taniarascia/mac)\n\nAfter that I'd read [How to Use the Command Line](https://www.taniarascia.com/how-to-use-the-command-line-for-apple-macos-and-linux/) if you don't know already. It'll give you a nice, brief, overview.\n", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "I recommend replacing your terminal with [iTerm](https://www.iterm2.com/), it's a lot better than the default one.", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "What were you developing on before?\n\nIf you're coming from Linux, it won't be all that different once you launch Terminal, and something like an IDE or editor you're used to is likely available.  If you're coming from Windows and Visual Studio...it's gonna feel like you got tossed in the deep end.  Everything is different.", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Here's what I use:\n\n[Homebrew](https://brew.sh/) is an excellent package manager which will make your life much easier in terms of installing needed libraries and software.\n\n[SequelPro](https://sequelpro.com/) is a freeware MySQL client that just works. Easy import/export, running saved queries etc.\n\n[Transmit](https://www.panic.com/transmit/) is an excellent file transfer app which handles a variety of connections. One major feature I love is being able to mount a connection as a drive. $45, but I feel it was worth every penny.\n\n[iTerm](https://www.iterm2.com/) A replacement for the default terminal. There's a variety of features and improvements that streamline terminal usage. I would try the default one and this one and see how you feel about it.\n\n\n**SSH**\n\nYou can save bookmarks by making a config file from terminal\n\n    nano ~/.ssh/config\n\nFormat an entry like so:\n\n    Host bookmark_name\n        Hostname 192.168.1.1\n        user your_username\n        IdentityFile ~/.ssh/your_key_file\n\nThen you can just type \"ssh bookmark_name\" and skip all the hassle of typing in the info.\n\n\n\n**Terminal Case Sensitivity**\n\nIf you're like me and don't have time to capitalize things for the case-sensitive autocomplete in Terminal use this command:\n\n    echo \"set completion-ignore-case On\" &gt;&gt; ~/.inputrc\n\nRestart Terminal to apply it.    ", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Are you comming from Windows or Linux? What is the stack you are going to be working on like?\n\nAre you fimilar with bash? If not start learning that, the bash CLI is very useful for webdev and is the default shell in MacOS.\n\nGenerally you can use brew to install things not part of the app store - which tends to be alot of CLI tools used in webdev - it works in a similar way to linux package managers so should be faimilar if you are comming from Linux.\n\nGenerally it should be fairly familar if you are comming from Linux, but is quite a bit different if comming from Windows. WebDev tends to use the CLI quite a bit - though your actual usage of it can vary. If you are comming from a Windows background then this will likely be less familar and I would suggest you checkout the Windows Subsystem for Linux to get a bash environment in windows and start playing around with it.", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "You'll need to acquire a bunch of tech stickers to put on the lid.  Other than that, I can't think of anything else you need to know for using a Mac for webdev.", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Lot's of great suggestions here. Here are some of my favourites (some of these are paid apps, but they've made my life as a developer easier and for me they are worth it):\n\n*  VS Code\n* [Airmail](https://itunes.apple.com/ca/app/airmail-3/id918858936?mt=12) - I dislike the native Mac iMail program, Airmail looks great, handles multiple accounts nicely, and integrates with Wunderlist, etc.\n* Sequel Pro\n* [Magnet](https://itunes.apple.com/ca/app/magnet/id441258766?mt=12&amp;ign-mpt=uo%3D4) - Lets you snap windows to fullscreen / half-screen, etc. \n* [Flycut](https://itunes.apple.com/ca/app/flycut-clipboard-manager/id442160987?mt=12) - clipboard manager, giving you a copy / paste history\n* [Pushbullet / Noti](https://noti.center/) - If you have an Android phone, this will help you get notifications on your mac\n* [Sketch](https://www.sketchapp.com/) - Great wireframing / vector editing program. Used by many designers, it's easy to get into.\n* [Snippets Lab](https://www.renfei.org/snippets-lab/) - Gorgeous code / snippet manager, giving you easy access to code you write regularly.\n* Iterm - We have many clients at work, and have to SSH into quite a few different servers. I've got iTerm setup with SSH bookmarks, so I can single-click login. [Here's a short tutorial](https://hiltmon.com/blog/2013/07/18/fast-ssh-windows-with-iterm-2/) on getting that setup. Iterm also has a built in password manager if you don't have SSH key pairs for that server.\n* Slack", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "\u201cSpectacles\u201d for OSX. OSX doesn\u2019t have that native drag feature that windows does where you can drag up to maximize, etc. spectacles will give you some keyboard shortcuts to be able to do that. ", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Be prepared for the slowdown on productivity as you learn the shortcuts. I have always worked on Windows and took a job that used Macs. \n\nThe main problem I experienced was that my productivity suffered at home because I'd unconsciously use Mac shortcuts on Windows and vise versa. It was really annoying, but after about 3-4 months I was good to go.", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Get [Alfred](https://www.alfredapp.com/). It's like spotlight on steroids. The two features I use most are the buffered clipboard and the integration (see below), but I also find it helpful to be able to search for [Chrome tabs](http://www.packal.org/workflow/search-safari-and-chrome-tabs) and [menu bar items](https://github.com/ctwise/alfred-workflows#menu-bar-search).\n\nAlso get [Dash](https://kapeli.com/dash). It's a documentation browser, with docsets for anything you could want, including browser APIs (CSS, JS, HTML), Node, Python, React, Angular, Gulp, Docker, and even Manpages. When I forget a function signature, I just cmd+space to Alfred, type its name, and I've got the docs in front of me.\n\nBoth cost a little money, but they're relatively cheap one-time purchases and well worth it.\n\nAlso, here's my list of must-have brew packages:\n\n* **bash, git**: Mac ships with really out-of-date versions of these\n* **bash-completion, coreutils, findutils, gnu-sed, homebrew/dupes/grep --with-default-names, nmap, telnet, watch, wget**: These are all packages that essentially duplicate Linux behavior. Because Mac is of the BSD lineage, some of these commands ship with different versions and some aren't included at all.\n* **jq, pstree, tree, the_silver_searcher, fzf**: handy tools I use frequently\n* **cowsay, sl**: Just for fun :)", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Make sure you're set up with a case-sensitive filesystem. This can be the source of obnoxious bugs as your code moves from your OS X development environment to your Linux production environment.\n\nBy default, HFS+ is case-aware (it preserves case) but not case-sensitive. It's fucking horrible.", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "I think this is a great resource to check out: https://laracasts.com/series/setup-a-mac-dev-machine-from-scratch", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Take a look at BBEdit. Native text editor that\u2019s been around since the 90s.", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Most of the useful tools have already been named, but I'd recommend [hyperdock](https://bahoom.com/hyperdock/)\nIt will show you all open windows in your dock when you hover over an icon. Besides that, it  comes with a useful window manager. I have bound window snapping to ALT+CMD+Arrowkey. \nBest 10$ I've spent on a mac tool ", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Create a bash profile,\n\nUse BetterSnap Tool,\n\nLearn the terminal commands as well as the macOS shortcuts.\n\ncommand + space all day. \n( This opens up your mac's search function. If I want chrome I press command + space. Then type 'Chr' and press enter. )", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Enable function keys and set appropriate shortcuts, primarily in chrome F5 for refresh and F12 for devtools ", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Be comfortable with using the Command Line in general.\n\nWindows can be forgiving as it has plenty of GUIs but MacOS is less lenient. ", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Use Boot Camp to install Windows on the Mac, carry on as you were! It was useful having Windows in a studio of mac-only workstations for various testing needs or any other Windows specific tasks", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Will they get you a Windows machine? I'd stick to what you're comfortable with.", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Can always load windows onto virtualbox via osx", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "If you\u2019re coming from Linux it won\u2019t be a huge adjustment. If you\u2019re coming from Windows you\u2019ll wonder why you didn\u2019t switch sooner.", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "In addition to other comments: I use [Valet](https://github.com/laravel/valet) to create a development enviroment wich uses less resources than Vagrant. You can also use Docker.", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Homebrew\n\nTmux\n\nOhmyzsh\n\nRVM/RBENV", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "- Homebrew: https://brew.sh/\n- ShiftIt: https://github.com/fikovnik/ShiftIt\n- mac2imgur: https://github.com/mileswd/mac2imgur\n- Karabiner-Elements: https://github.com/tekezo/Karabiner-Elements\n- The Unarchiver: https://itunes.apple.com/us/app/the-unarchiver/id425424353\n- LICEcap: https://www.cockos.com/licecap/\n\nOutside of the usual stuff you'll need directly and won't need suggestions for.", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "I recommend using the shell \"fish\" instead of bash https://fishshell.com/\n\nAnd its extension \"oh my fish\": https://github.com/oh-my-fish/oh-my-fish", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "I assume webdevelopment... to be honest its not that much\n\n* setup some nice terminal theme + ohmyzsh\n* setup ssh keys\n* get homebrew up and running\n* get virtualbox and look at modern.ie for testing for in windows browser\n\nRest is pretty straighforward and much depends of tools / language you use. \n\n* NodeJS stuff works quite well with node/npm,yarn\n* for PHP you'd have to do some tinkering with setting up local apache/php sever (i recommend setting it up from homebrew)\n* for ruby/rails get rvm and install latest ruby\n", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "If you're used to using Node, Grunt, Gulp, Create React App, Webpack, etc. It's likely going to be snappier than on Windows. I use both and my projects _always_ build &amp; watch/reload faster on OS X. (with relatively similarly spec'd machines)\n\nAm I alone in this?", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Welcome to the promise land, you'll never look back.", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "You need to know you will soon need to switch to linux to get any reasonable work done.", "post": "https://www.reddit.com/r/webdev/comments/85t5vl/switching_to_mac_for_new_job_what_do_i_need_to/"}, {"body": "Well written!\n\nAnd also -- not everyone is building new-fangled, fancy SPA's using React and Angular. Some of us...*ahem*...are still making our livings by building CMS sites using front-end frameworks that happen to be dependent on jQuery (Foundation, Bootstrap, etc.). I would love to ditch it, but being able to hit the ground running and drop in a readymade jQuery-powered accordion, tabs, or modal from my front-end framework is a nice convenience.\n\n...that, and I think my project manager would laugh in my face if I told him we needed to transition away from Foundation or Bootstrap in the name of saving 30kb on the front-end.\n\nWith some of the snobbery shown by people around here, you'd think jQuery ran over their cat.", "post": "https://www.reddit.com/r/webdev/comments/85u97a/lets_stop_making_it_cool_to_hate_jquery/"}, {"body": "I've been trying to teach myself vanilla JavaScript and it's great for simple DOM manipulation and logic as well as handling requests to my back-end. Unfortunately I wasn't able to figure out (or find a clear answer to) a problem where I needed to handle users using a barcode scanner which simulated an enter keypress on the scan.\n\nI needed to make the enter key create a new text input every time it was hit for dynamic additions to my form. The only thing I could find was a solution in jQuery and it worked great. I spent long enough trying to figure it out in vanilla JS and if I could just get it done using jQuery then it was totally worth it to use it and move on.\n\nThe thing I've been trying to avoid is \"Well, I'm using jQuery anyways so I might as well use this shortcut...\"", "post": "https://www.reddit.com/r/webdev/comments/85u97a/lets_stop_making_it_cool_to_hate_jquery/"}, {"body": "My own decline in jQuery usage started when I was looking for the source of a major memory leak.  I finally tracked it down to jQuery.each.  Replacing it with a for loop completely removed the leak.  That's just my experience.\n\nI will say that jQuery allowed me to work for a living when I was too green to understand how jQuery was doing what it was doing.  It was all wizard magic to me. \n\nAdditionally, I spent literal years working with document.getElementById and document.getElementsByTagName (document.getElementsByClass was not supported in some browsers) and manually traversing the DOM. It was gross and difficult and fragile. It was terrible work, and jQuery solved it beautifully.  jQuery revolutionized the way we did JavaScript.\n\nAs I grew as a developer and learned more about patterns and theory, I began to realize that I could understand how much of the  jQuery functionality was implemented. I also started to notice that when a jQuery method has different functionality based on what is passed in (variable parameters?), that the method will naturally need to be heavier to account to for the different cases. Over time, more of the jQuery methods seemed to become more open to different parameters, and more functionality seemed to be added to each \"module\", as it were (such as jQuery.ajax).  Things kept growing, and it kept.getting slower.\n\nAs the complexity of the apps I worked on increased, it became increasingly apparent that jQuery was starting to get in the way.\n\njQuery does a lot of things very well, but it should just be a tool.  Use it when it makes sense, but know when you're just using it as a crutch to keep from having to figure out how things work.", "post": "https://www.reddit.com/r/webdev/comments/85u97a/lets_stop_making_it_cool_to_hate_jquery/"}, {"body": "If I don't have a need to hold more than a mildly complex front end data but still need to do some 'frameworky' stuff, I'll still use JQuery over Angular. Horses for courses, even if that horse isn't popular. It might be a bit bloated, but it still performs better than Angular in simple cases.\n\nI've never understood why our community is so quick to criticize older tech, especially when it's proven and widely used.", "post": "https://www.reddit.com/r/webdev/comments/85u97a/lets_stop_making_it_cool_to_hate_jquery/"}, {"body": "I'm still relatively new on the field (2 years) and I'm wondering in what cases is pure Javascript 100% preferred on a project.\n\nThe size (or \"bloat\") seems very minimal compared to the increased workflow and easier selection. \n", "post": "https://www.reddit.com/r/webdev/comments/85u97a/lets_stop_making_it_cool_to_hate_jquery/"}, {"body": "&gt; You probably shouldn\u2019t use jQuery for a new project.\n\nYou probably should, unless you want to reinvent the wheel, badly.", "post": "https://www.reddit.com/r/webdev/comments/85u97a/lets_stop_making_it_cool_to_hate_jquery/"}, {"body": "I don't hate jQuery, I just don't have a need for it in a brand new project in 2018.", "post": "https://www.reddit.com/r/webdev/comments/85u97a/lets_stop_making_it_cool_to_hate_jquery/"}, {"body": "No", "post": "https://www.reddit.com/r/webdev/comments/85u97a/lets_stop_making_it_cool_to_hate_jquery/"}, {"body": "I disagree with all of the impostor syndrome posts at this stage of your career. When you graduate college you are a beginner. You are going to feel lost on your own because much of the work you have done so far has been directed by somebody else. When you are learning something new you are expected to have 15 tabs open looking up help docs to understand other help docs. \n\nAs you continue to grow, a lot of the stuff that you are looking up will (hopefully) become second nature. It's common for people to look up how to do stuff through google but I disagree with people who say that say it's normal for an experienced developer to be constantly on there. Your ability to grow as a developer and get experience beyond the basics depends on you being able to eventually solve many of the day-to-day problems you encounter on your own. \n\nThis will come with time so for now, just focus on understanding what you are doing instead of blindly copy/pasting solutions. Use the code you find as a reference and write it again yourself to solidify it.", "post": "https://www.reddit.com/r/webdev/comments/85tckm/am_i_a_proper_programmer/"}, {"body": "Half of the questions here exude [impostor syndrome](https://en.wikipedia.org/wiki/Impostor_syndrome). You're doing fine. We all Google and research on a daily basis. You never stop learning in this industry (fortunately or unfortunately).\n\nEDIT: Software development is not making cookies. If it's hard then you're probably doing it right!", "post": "https://www.reddit.com/r/webdev/comments/85tckm/am_i_a_proper_programmer/"}, {"body": "Welcome to programming, expect to feel like this forever and other people will only reinforce it, as the more you learn you will realize just how little you actually understand.\n\nEveryone feels like, all the time.", "post": "https://www.reddit.com/r/webdev/comments/85tckm/am_i_a_proper_programmer/"}, {"body": "You can either take the Stephen King definition on writing (and I'm paraphrasing because I can't be bothered to look it up): \"You can consider yourself a programmer when it pays your electric bill\".\n\nOr you can take the view that you're a programmer if you've programmed some stuff.\n\nIf you haven't done it professionally, or finished something that isn't a paint-by-numbers tutorial exercise - then I wouldn't consider you a \"proper programmer\". But then you've got to ask yourself why a stranger's opinion would mean anything on the matter.\n\nI'm assuming you're feeling self conscious about your aptitude because you have to watch videos / ask questions on Stack Overflow to get things done. If that's the case, I wouldn't worry too much - things will be different when you're doing it 8 hours a day, 5 days a week. ", "post": "https://www.reddit.com/r/webdev/comments/85tckm/am_i_a_proper_programmer/"}, {"body": "https://en.wikipedia.org/wiki/Impostor_syndrome\n\nI've been programming for at least 5 years now (maybe more) and I still use all kinds of documentation, tutorials and question sites. I still look up CSS selectors fairly frequently. I don't think anyone should ever stop, especially in web. It moves so quickly and new stuff is come and old stuff is going. If you don't watch some amount of these resources you'll fall behind. I don't know any competent programmer in the web industry that doesn't use some mixture of these resources as well.\n\nWhen in doubt, learn language agnostic programming skills like algorithms, data structures, architecture patterns, etc.", "post": "https://www.reddit.com/r/webdev/comments/85tckm/am_i_a_proper_programmer/"}, {"body": "Keep practicing, but you sound like you're well on your way.", "post": "https://www.reddit.com/r/webdev/comments/85tckm/am_i_a_proper_programmer/"}, {"body": "Yes you are now a developer. And are probably suffering from a form of [impostor syndrome](https://en.wikipedia.org/wiki/Impostor_syndrome) - this is quite common among developers.\n\n&gt; I watch Courses/Tutorials and ask loads of questions on Stack Overflow to build my applications.\n\nSo do most developers, especially when entering new areas or tech stacks. The learning never really stops as there is always something else you can improve upon. You do have to take a look back at what you have achieved to gain some prospective.\n\n&gt; I can never just sit down and program without using the above sources.\n\nThis comes with time but even experienced developers are constantly looking up references and tutorials to remind them selves of less familiar parts. More familiar parts you end up getting the hang of and start developing your own flows over time but there is nothing wrong with borrowing from others. I still quite often look at how others have solved a problem to learn about other approaches and figure out how to improve upon my own. Most of my best solutions come from glueing other peoples solutions together and improving upon them.\n\n&gt; Does anyone else feel like that?\n\nLoads of developers do - I sometimes do and I have been doing this for 5 years. You get use to it, you learn your limitations and do end up improving over time more often quicker then you actually realise. Remember to take a step back and look at what you have done/learnt. As long as you continue to improve and keep learning new things you will be fine.", "post": "https://www.reddit.com/r/webdev/comments/85tckm/am_i_a_proper_programmer/"}, {"body": "&gt; I watch Courses/Tutorials and ask loads of questions on Stack Overflow to build my applications. I can never just sit down and program without using the above sources.\n\n&amp;nbsp;\n\nNeither can \"proper\" programmers. There's always something you're going to need to look up. I often go back and forth between JavaScript and PHP and constantly have to Google how to do X in Y because I don't 'member syntax too good; but I know exactly what I want to do. Once you've built enough things, you start to see patterns and run into very similar problems.\n\nJust keep building things.", "post": "https://www.reddit.com/r/webdev/comments/85tckm/am_i_a_proper_programmer/"}, {"body": "Anyone can do anything with enough time\n\nDon't worry about it use the time for learning more or having fun or making tools or staying healthy ", "post": "https://www.reddit.com/r/webdev/comments/85tckm/am_i_a_proper_programmer/"}, {"body": "I'm on Stack Overflow pretty frequently and I've been coding professionally for 8 years, and as a hobby for like 7 years before that. So don't sweat it :)", "post": "https://www.reddit.com/r/webdev/comments/85tckm/am_i_a_proper_programmer/"}, {"body": "I recommend reading the documentation of the tech you are using, and always have it open while coding. ", "post": "https://www.reddit.com/r/webdev/comments/85tckm/am_i_a_proper_programmer/"}, {"body": "Don't sell yourself short. Be open to learn. You'll make mistake.", "post": "https://www.reddit.com/r/webdev/comments/85tckm/am_i_a_proper_programmer/"}, {"body": "Yes, you sound like a good beginner programmer to me. Resources will always be useful to you as a programmer and you will always keep learning. You are doing fine.", "post": "https://www.reddit.com/r/webdev/comments/85tckm/am_i_a_proper_programmer/"}, {"body": "yes", "post": "https://www.reddit.com/r/webdev/comments/85tckm/am_i_a_proper_programmer/"}, {"body": "I think that it is ok to be a little insecure about your knowledge, because this insecurity gives you proper motivation to learn even more. It is crucial to keep in mind that you don't know everything and that there is always something new to learn. I know few people who think they are know-it-all but they are really not. And this mentallity prevents them to grow as a professional.", "post": "https://www.reddit.com/r/webdev/comments/85tckm/am_i_a_proper_programmer/"}, {"body": "That's actually a good thing because it means you're trying to do stuff you haven't done before. This field is a lifetime of learning; if you were content to just crank out the same cookie-cutter stuff over and over, you'd be one of the ones who're getting replaced by the robots soon. :)", "post": "https://www.reddit.com/r/webdev/comments/85tckm/am_i_a_proper_programmer/"}, {"body": "I\u2019m currently a junior dev and it\u2019s not as bad as your thinking, depending on the company. At my company they give me the tasks they know I\u2019m capable of, like html, css, Js. Anytime other things need to be done you just have to explain your not familiar with it and hope that they are willing to teach you. Hope this makes you feel a little better, good luck! ", "post": "https://www.reddit.com/r/webdev/comments/85tzsa/just_applied_for_a_jr_dev_position_got_hit_with/"}, {"body": "This is my biggest fear when starting a new position.\n\nI always make sure they understand my skill level and I never feel weird asking for help. Better to ask and learn how to do it correctly rather than f it up and have to tell them.\n\nAlso, don\u2019t stop learning even though you\u2019ve achieved the job. Got handed a job? Spend a couple hours that night after work learning all about the characteristics of it", "post": "https://www.reddit.com/r/webdev/comments/85tzsa/just_applied_for_a_jr_dev_position_got_hit_with/"}, {"body": "Onboarding a new employee is expensive and time consuming. As long as you didn't misrepresent yourself in the interview, nobody is going to \"laugh you out of there.\" It's in both of your best interests to make the relationship work. Ask questions frequently, work hard to become familiar with skills outside of your comfort zone and you'll be fine.", "post": "https://www.reddit.com/r/webdev/comments/85tzsa/just_applied_for_a_jr_dev_position_got_hit_with/"}, {"body": "just want to point out that there are actual real life companies that want you to have \"5 - 10 years of experience\"  using tech like Swift and React which haven't even existed for 5 years\n\nthe job search/hiring process is ALL BULLSHIT and the one and only thing you need to know is that  **you can do it**", "post": "https://www.reddit.com/r/webdev/comments/85tzsa/just_applied_for_a_jr_dev_position_got_hit_with/"}, {"body": "So uh, one thing that was... glaringly obvious with your linked CV..\n\nYou just listed three of the code-alongs that you did in Colt Steele's Web Dev Bootcamp. None of those projects actually required you to do any thinking, and they all look exactly the same as *every other person that's done the same coding bootcamp*\n\nSo listing them as your projects does't make sense, and is a giant red flag. Those projects existed to teach you the basics of code/development and how to make something, but you're really supposed to craft it into something of your own. It's very similar to .. watching Star Wars, then handing a typed version of the script to a film studio and saying \"Hey, look what I wrote.\" \n\nModify these projects to be something uniquely yours. Any recruiter can google \"Yelp Camp\" and see the **45,000** other versions of Yelp Camp that look exactly the same. The last time I saw this (because it gets posted often) I suggested modifying it to being an app called *Sushi Haven* and is focused on Sushi restaurants around the world. Do *something* to make it yours.\n\nhttps://www.google.com/search?ei=sX-xWtSgFML4jwSp-qOYDg&amp;q=yelp+camp&amp;oq=yelp+camp&amp;gs_l=psy-ab.3..0l10.1264.2982.0.3262.11.6.1.0.0.0.140.410.5j1.6.0....0...1c.1.64.psy-ab..7.4.246....0.v19bKNI-jR8\n\nEveryone's got the exact same project. ", "post": "https://www.reddit.com/r/webdev/comments/85tzsa/just_applied_for_a_jr_dev_position_got_hit_with/"}, {"body": "If they are hiring you, they fully understand that you are new - especially when you are explicitly being hired for a junior position. ", "post": "https://www.reddit.com/r/webdev/comments/85tzsa/just_applied_for_a_jr_dev_position_got_hit_with/"}, {"body": "Congratulations bud, looking forward to clicking my own \u201cSubmit Button\u201d. Similar situation, self taught over the last 14 months and at this point just waiting for my Hawaii trip next month with my wife before I start applying and leave my current job. Very much looking forward to the culmination of sticking with this for so long and having it eventually pay off. \nWebsite looks great in my opinion. Best of luck. Would love a 6 month update. ", "post": "https://www.reddit.com/r/webdev/comments/85tzsa/just_applied_for_a_jr_dev_position_got_hit_with/"}, {"body": "As someone who has been in development, in all capacities, for a long ass time... this is completely natural and just a healthy dose of self awareness, knowing that there is a lot to learn. Also, it never goes away.\n\nAs a junior dev, the one thing you have to do is make sure that you pay attention and act on the feedback you are given. A lot of it will just be around process. Put in some extra effort now and again to address the weaknesses your manager should be telling you through some constructive criticism, and you are gonna be just fine. \n\nJunior devs are an investment, we know you are not going to be rockstars right away; we know you have a lot to learn. As long as you know that too, and act accordingly, you are going to progress.", "post": "https://www.reddit.com/r/webdev/comments/85tzsa/just_applied_for_a_jr_dev_position_got_hit_with/"}, {"body": "Was in same boat just 4 weeks ago when I got the job for a Jr position and I can honestly say that if the company hired you as a Jr Dev, they know what they are getting. I mean this is all assuming they are competent. Don't sweat it too much bro - everyone goes through this. You'll be alright :)", "post": "https://www.reddit.com/r/webdev/comments/85tzsa/just_applied_for_a_jr_dev_position_got_hit_with/"}, {"body": "Looking at your projects page I can see you enrolled it Colt Steele\u2019s Web Developer Bootcamp course. If it makes you feel more at ease I took the same course to learn front-end development. I actually didn\u2019t even touch the node.js portion before I started sending out my resume. I did however take the time to build out some of my own projects using vanilla JS, six total. I also took a month off to write a resume, cover letter, and practice interview questions. \n\nColt is a great teacher and everything in that course is what you will need in order to succeed as a junior developer. If you\u2019re unsure about your ability to develop with JS then create a few small personal projects, it will not only improve your understanding of it but it will also inspire confidence. I also highly recommend checking out the Front-end developer handbook 2018 (https://www.gitbook.com/book/frontendmasters/front-end-developer-handbook-2018/details), it will prepare you for your interviews and help prevent getting blindsided by something you weren\u2019t aware of. \n\nI\u2019ve been at my current job for about a year now and can honestly say don\u2019t worry too much about imposter syndrome. It occurs from time to time but as long as you know the fundamentals, use best practices, and are willing to continually learn you\u2019ll be fine. Basically, you can do it! I wish you the best of luck out there.\n", "post": "https://www.reddit.com/r/webdev/comments/85tzsa/just_applied_for_a_jr_dev_position_got_hit_with/"}, {"body": "You're fine. There are no big leagues. Working at jobs over time is a process by which you get that this is true. I have worked at a few companies you have heard of, worked with celebrities, been to fancy parties with famous people - all of the things I pictured when I pictured \"the big leagues\" as a young adult.\n\nBehind the scenes, everybody is scrambling when a deadline is approaching. Everybody has used a table tag to resolve a layout issue with five minutes to go. Everybody has mistreated data, though hopefully not at scale. And everyone has made expensive, time wasting mistakes. The number of hours I have spent searching for a missing semi colon probably eclipses the number of hours I spent writing passable code.\n\nHere's the good news: they posted the answers online for all of us. A junior dev should be more aware of what they don't know than what they do know because there's a lot more of the former than the latter. Imposter Syndrome is like the ugly kid brother of self awareness, and it is hard to tell those guys apart when you get a little agitated or stressed.\n\nI have no idea if you are good enough for the job, but it sounds like you are asking the right questions, carrying yourself with awareness and presence, and trying to figure out how to be better. That's about all I want from a junior dev, minus the basics of html, css, and js. So finger in the wind opinion of a complete stranger on the internet is - you'll either get the job or one like it soon.\n\nMuch luck!", "post": "https://www.reddit.com/r/webdev/comments/85tzsa/just_applied_for_a_jr_dev_position_got_hit_with/"}, {"body": "I\u2019m actually feeling like that right now buddy. 3 months in - First time full time web dev job coming in from freelance - dream job for real! However I have anxiety attacks at night because I don\u2019t know how to do something and I\u2019m starting to get behind because things take me a long time and I\u2019m shit at estimating. I\u2019m up at night researching shit I don\u2019t know how to do at work. It\u2019s hard focusing during the typical 9-5. I\u2019m exhausted mentally at the end of the day. Everyone is so much fucking smarter than me it\u2019s quite intimidating. You feel like you\u2019re drowning a bit. But now it\u2019s starting to feel a little better, the anxiety is going down, and my typical tasks are being done much quicker than before. Just make sure you\u2019re always improving, show an interest in what you do, be personable to people, and it will be REALLY REALLY hard to fire you. It\u2019s an awesome work culture and every day is a blessing because I could be doing fucking screen porches in the sun 9-5 struggling to eat  but instead I\u2019m working with cool hipsters who know the internet and memes, I get to drink as much coffee and tea k cups as I want, and there are snacks everywhere for free lol! It\u2019s a wonderful opportunity in anyone\u2019s life and I think it\u2019s worth it to stick it out and fight through those negative feelings you\u2019re having. It\u2019s worth it!", "post": "https://www.reddit.com/r/webdev/comments/85tzsa/just_applied_for_a_jr_dev_position_got_hit_with/"}, {"body": "If you lnow linux and are comfy on a cli you will be far ahead of most mid level compsci grads.\n\n", "post": "https://www.reddit.com/r/webdev/comments/85tzsa/just_applied_for_a_jr_dev_position_got_hit_with/"}, {"body": "This imposter syndrome stuff is getting ridiculous.", "post": "https://www.reddit.com/r/webdev/comments/85tzsa/just_applied_for_a_jr_dev_position_got_hit_with/"}, {"body": "This helped me wrap my brain around machine learning better than anything else I've read or seen.\n\nPerfectly explained by such a simple problem with a complex solution.", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "It's not terribly robust or anything but hey it's fairly interesting and maybe some of you might have a use for it.", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "Perfect simple example for getting your feet wet with machine learning.\n\nAs an aside, I write a lot of JS -- didn't realize trailing commas were valid in arrays. They definitely are not in JSON. I honestly feel embarrassed. I can't get on board with the no semicolon style, though.  ", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "This guy. He is so god damn good doin these videos. Whenever I wanted to learn something, I always checked first his videos because I knew they were good and wouldnt crush my hopes for wrapping my head around something in first 2 minutes. \n\nAnd also his web development overview guide is the best one I have seen. ", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "Oh my gosh. My eyes have been opened. I am going to do so much with this!! Thank you!! ", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "I have never done ML before but in this case, does it mean that it would need to retrain it every time I run the script? would it be possible to train is once and continue training it with more data than retraining it every time ", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "Amazing introduction to JS Machine learning. Thanks!", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "That's so interesting. Definitely spend some time playing with this library", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "I'm so excited to try this out ", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "This is great! Going to fiddle with brain.js tonight now. Thanks for sharing!", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "If anyone is interested in ML in JS, checkout [this comprehensive guide](https://www.robinwieruch.de/machine-learning-javascript-web-developers/) which was recently published about the status quo of Machine Learning in JavaScript.", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "Thanks for sharing! I\u2019ve tried to play around with ML before and just couldn\u2019t get my head around how to use it or why I would really want to in the real world.", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "Extremely noob quesiton, but would anyone be able to PM me to help me get this started? I'm learning web dev but haven't made it to node.js yet\n\nnvm, got it working!", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "Okay, turns out in struggling to find a use for this now. What can I do with it? It seems that brain.js only accepts numbers for the input so I have to somehow come up with data from my website that is all numbers only. I was hoping to use it for suggested products or a search function or something, but i cannot find a use for this and there are no other examples apart from this one out there. ", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "I was under the impression that the machine would be given the desired output and then you let it run for x ammount of time for it to teach itself rather than a human giving it training. Is that something else?", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "I get that this is a machine learning video, but this example was an odd choice considering it's a problem that has been solved since colour TVs were invented.\n\nhttps://gist.github.com/jonschoning/5283250 (not mine)\n\nThe math behind it is using the colour space of analogue signals to extract the luma value (the Y in YIQ) into black and white so that black and white TVs don't suffer when a colour transmission is being broadcasted.\n\nhttps://en.wikipedia.org/wiki/YIQ\n\nGood video otherwise! ", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "Wow thanks for sharing this, great value ", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "What is that 3 line symbol on line 64 at the 9:55 mark? It looks like a ternary statement but I don't recognize that symbol. And how do I type it?", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "This a great introduction to machine learning. Thank you!", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "great tutorial. Submit it to [quickcode](www.quickcode.co) ", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "I do not understand that everyone is worn with this WEB machine learning? It's impossible to use in reality! A web browser can not replace big CUDA CLASTERS!", "post": "https://www.reddit.com/r/webdev/comments/85l2mx/javascript_machine_learning_tutorial_for_beginners/"}, {"body": "Jr what? Frontend developer? QA? Sysadmin? (only one of those makes sense as a *requirement*)\n\nMore than likely they use AWS and would like to know that you're aware of it and what it is; if ***any*** company is giving you access to a production server as a Jr, run tf away asap!!!\n\n", "post": "https://www.reddit.com/r/webdev/comments/85w3rx/are_juniors_expected_to_know_aws/"}, {"body": "The cost is not astronomical (well depending on your needs). I find Amazon to be among the cheapest providers for many services. Also I'm pretty sure you can have a billing cap.", "post": "https://www.reddit.com/r/webdev/comments/85w3rx/are_juniors_expected_to_know_aws/"}, {"body": "This makes sense, and I get what the article is saying, but would it be lowering my standards to allow an idea I agree with use a fable I know is false as the foundation for its argument?\n\n&gt; While some 19th-century experiments suggested that the underlying premise is true if the heating is sufficiently gradual, according to contemporary biologists the premise is false: a frog that is gradually heated will jump out. Indeed, thermoregulation by changing location is a fundamentally necessary survival strategy for frogs and other ectotherms.\n\nhttps://en.wikipedia.org/wiki/Boiling_frog", "post": "https://www.reddit.com/r/webdev/comments/85s7w0/boiling_frogs_about_lowering_your_standards_to/"}, {"body": "\"embracing gradual, frequent changes is (should be) the absolute baseline here\"\n\nIt's an oxymoron, a baseline is fixed by definition. Without it you're building atop a Jenga puzzle wondering when the bottom will fall out.", "post": "https://www.reddit.com/r/webdev/comments/85s7w0/boiling_frogs_about_lowering_your_standards_to/"}, {"body": "\"Routing\" basically has two meanings in this context.\n\nIn client-side JS, the router updates the contents of the URL bar, and may tell other parts of your app to change what's rendered in the DOM accordingly. It doesn't load a whole new page.\n\nOn the server, like in Express, the routing determines what's sent in response to an incoming page load request. ", "post": "https://www.reddit.com/r/webdev/comments/85wnie/using_angular_with_expressjs/"}, {"body": "They actually do have some overlap. That's why it's confusing. They achieve similar things but in different ways.\n\nA lot of developers use both; i.e. a web server and a front-end framework.\n\nWhich one to use? It all comes down with your needs and what you're trying to achieve.\n\n## Server-side\n\n\ud83d\ude42 Powerful\n\n\ud83d\ude42 Usually easier\n\n\ud83d\ude42 Generally sending only what the client needs\n\n\ud83d\ude20 Navigating around causes a full page refresh\n\n## Client-side\n\n\ud83d\ude42 Once loaded, very fast &amp; responsive\n\n\ud83d\ude42 Seamless page transitions\n\n\ud83d\ude20 Can be a big initial download (javascript files)\n\n\ud83d\ude20 Routing and navigating can be tricky to manage\n\nMy general strategy is to use the web server for routing for the most part and then utilise a front-end framework for any \"heavier\" UI elements that could take advantage of a lot of javascript.", "post": "https://www.reddit.com/r/webdev/comments/85wnie/using_angular_with_expressjs/"}, {"body": "Express is basically going to front end your REST API, nothing more. You'd want to setup your Express REST API to handle CORS calls, or you'd want to drop an Apache/nginx/whatever reverse proxy in front so that your Angular app doesn't run into same origin problems. \n\nIf you were to build an Angular app front-ending someone else's API (for example, Bungie has a neat REST API for the game Destiny that I run some hobby sites with) you can get away with skipping the Express part entirely.\n\nNote that Express does a LOT more than just front ending a REST API, but in this case that's pretty much all you'd want to use it for (so you could use something more targetted like Restify instead, if you want).", "post": "https://www.reddit.com/r/webdev/comments/85wnie/using_angular_with_expressjs/"}, {"body": "I originally found [OpenAQ](https://openaq.org) through [this excellent AMA](https://www.reddit.com/r/science/comments/5m66l0/science_ama_series_were_the_openaq_team_building/). The project is an open-source attempt to collect the world's research &amp; government-grade air quality data to, as they put it, *\"fight air inequality through open data\"*.\n\nMy small contribution to their work came about because I wanted something like a weather app, for air quality in the cities I was interested in. The result is **cityAQ**, which you can try out [here](http://cityaq.com). Because it follows Progressive Web App practices, and makes use of Service Workers, the experience is fairly native-like. On Android right now, and thanks to [big Safari improvements](https://developer.apple.com/library/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_11_1.html), on iPhones very soon.\n\nOn PWA-friendly browsers (Android, Chrome, Firefox right now), you should be prompted to add the app to your home screen, upon your first or second visit. From there, the app will open in its own window, have a custom splash screen, and most interestingly, leverage offline functionality. Try it out - *I'd love any feedback* - by viewing some cities, then going offline, and refreshing.\n\nBuilt with Angular 5, which has some useful Service Worker helpers. Let me know what you think, and if OpenAQ's mission is intriguing to you, [their Slack](https://openaq-slackin.herokuapp.com/) is a great community, &amp; very friendly.", "post": "https://www.reddit.com/r/webdev/comments/85wfxo/pwa_using_opensource_air_quality_data_compare/"}, {"body": "Why not set up a trust with an attorney and prepay domain names 10 years in advance? It sounds like you've got enough money to do something like that so that's certainly an option. An attorney can be trusted to look after you are a state or fund and see that your wishes are executed to the letter.", "post": "https://www.reddit.com/r/webdev/comments/85xc63/serious_i_have_a_bunch_of_domains_and_websites/"}, {"body": "VS Code. Frequent updates, great community support, and runs smooth as butter.", "post": "https://www.reddit.com/r/webdev/comments/85wnf8/which_text_editor_and_why/"}, {"body": "Vim, because I like it and have been using it for twenty years now.", "post": "https://www.reddit.com/r/webdev/comments/85wnf8/which_text_editor_and_why/"}, {"body": "I'm only willing to do so much customization re: key bindings and such, so my answer changes depending on what platform I'm on.\n\nOn a Mac, I choose Atom, because the ability to run eslint and flow continuously on the entire project, rather than just the open files, is powerful. Also, it has a better search.\n\nOn Linux, though, I choose VS Code because the default keybindings in Atom on Linux suck. I appreciate the automatic imports and overall speed that VSCode provides.", "post": "https://www.reddit.com/r/webdev/comments/85wnf8/which_text_editor_and_why/"}, {"body": "I started using Atom and I really like the overall look and feel of it. I used Sublime for a few years but for some reason everytime I type in a JS file, the colors change. It's jarring and the pop up got really annoying after a while. \n\nI hear good things about VSC and need to check it out more but Atom and its packges are pretty much perfect for me rn. ", "post": "https://www.reddit.com/r/webdev/comments/85wnf8/which_text_editor_and_why/"}, {"body": "I use Sublime. I recommend paying for it--it's a good product. What sets it apart for me is speed. I have used Vim but found myself spending a lot of time configuring it to do what Sublime does. Didn't make sense, so I switched back to Sublime.", "post": "https://www.reddit.com/r/webdev/comments/85wnf8/which_text_editor_and_why/"}, {"body": "Eclipse ide + darkest dark theme. It have everything i need to get the job done. Note you need at least 2gigs of ram just for the editor", "post": "https://www.reddit.com/r/webdev/comments/85wnf8/which_text_editor_and_why/"}, {"body": "I used to use Sublime 3. But since i didn't pay for it and hate the license popups. I switched to Textmate 2. Love it. Very lightweight + fast. \nOnly thing that sucks is that there isn't a huge amount of plugins like sublime ", "post": "https://www.reddit.com/r/webdev/comments/85wnf8/which_text_editor_and_why/"}, {"body": "I personally like PostgreSQL a lot, and find it is really easy to install and work with. I have used it in conjunction with sailsjs (framework on top of express in node) on some personal projects, with rails on production code, and various other small projects including php.\n\nSailsjs, Ruby on Rails, and CodeIgniter have ORMs that help you map your data to objects. Plenty of other frameworks do the same. They will also map to other databases, so it\u2019s really a matter of what you prefer.", "post": "https://www.reddit.com/r/webdev/comments/85y960/simple_nodeexpress_app_how_to_manage_my_database/"}, {"body": "I am definitely a mediocre developer. I am even a mediocre commenter because I only skimmed the article before responding. One thing that I do a lot is google a problem and get something working with borrowed code that I often don't 100% understand. Before I put anything into production, however, I will go through the code and rewrite it, which forces me to understand what it does. If there's something that I still don't understand, it's usually because I need to study an interface or API. I find that this is a good learning technique since it exposes me to other people's algorithms, as well as coding styles, but forces me to recreate a solution that I actually understand before I complete my tasks.", "post": "https://www.reddit.com/r/coding/comments/85stsv/i_am_a_mediocre_developer/"}, {"body": "Funny thing is 3 years into my now 12 year career I thought I was an \"intermediate\" developer. Today I still feel intermediate and less confident about that categorization by the day. We get exposed to more and more and realize we know less and less. I really look in awe of \"advanced\" engineers and really despise crumby engineers because of it.", "post": "https://www.reddit.com/r/coding/comments/85stsv/i_am_a_mediocre_developer/"}, {"body": "\"I am such a mediocre developer that I know good practices, good tools, good methodology, good deployment, good testing, and where to find answers when I have an issue\". So much BS.\n\nWhat's your next article?\n\n- \"I suck at coding, that's why I wrote my     programming language that makes everything dead simple\"?\n- \"My code is so bad it takes me only 200 lines to do X while gurus do it in 1000\"?\n- \"I'm the worst at frontend so I let my AI design stuff for me\"?\n- \"I'm bad at debugging so I write code without bugs in the first place\"? \n\nCome on. Please have the decency to rename your article \"I'm a good developer because:\"\n\nKnow what a mediocre developer is?\n\n- They can't freakin learn something new\n- They never reuse code in a smart way because they can't see the good general patterns ...\n- ... though they reuse very specific pieces of code that aren't made to be reused, and that result in a ton of bugs, but those ones were easy to identify as solving the same thing\n- They can't google anything because they don't have the terminology\n- They can't properly use their tools. They never took the time to learn them. Or they don't even know that tools for job X exist.\n- They make complex things that are simple because their thinking is confused and convoluted", "post": "https://www.reddit.com/r/coding/comments/85stsv/i_am_a_mediocre_developer/"}, {"body": "Pretty clean explanation. You should consider sharing this in [/r/gamedev](https://www.reddit.com/r/gamedev/)", "post": "https://www.reddit.com/r/coding/comments/85nmhj/a_simple_explanation_of_bitmasks_with_example/"}, {"body": "Teaches a beginner with basic C++ skills how to download the Orx library, set up a project and how to write a 2D UFO game.", "post": "https://www.reddit.com/r/coding/comments/85qm4x/tutorial_how_to_write_a_2d_ufo_game_with_the_orx/"}, {"body": "https://github.com/github/licensed", "post": "https://www.reddit.com/r/coding/comments/85j57z/github_licensed_aims_to_make_it_easier_to_comply/"}, {"body": "How do I know if two licenses are compatible with one another?", "post": "https://www.reddit.com/r/coding/comments/85j57z/github_licensed_aims_to_make_it_easier_to_comply/"}, {"body": "Can anyone recommend any good books on resilient system design?", "post": "https://www.reddit.com/r/coding/comments/85cb0r/building_resilient_distributed_systems_at_scale/"}, {"body": "Is something like this for Facebook messenger possible?", "post": "https://www.reddit.com/r/coding/comments/85a3hq/telegram_client_on_your_terminal/"}, {"body": "What console font do I need to display all Icons correctly?", "post": "https://www.reddit.com/r/coding/comments/85a3hq/telegram_client_on_your_terminal/"}, {"body": "I don't see the point to writing an article on this when there is already an official guide. This seems like blogspam to me.\n\nhttps://developer.android.com/training/permissions/requesting.html", "post": "https://www.reddit.com/r/coding/comments/85anmz/learn_how_to_check_for_multiple_runtime/"}, {"body": "There are no videos", "post": "https://www.reddit.com/r/coding/comments/859un6/code_overflow_a_youtube_channel_with_videos_about/"}, {"body": "I would suggest having at least one video before promoting your channel.", "post": "https://www.reddit.com/r/coding/comments/859un6/code_overflow_a_youtube_channel_with_videos_about/"}, {"body": "How often it's going to be New v\u00eddeos?", "post": "https://www.reddit.com/r/coding/comments/859un6/code_overflow_a_youtube_channel_with_videos_about/"}, {"body": "What a generic name, also you're promoting your channel which doesn't even have a video. That doesn't make sense?", "post": "https://www.reddit.com/r/coding/comments/859un6/code_overflow_a_youtube_channel_with_videos_about/"}, {"body": "Every single comment is negative on how the channel has no videos. 12 upvotes (at the time of writing). Seems legit. /s", "post": "https://www.reddit.com/r/coding/comments/859un6/code_overflow_a_youtube_channel_with_videos_about/"}, {"body": "It's cool and everything, but I don't think it's very useful tbh", "post": "https://www.reddit.com/r/coding/comments/853aso/idea_nonverbal_algorithm_assembly_instructions/"}, {"body": "I *kind* of get some of these... But not clearly enough to implement it as.\n\nBut it seems like the kind of thing that you have to understand it to think it's clear to everyone else, making it useless as a teaching tool. Maybe I'm being too harsh, but it's not at all helpful for me.", "post": "https://www.reddit.com/r/coding/comments/853aso/idea_nonverbal_algorithm_assembly_instructions/"}, {"body": "https://i.imgur.com/RS1IUit.jpg", "post": "https://www.reddit.com/r/coding/comments/853aso/idea_nonverbal_algorithm_assembly_instructions/"}, {"body": "Read that as IKEA - nonverbal algorithm assembly instructions and assumed you were talking about a paper manual for building a new bookshelf or something", "post": "https://www.reddit.com/r/coding/comments/853aso/idea_nonverbal_algorithm_assembly_instructions/"}, {"body": "Advantages? Hardly any, other than not having a college debt. I'd rephrase it as, self-taught developers are no worse than those with a degree and oftentimes are better. We should not stick to the idea that CS degree is a holy grail that magically enables a person's ability to code. Programming is one technical medium where a student can learn on their own. There's no need for a research lab and a professionally trained tutor, just your laptop and access to the internet. Your machine is your one training camp with no penalties for mistakes. And eventually, one doesn't need a license to carry out programming work.\n\nUniversity degree is merely a proof of possessing enough knowledge to be competent as an IT specialist. And even yet, it's very individual. Can you get same amount of knowledge by learning on your own? I've got no reasons to doubt it. You mentioned the importance of self-learning in the article and that's pretty much the entire point. You will learn stuff when you want to learn stuff. College or an uni are just tools. They provide all the necessary courses, lectures and learning material, but it's up to a student to practice daily and put great effort into it. The main benefit of educational facilities is that there are teachers that will guide you in the right direction and help avoid many mistakes on your way **as long as you want it**. That's a significant advantage, often overlooked, and yet, those who don't care during their college years will miss this opportunity. Any school can be of great help when treated properly.\n\nThis particular line I disagree with:\n&gt; You\u2019re making mistakes, lots of them, and instead of having them pointed out to you, you\u2019re experiencing their consequences and learning how to adapt to those failures.\n\nI can't see how this is any good. Yes, you'll *have* to make your own mistakes to learn a lesson, but it's generally better to have someone to explain why you've made a particular mistake. They'll help you see a bigger picture and not make this mistake later on, while otherwise you can only rely on constant trial and error. Granted, there are communities out there full of enthusiasts happy to help, but they're also human beings and won't always be there for you.\n\nAt the end of the day, both uni students and self-taught devs can reach the same level, but the former have more opportunities to get there faster. Being self-taught doesn't mean you don't know something, it means you've got no legal paper to prove it. One might argue that finished projects, contributions, talks and github repos outweigh old-fashioned diplomas. And, when it comes to programming, it makes sense.\n\nAs for the other topics like \"job is not just tech knowledge, it's also a ton of communication etc\", well yes, job is not just \"you vs. the teacher\", it's \"you as an employee in a company\" and that's something your uni won't teach you any of the relevant skills. Your advocating of self-taught approach is based on an assumption that then one has more time to improve more useful and practical skills. But these are not mutually exclusive. I had classmates that were freelancing during their university years and they were obviously performing better on a job later. That's something you won't learn any other way, that's what actual working experience is for.\n\nAs for job satisfaction, that's a big topic for debates lately about whether software engineers should be passionate about programming. To me, the trends to hire \"passionate\" developers is why I can't take this industry seriously sometimes. It's a job, not a hobby. To me it's more important when an employee has solid fundamental knowledge in their field, not someone who's just learned a new JS framework and realized how cool it is.", "post": "https://www.reddit.com/r/coding/comments/85auqo/the_advantages_of_being_a_selftaught_developer/"}, {"body": "What's with using katakana for bullet points? Super distracting.", "post": "https://www.reddit.com/r/coding/comments/84v11w/code_duet_finding_a_partner_for_pairprogramming/"}, {"body": "I think this is a really cool idea, FWIW. ", "post": "https://www.reddit.com/r/coding/comments/84v11w/code_duet_finding_a_partner_for_pairprogramming/"}, {"body": "Pair programming? I thought that was a thing of the past.", "post": "https://www.reddit.com/r/coding/comments/84v11w/code_duet_finding_a_partner_for_pairprogramming/"}, {"body": "Pair programming is retarded. Here! I said it.", "post": "https://www.reddit.com/r/coding/comments/84v11w/code_duet_finding_a_partner_for_pairprogramming/"}, {"body": "Great video.  \n\nMy only suggestion is to slow down the mouse movements when providing demonstrations where you will have people following along. \n\nKeep up the good work.   ", "post": "https://www.reddit.com/r/ReverseEngineering/comments/85t4um/unpacking_ursnif_hasherezade/"}, {"body": "It starts unpromising, but gets _very_ interesting midway.", "post": "https://www.reddit.com/r/ReverseEngineering/comments/85mjq5/game_boy_gb_reverse_engineering_presentation_from/"}, {"body": "Any feedback would be greatly appreciated.\n\nTwitter: https://twitter.com/_qaz_qaz", "post": "https://www.reddit.com/r/ReverseEngineering/comments/85l5to/reversing_ibank_trojan_injection_phase/"}, {"body": "I love reading these\n\nThanks.", "post": "https://www.reddit.com/r/ReverseEngineering/comments/85l5to/reversing_ibank_trojan_injection_phase/"}, {"body": "Good read! And im greatfull that i found your blog. Will be digging through your old posts. ", "post": "https://www.reddit.com/r/ReverseEngineering/comments/85l5to/reversing_ibank_trojan_injection_phase/"}, {"body": "Hi there r/ReverseEngineering,\n\nI started [this preservation project](https://github.com/loociano/tamatown) to bring TamaTown back online, or at least part of it. You can check the progress on http://tamagotch.org/tamatown.\n\nTamatown was an interactive website for the Tamagotchi virtual pets, that allowed players to earn prizes and items. In 2013, Bandai shut down all servers.\n\nThanks to the Wayback Machine I could recover some of the Flash (.swf) files that were once available, although many remain lost. Some people have done this in the past (see this [TamaTalk thread](http://www.tamatalk.com/IB/topic/194300-games-from-the-old-japanese-tamatown)).\n\nThe project is still in a very early stage, any feedback would be more than appreciated!", "post": "https://www.reddit.com/r/ReverseEngineering/comments/85b8r2/preserving_tamagotchi_town_tamatown/"}, {"body": "Cool idea but you should recreate it in not flash if you actually want to revive it for the modern era", "post": "https://www.reddit.com/r/ReverseEngineering/comments/85b8r2/preserving_tamagotchi_town_tamatown/"}, {"body": "This might have changed my approach drastically. I will probably use this daily once I give it a test run. ", "post": "https://www.reddit.com/r/ReverseEngineering/comments/855ry1/android_frida_library_to_hunt_android_malware/"}, {"body": "[Youtube Channel of the talks and Demos](https://www.youtube.com/channel/UCqCZRfUpl2azw8ZfvCiOIKA)", "post": "https://www.reddit.com/r/ReverseEngineering/comments/855ry1/android_frida_library_to_hunt_android_malware/"}, {"body": "Hi, thanks for all of your contributions lately. I think a post like this one is probably better\\-suited for r/netsec. In general submissions to this subreddit should contain something along the lines of assembly\\-language code, or the description of a process of analyzing a system in order to figure out how it works. You have posted a good number of highly relevant posts, for which I am, and the community is, grateful. However, some of them aren't in\\-line with the mission of this subreddit. Please don't let my request deter you from submitting on reverse engineering\\-related topics, but please also keep the general network security posts for more suitable subreddits.", "post": "https://www.reddit.com/r/ReverseEngineering/comments/855nj1/exploiting_eternalblue_for_shell_with_empire/"}, {"body": "This works fine for code written by a single person or even a single coding house \u2014 but how does it handle code re-use?\n\nI know I\u2019ve used similar techniques to fingerprint code fragments from pastebin and stack overflow, but it seems to me that you must eventually get to the point where the binding code in compiled form is no longer unique enough to indicate any level of provenance.\n\nAnd what about intentional obfuscation?", "post": "https://www.reddit.com/r/ReverseEngineering/comments/84v2ou/when_coding_style_survives_compilation/"}, {"body": "Very interesting. The accuracy achieved is quite impressive -- I think it would be lower when the technique would be applied in practice, since the assumptions that are made are quite strong. For looser assumptions (no disclosure about the compiler/optimization level, highest optimization level enabled, larger pool size), the technique is less accurate.\n\nIn practice, it might be interesting to give a fuzzier output - the esimated probability that an individual wrote the code for a certain binary. This would help when two programmers (say, Alice and Bob) write code that yields binaries with similar properties. In the current system, either Alice or Bob is picked -- there is no way to express that it might be either of them.", "post": "https://www.reddit.com/r/ReverseEngineering/comments/84v2ou/when_coding_style_survives_compilation/"}, {"body": "used to do something very similar when we wrote games in 100% assembly language.(8bit &amp; 16 bit days). if you need functions called after the current function your in and then return to calling function you could just add em to the stack.. dodgy but worked and was fast...", "post": "https://www.reddit.com/r/ReverseEngineering/comments/84ovyb/cheat_sheet_how_stack_pivots_are_used_in_modern/"}, {"body": "I'm an embedded guy, would love to get into reverse engineering professionally...Should really think about how to make the hop. I love this stuff.", "post": "https://www.reddit.com/r/ReverseEngineering/comments/84ovyb/cheat_sheet_how_stack_pivots_are_used_in_modern/"}, {"body": "Step 2 feels a bit like the step after \u201ccollect underpants\u201d...", "post": "https://www.reddit.com/r/ReverseEngineering/comments/84ovyb/cheat_sheet_how_stack_pivots_are_used_in_modern/"}, {"body": "is this your work?", "post": "https://www.reddit.com/r/ReverseEngineering/comments/84ovyb/cheat_sheet_how_stack_pivots_are_used_in_modern/"}, {"body": "Nowadays, defenses such as ASLR and non executable memory prevent this exact attack. But, building up a chain of ROP gadgets can still work. One of the professors at my university invented the technique: http://cseweb.ucsd.edu/~hovav/talks/blackhat08.html", "post": "https://www.reddit.com/r/ReverseEngineering/comments/84ovyb/cheat_sheet_how_stack_pivots_are_used_in_modern/"}, {"body": "Is stack pivoting a thing?\nLooks like controlled memory is in the heap, which is non executable?\nStack grows top down, unlike the image.\n\n/not hating.", "post": "https://www.reddit.com/r/ReverseEngineering/comments/84ovyb/cheat_sheet_how_stack_pivots_are_used_in_modern/"}, {"body": "Jesus, so many ads", "post": "https://www.reddit.com/r/ReverseEngineering/comments/84t8is/reverseshell_reverse_shell_as_a_service/"}, {"body": "* [PDF Presentation - Step by Step Guide to run the PoC](https://github.com/convisoappsec/firefox_tunnel/blob/master/doc/Beamer_Keynote_looking_style.pdf)  \n\n* [Youtube DEMO Video](http://www.youtube.com/watch?v=C23N4yDRkjU)  \n\n* [Github Sources](https://github.com/convisoappsec/firefox_tunnel)  ", "post": "https://www.reddit.com/r/ReverseEngineering/comments/84rmk8/firefox_tunnel_to_bypass_any_firewall_paper/"}, {"body": "Hi, what's the connection with reverse engineering?", "post": "https://www.reddit.com/r/ReverseEngineering/comments/84rmk8/firefox_tunnel_to_bypass_any_firewall_paper/"}, {"body": "Outpost Firewall used to complain when applications tried to launch a web browser for a variety of reasons surrounding this. ", "post": "https://www.reddit.com/r/ReverseEngineering/comments/84rmk8/firefox_tunnel_to_bypass_any_firewall_paper/"}, {"body": "Pretty interesting read thanks!", "post": "https://www.reddit.com/r/ReverseEngineering/comments/84ckka/tutorial_how_to_deal_with_rootkit_analysis_step/"}, {"body": "no RE, no technical details. Please don't submit stuff just because it's \"mildly interesting\".", "post": "https://www.reddit.com/r/ReverseEngineering/comments/84f6so/credssp_flaw_in_remote_desktop_protocol_affects/"}, {"body": "**AndHook :**  \n\nAndHook is a lightweight hook framework for android. \nIt is primarily written in C++ and easy to use.  \n\n**Support :**  \n\nAndroid 4.x or later (with preliminary support for Android 8.1, SDK 27), excluding customized Android ROMs such as YunOS.  \n\n* Java method instrumentation (hook java method in Java/C/C++)\n* Native interception (hook native C/C++ functions in C/C++)  \n\n[Download Compiled Releases](https://github.com/rrrfff/AndHook/releases)", "post": "https://www.reddit.com/r/ReverseEngineering/comments/84f2qj/a_lightweight_android_hooking_framework_full/"}, {"body": "Apk crashes on start up. Am I doing something wrong?\nAndroid 8.1", "post": "https://www.reddit.com/r/ReverseEngineering/comments/84f2qj/a_lightweight_android_hooking_framework_full/"}, {"body": "[Chimay Red Persistence Exploit - PDF Article](https://github.com/BigNerd95/Chimay-Red/blob/master/docs/ChimayRed.pdf)", "post": "https://www.reddit.com/r/ReverseEngineering/comments/846e77/reverse_engineering_of_mikrotik_exploit_from/"}, {"body": "Nice", "post": "https://www.reddit.com/r/ReverseEngineering/comments/846e77/reverse_engineering_of_mikrotik_exploit_from/"}, {"body": "Excellent article, thank you very much for sharing.\n\nIn the initialization routine (entry2.init), how would one go about modifying the program's own assembly? I.e. the C++ code that made ROR become ROL. Is it using inline ASM? Also for that matter, how are the function addresses hard coded in the array? I was under the impression that each compilation would generate new addresses. ", "post": "https://www.reddit.com/r/ReverseEngineering/comments/846e77/reverse_engineering_of_mikrotik_exploit_from/"}, {"body": "Such a great tool - I recently had the pleasure of using frida on an Android game and its capabilities were seriously impressive, being able to hook and modify functions inside of the JVM (well, ART technically) and native code with the same tool at the same time is pretty amazing. ", "post": "https://www.reddit.com/r/ReverseEngineering/comments/847klt/frida_107_is_out_with_full_support_for_the/"}, {"body": "Thanks for this, keep up the great work!", "post": "https://www.reddit.com/r/ReverseEngineering/comments/847klt/frida_107_is_out_with_full_support_for_the/"}, {"body": "Frida is awesome! for me invaluable tool when pentesting mobile applications for Android, iOS. Thanks Ole and the whole team!", "post": "https://www.reddit.com/r/ReverseEngineering/comments/847klt/frida_107_is_out_with_full_support_for_the/"}, {"body": "\nI 100% agree with this. \n\nIn rare cases, the product is so good that it does not need much marketing. Example is Google search. The product sells itself.\n\nIn most cases, marketing is more important than the product. The product obviously should not be bad, but does not need to be the best in class. The product that sells the most eventually becomes better than its competitors\n", "post": "https://www.reddit.com/r/startups/comments/85rpsu/business_ideas_are_worthless/"}, {"body": "I've realised for ages that it's down to marketing. I sometimes hear small business owners grumbling about marketeers. If you're a small business owner, you're not just a yoga teacher or a plumber; you're a part-time marketeer.", "post": "https://www.reddit.com/r/startups/comments/85rpsu/business_ideas_are_worthless/"}, {"body": "Thanks for this well thought out and substantiated post. Marketing isn't the only concern, though -- operations are another area where a company can excel, like IKEA's innovations in easy to ship and store designs or Target's supply chain management.  \n\nI'm 100% with you that ideas are worthless. No idea is truly new -- it's about executing better than the competition.", "post": "https://www.reddit.com/r/startups/comments/85rpsu/business_ideas_are_worthless/"}, {"body": "Fidget spinners.", "post": "https://www.reddit.com/r/startups/comments/85rpsu/business_ideas_are_worthless/"}, {"body": "They are worthless, but have potential tho. \n\nPeople who don't share business ideas because it \"might get stolen\" make me laugh. \n\nDo something about your damn idea!", "post": "https://www.reddit.com/r/startups/comments/85rpsu/business_ideas_are_worthless/"}, {"body": "Great post! I agree... CEO's are basically sales/marketing people... A great CEO can take a normal product: rebrand it and sell and disrupt the market ", "post": "https://www.reddit.com/r/startups/comments/85rpsu/business_ideas_are_worthless/"}, {"body": "&gt; People are smart. Just put together three or four people in a room and tell them to come up with a business idea, in an hour or two at least a dozen of them would be brewing in the air. And probably at least half of them would be good or serviceable, with, at the very least, some concepts with potential that need a little bit refinement over here or there. The world is kind of brimming with potentially good ideas. Though for some reason, less than one percent of those would turn into something that could generate some sort of stable income. Is it that they lack brilliance and ingenuity? Is it about luck?\n\nIt appears that a lot of it does come down to luck:\n\n* https://www.technologyreview.com/s/610395/if-youre-so-smart-why-arent-you-rich-turns-out-its-just-chance/\n* https://blogs.scientificamerican.com/beautiful-minds/the-role-of-luck-in-life-success-is-far-greater-than-we-realized/\n\nOf course, luck cannot happen to you unless you are out on the field playing the game.\n\nAnother part of it comes down to finding ideas that resonate. Either an idea organically resonates (when people experience the idea, they naturally tell their friends), or an idea has ad resonance (when people hear the ad, they respond).\n\n&gt; Facebook started as an upper-class Harvard only exclusive club at a time when social internet platforms were frowned upon. \n\nFacebook succeeded because it had gigantic natural resonance from the very beginning:\n\n&gt; Facemash attracted 450 visitors and 22,000 photo-views in its first four hours online [ref](https://en.wikipedia.org/wiki/Facebook)\n\nThe classic example of an idea that had huge funding, huge marketing, huge execution, but still failed, is the original Iridium satellite phone system. The idea simply did not resonate with very many people, because most people live in cities that have adequate (and much less expensive) cell phone service.\n\nIf you \"put together three or four people in a room and tell them to come up with a business idea\", and even if you give them a large marketing budget to promote their idea, they will not succeed unless the idea they choose is resonant to some degree. [More info](http://machinethatmakesmoney.com/your-idea-must-have-resonance/).\n\nAnother part, in many cases, is having a no-brainer value proposition. If a potential customer looks at the idea and says, \"at that price, the ROI is fantastic,\" then that idea is likely to succeed. ", "post": "https://www.reddit.com/r/startups/comments/85rpsu/business_ideas_are_worthless/"}, {"body": "Relevant xkcd: https://xkcd.com/1827/\n\nThe truth is, there is no \"formula\" to succeed. There are some tricks that worked at some particular point in time for that particular situation, but those tricks change all the time. There is no pattern to win. It's a chaotic system and you have no way of predicting it since the very fact that everyone is trying to predict it changes the results. Someone gets lucky and makes a dollar, someone gets unlucky and loses a dollar. It has nothing to do with skill or ability.\n\nIn the end the only thing you can do is do what you believe is the right thing to do. If you want to get rich, keep in mind that there is a million like you and only one of you will be driving a Porche. The rest worked just as hard and and were just as good but fate didn't favor them.\n\nI can find you a dozen success stories of companies that didn't even have a marketing department or knew what marketing is before they started swimming in cash to counter OP's point.\n\nConsider all reasonable options and find your own way. Nobody can tell you what to do to become successful except buy a decent coffee maker because you'll need it.", "post": "https://www.reddit.com/r/startups/comments/85rpsu/business_ideas_are_worthless/"}, {"body": "Ideas are garbage. Execution is what counts. ", "post": "https://www.reddit.com/r/startups/comments/85rpsu/business_ideas_are_worthless/"}, {"body": "TL;DR Having a great idea is one thing, great execution is everything!!", "post": "https://www.reddit.com/r/startups/comments/85rpsu/business_ideas_are_worthless/"}, {"body": "I could easily pick Coke Zero in a blind taste test with diet Coke, Coke, Pepsi, Diet Pepsi, any off brand cola product...\n\nI really do prefer it to every cola, sugar or no sugar. Sure, the labeling makes it more attractive overall, but it's just a better product.", "post": "https://www.reddit.com/r/startups/comments/85rpsu/business_ideas_are_worthless/"}, {"body": "TL;DR Having a great idea is one thing, great execution is everything!!", "post": "https://www.reddit.com/r/startups/comments/85rpsu/business_ideas_are_worthless/"}, {"body": "I would definitely start with your own. With a new product things will change fast anyway and spending a lot of money on something that is outdated soon probably doesn\u2019t make sense. Camtasia is great for screen recordings, PowToons is a cool product for something a little more abstract.\n", "post": "https://www.reddit.com/r/startups/comments/85tblz/would_a_simple_dropboxesque_style_demo_video_be/"}, {"body": "Yes, if it's perfect.\n\nI'd personally iterate it and polish it a thousand times until every single friend, family member, your cat and your mailman tell you it's perfect.", "post": "https://www.reddit.com/r/startups/comments/85tblz/would_a_simple_dropboxesque_style_demo_video_be/"}, {"body": "Reiterating what /u/call_me_stephen said - Keep it self-made and be ready to revise it as your platform changes. You don't need to recreate it for every small thing, but you will want to recreate it for a major UI change or a new feature addition. \n\nWrite a script, read through the script and make sure you cover the key selling points. Keep your video around 1-3 minutes and remember that this is key selling point and not a technical demo. Good luck! \n\n", "post": "https://www.reddit.com/r/startups/comments/85tblz/would_a_simple_dropboxesque_style_demo_video_be/"}, {"body": "From my experience, you should be pre-selling the app as much as possible. By the time you launch you should want multiple media channels ready to report on it, and a few test users. But yes it will be all hustle, for a long time. ", "post": "https://www.reddit.com/r/startups/comments/85t09c/how_to_get_startedpopular_once_your_app_is_ready/"}, {"body": "PM me. I have contacts with influencers where that could be a channel to promote. It all depends on the context of the app, obviously.", "post": "https://www.reddit.com/r/startups/comments/85t09c/how_to_get_startedpopular_once_your_app_is_ready/"}, {"body": "I'm in the same position as you now. You need to identify a small amount of people that need or would want your app the most and get them using it. This part is specific to what your app does and its where creativity comes in.\n\nMy app targets teenagers, so I put posters at teen events etc", "post": "https://www.reddit.com/r/startups/comments/85t09c/how_to_get_startedpopular_once_your_app_is_ready/"}, {"body": "I appreciate all the input.  Thank you.  I\u2019m still at the very early stages of development at this point.  Wanted some idea of what to expect, regarding getting customers, before going much futther.", "post": "https://www.reddit.com/r/startups/comments/85t09c/how_to_get_startedpopular_once_your_app_is_ready/"}, {"body": "Never too early to start marketing, or putting together a plan. Would you like to chat in PM I can share some experience. ", "post": "https://www.reddit.com/r/startups/comments/85t09c/how_to_get_startedpopular_once_your_app_is_ready/"}, {"body": "Hey! Use Stripe\u2019s startup package. They\u2019ll take you through everything you need", "post": "https://www.reddit.com/r/startups/comments/85tjd6/how_to_start_a_business_legal_registration_etc/"}, {"body": "TOS and privacy policy clearly stated. Don\u2019t share or resell data. Anything personally identifiable you should discard, or at least encrypt. Aggregate data for analysis purposes and throw away PII. If you\u2019re really paranoid, look at PCI-DSS standards for handling PII.", "post": "https://www.reddit.com/r/startups/comments/85v0mt/how_can_i_utilize_customer_data_without_assuming/"}, {"body": "&gt;How do I make my business trustworthy to my users?\n\nBe honest and transparent about what you will use the data for and how you will protect their privacy.\n\nDo not fail them in delivering on what you promise.", "post": "https://www.reddit.com/r/startups/comments/85v0mt/how_can_i_utilize_customer_data_without_assuming/"}, {"body": "You only get in trouble WHEN you get caught. WHEN you get caught, you will spend a lot of money on lawyers.\n\nHire a professional security consulting company to audit you and pentest you annually and consult lawyers. Legal systems are too complicated to attempt to navigate without professional help and so is trying to secure yourself.\n\nNew regulations in the EU force you to do this anyway if you plan to handle any data related to an EU citizen.\n\nYou can risk it by handling it all yourself and letting your tech guys do it but it's not a matter of IF you'll get caught but WHEN. You'll get a message on your computer telling you to send $100 000 worth of bitcoin to these 100 wallets within 48 hours or they leak all your data. If you call the FBI, they will open a case against you for not having your shit together.\n\nMy advise is to collect the bare minimum you need and preferably outsource it to someone else. Someone that specializes in this kind of thing and hopefully has resources for a lawyer and competent staff and annual audits and penetration tests.\n\nIf you are a dude in a garage with no resources, google as much as you can and secure you as well as you can and encrypt or salt&amp;hash everything you can while you pull yourself by your bootstraps. Maybe I am paranoid, but I'd pay lawyers and security guys BEFORE I upgrade my tuna sandwich to a salmon sandwich.", "post": "https://www.reddit.com/r/startups/comments/85v0mt/how_can_i_utilize_customer_data_without_assuming/"}, {"body": "Are you really asking someone to explain how to build eBay", "post": "https://www.reddit.com/r/startups/comments/85qvg7/how_to_implement_a_system_like_ebay_where_i_can/"}, {"body": "I'm a web developer from Melbourne, feel free to hit me up :)", "post": "https://www.reddit.com/r/startups/comments/85qvg7/how_to_implement_a_system_like_ebay_where_i_can/"}, {"body": "I don\u2019t know if you\u2019re using payment framework like Stripe but you should consider them if not as the help take care of this. For example, with Stripe, you can create a Stripe Connect account which allows you to create marketplace type sites.\nhttps://stripe.com/connect\n\nThen when you take a payment from one person and forward it to another (from buyer to seller) you just take your portion off the top as fee, see \u201cdestination charges\u201d:\nhttps://stripe.com/docs/connect/destination-charges\n\nSo for example buyer would pays $10, you put destination amount as $9.50, and the extra $.50  Whig is 5% automatically goes into your account. (But of course there\u2019s transaction fees and such you\u2019d have to take into account).", "post": "https://www.reddit.com/r/startups/comments/85qvg7/how_to_implement_a_system_like_ebay_where_i_can/"}, {"body": "You need to talk to a lawyer about this. Reddit can give perhaps anecdotal tidbits, but the situation you\u2019re in calls for qualified legal advice specific to your circumstances. If you\u2019re serious about your product and using the name, bite the bullet and spend the cash on a lawyer now, before you find yourself up a creek later on. Otherwise just pick a totally different name and move on. ", "post": "https://www.reddit.com/r/startups/comments/85pa7t/filed_a_trademark_almost_a_year_ago_getting/"}, {"body": "I find it hard to believe Stripe would do this and recommend another platform. Are you sure this is legit?", "post": "https://www.reddit.com/r/startups/comments/85lqtj/stripe_is_dumping_me_anyone_have_recommendations/"}, {"body": "Hey there; I was tagged by a commenter in this thread because I work in CC processing. (But not for a processor, so less bias! :)\n\nIf Stripe is recommending you use Payment Cloud and telling you you're high risk, it's not a reflection of them thinking you specifically are a risky customer, it's that your business is in a \"high risk\" industry. That includes some industries people would expect (adult entertainment, tobacco, guns, gambling) and some they wouldn't (travel, software as a service, telemarketing..)\n\nWhat type of business is it? Some other companies (like Braintree) may have slightly looser restrictions for high risk, but only if you're in one of the 'less risky' high risk sectors. If you're in \"pretty much everyone considers this high risk\" territory, you'd need to go with a processor that specifically handles high risk.\n\nIf you can provide a better idea of what your business does, I can give you a little more specific info on the best path to find a good fit.\n", "post": "https://www.reddit.com/r/startups/comments/85lqtj/stripe_is_dumping_me_anyone_have_recommendations/"}, {"body": "/u/cardfellow might be a good person to ask this question to he has been very helpful in the past. ", "post": "https://www.reddit.com/r/startups/comments/85lqtj/stripe_is_dumping_me_anyone_have_recommendations/"}, {"body": "I partnered with GoEmerchant for my business (webjunto).  They are not as big as stripe but are still big across us (Dallas cowboys are one of their clients).\n\nThey also beat the prices of all the other vendors by typically .25 - .5%\n\nBesides that, that's the only one outside of the big 3 that I've used.", "post": "https://www.reddit.com/r/startups/comments/85lqtj/stripe_is_dumping_me_anyone_have_recommendations/"}, {"body": "I have not used it personally but I was recommended to use https://www.adyen.com\n\nSeems like a good option. ", "post": "https://www.reddit.com/r/startups/comments/85lqtj/stripe_is_dumping_me_anyone_have_recommendations/"}, {"body": "Hey MrXyfir - I've PM'd you. I work for a company called RevenueWire - We do payment processing for software and SAAS companies. ", "post": "https://www.reddit.com/r/startups/comments/85lqtj/stripe_is_dumping_me_anyone_have_recommendations/"}, {"body": "Same here, denied by Stripe. But my service was Cryptocurrency-related, and easily is high risk, so I wasn't surprised or anything.", "post": "https://www.reddit.com/r/startups/comments/85lqtj/stripe_is_dumping_me_anyone_have_recommendations/"}, {"body": "I think there is a difference between 2-3 founders getting along well, and a group of buddies where half of them are founders just because they were in a room when someone discussed the start-up idea.\n\nOnce I knew a start-up that was founded by a couple, a cousin and a cousins friend. All of them came from the same background thus their expertise was overlapping. Long story short, it did not go well.", "post": "https://www.reddit.com/r/startups/comments/85lxyg/what_is_your_take_on_working_for_startup_buddy/"}, {"body": "I'm somewhat confused by the term 'buddy'.  Founders are supposed to get along extremely well in order for a startup to work.  Deep friendship between founders is necessary for success, as opposed to starting a business with some guy you met at a meetup.", "post": "https://www.reddit.com/r/startups/comments/85lxyg/what_is_your_take_on_working_for_startup_buddy/"}, {"body": "I personally love feedback. Most people hate to have their work evaluated because they feel judged. I don't take negative feedback personally and instead just use it for personal growth! When I worked for a fortune 500 where my individual effort didn't really matter made my work feel purposeless and mundane. I love the energy startups have", "post": "https://www.reddit.com/r/startups/comments/85k6br/the_feedback_loop_and_why_everyone_should_try/"}, {"body": "Any time you spend in a startup is worth it. Even if everything ends in failure you will have learned so much and will be even moire ready to have a go next time and avoid making the mistakes you made first time around. Plus if you want to move back into a larger company then they will value any experience you have had in the startup. Working there will say many good things about you. Even if it is just that you have become more conscientious. That is a huge asset. Feedback is great and it is at its best when it helps you to improve. Sure, it would be great to have someone tell you that you are perfect but that would leave no room for improvement.", "post": "https://www.reddit.com/r/startups/comments/85k6br/the_feedback_loop_and_why_everyone_should_try/"}, {"body": "If you don't need investment, it will rarely be a good decision to accept investment. That being said, it seems like you DO want to raise capital, and the question is whether to get it from F&amp;F or an outside investor?\n\nI'd say that there's a significant chance that working with a professional investor will be better for you. Especially if this person has domain expertise and a strong network where you lack.\n\n&gt;Is it worth giving up 10% at such an early stage?\n\nYou've been doing this for 3 years and have no revenue. Most early stage startups will give up 20-30% at this stage.\n\nThe next question is: **raise capital now or wait?**\n\nThe answer (as usual): IT DEPENDS. Seems like you're missing expertise in some pretty critical biz ops areas. Are you confident that launching your product will result in sustained growth? Or do you think you won't be ready to handle it, and your operations will crumble underneath the weight of actual customers?\n\nIf you aren't ready for growth, take the money and use it to prepare for growth. If you are ready for growth, and you're confident it will be fast enough to increase your valuation next time you speak to the investors, don't take the money yet.\n\nBut understand that 450k for 10% of a pre-revenue company could be a really great deal (without knowing the particulars, we can't be certain). It may be worth accepting unless you're VERY confident that your valuation will increase over the short-term.", "post": "https://www.reddit.com/r/startups/comments/85n2r9/seed_capital_vs_keeping_stake/"}, {"body": "It's impossible to give you any advice of real value knowing as little as I do about what your start up is, what it needs, if there are any alternatives, how many investors with experience in the business there are....\n\nBasically, if you want good advice, you have to tell us more. If you think we're going to run out and steal your idea, then execute better than we could. And the hope is that no one can execute better than you, because you came up with the idea for a reason. \n\nThat's seriously what any VC, angel, incubator, etc would tell you. I know, because they've told me. \n\nOtherwise, look forward to the same generic advice that has no real value to you. Just like /r/personalfinance.", "post": "https://www.reddit.com/r/startups/comments/85n2r9/seed_capital_vs_keeping_stake/"}, {"body": "If you are running out of money, yes. If you have a project that you know it will be good for your business but short in money, yes. Otherwise, why would you give up 10%+having a pressure? ", "post": "https://www.reddit.com/r/startups/comments/85n2r9/seed_capital_vs_keeping_stake/"}, {"body": "Thanks for the responses guys! \nSorry for being so cryptic about the business etc. Its just that if I reveal too much then I might be risking my business itself, only coz it is so diff. to come by a so called \"unique\" ideas which are scalable these days. \n\nBut I think the offer is great as it allows me to use capital to grow in  a skin-care market which slowly becoming more and more crowded, but nobody has made it big yet (in the local market), although internationally there are many many players in the same field. \n\nFor me, Agility is key in an industry where there is huge growth but no benchmark to be set agianst yet. so, i find the best way to have a benchmark is to create it yourself, and the only way that is possible is by having capital to grow. Hence, I am considering taking this offer and diluting 10%, as getting a smart distributor is key for this business. As most FMCG businesses are valued on Distribution strength. \n", "post": "https://www.reddit.com/r/startups/comments/85n2r9/seed_capital_vs_keeping_stake/"}, {"body": "Is it already being done well be someone else?\n\nHas it been dismissed by domain experts because of a\u00a0domain reason?\n\nHas it been dismissed by domain experts because of a\u00a0technical reason?\n\nMore here: \nhttps://www.techinasia.com/talk/develop-good-idea-startup", "post": "https://www.reddit.com/r/startups/comments/85fkrw/here_is_how_you_find_out_if_your_business_is/"}, {"body": "\"Ship it and iterate\" is ovrerated. Maybe it was possible when the competition was lower and online ad $$ was cheaper. ", "post": "https://www.reddit.com/r/startups/comments/85fkrw/here_is_how_you_find_out_if_your_business_is/"}, {"body": "&gt;Where can the CEO go online to promote selling shares of this corporation in chunks of about $2,000 to $10,000 per shareholder?\n\nEquity Crowdfunding Platform\n\nGoogle that. Read all the FAQs on the platforms you find.\n\nSuch as Start Engine and Crowdfunder.  \n\nDo your research. There are different types of equity crowdfunding campaigns you can run.  Each has different legal requirements.\n\nYou must understand the legal requirements.\n\nPublicly soliciting fundraising is illegal in most cases.  You must do it a certain way tied to a platform. You can be fined or jailed for breaking those laws. The SEC is serious about them.\n\n----\n\n&gt;One possibility is something like a Kickstarter website, but where corporate shares for a non-publicly-traded corporation can be promoted, presumably for a fee. \n\nNo, not exactly.\n\nKickstarter is rewards based crowdfunding. It is not equity based crowdfunding.  \n\nRewards based has nothing to do with equity. People pledge money to your campaign in exchange for a reward in the form of product or service. That's all.\n\nThe legal requirements for rewards based campaigns are no different than running a pre-sale campaign on your own or any other consumer law.\n\nAgain, do your homework and research Equity Crowdfunding.\n\nUnderstand the differences.\n\n", "post": "https://www.reddit.com/r/startups/comments/85kqwp/advice_wanted_about_crowdfunding_website_through/"}, {"body": "Angelist", "post": "https://www.reddit.com/r/startups/comments/85larj/how_do_i_get_a_job_at_a_startup/"}, {"body": "What kinds of gifts have you tried to send?", "post": "https://www.reddit.com/r/startups/comments/85kp6m/cold_callingemailing_problem_im_running_into/"}, {"body": "Cold calling/emailing is a pain by default, and your target audience is among the hardest to reach.\n\nHave you tried visiting various entertainment conventions? They might attract potential clients.", "post": "https://www.reddit.com/r/startups/comments/85kp6m/cold_callingemailing_problem_im_running_into/"}, {"body": "Simple: go after bigger fish.  \n  \n\nYou'll always have this kind of problem with mediocre businesses because they don't care about taking the business to the next level. In order to get someone interested on the phone, you need to reach those who do want help from people like yourself. Upgrade your game and go sell to someone who will give you more money and hold you more accountable. Leave your comfort zone.  \n  \n\n\nBut regarding your current problem, from a Marketing perspective, you could try leaving a card with a QR code and a personal message in the parking lot, right where the owners park the car. If you do this right, it might sell you as a \"digital savvy\" marketer and it will definitely get their attention. Then you place whatever you need on the page that loads on their mobile device.  \n  \n\nSuccess for you,\nTake care", "post": "https://www.reddit.com/r/startups/comments/85kp6m/cold_callingemailing_problem_im_running_into/"}, {"body": "Start with agreeing one month's work. At the end you should have a functioning prototype with a limited feature set. Limit the scope to what can be delivered in that time only. Move everything else to the product backlog and ignore it totally.\n\nMeanwhile, get your marketing team line up 50 interviews with the customers you hope to acquire. Start interviewing them (not you, the marketing team), bringing  along the prototype as soon as possible. Ask them would they buy the product. If yes, sell it to them, if not, find out what's missing.\n\nAt the end of the month, reconcile your backlog with your customer feedback. Prioritise the things that customers most want into the next prototype - count customer upvotes or whatever works for you. Build the most important thing in a month, ignoring everything else.\n\nRepeat until enough customers give you cash. Tell your marketing team books are good, customer interview are great.", "post": "https://www.reddit.com/r/startups/comments/85hun8/paralysed_by_research_any_suggestions_crosspost/"}, {"body": "So sorry if this seems incomprehensible, this is just stuff that has been pent up for the last couple months and I really want some ideas as to how to address this. It seems to be the business version of feature creep.", "post": "https://www.reddit.com/r/startups/comments/85hun8/paralysed_by_research_any_suggestions_crosspost/"}, {"body": "Tbh there would be too much to unpack here to give really solid advice.\n\nBut in terms of what you have said you want to build, as I see it there are 2x key questions you would need to dig into:\n\n1) do you need venture funding? If so are you likely to get it based on that market size and the first mover within it?\n\n2) Can you beat that first mover through organic marketing ie is your differentiation such that it would sell itself? If not, are you confident that your marketing / sales resources (experience, ability, budget) can beat that of the first mover?", "post": "https://www.reddit.com/r/startups/comments/85hun8/paralysed_by_research_any_suggestions_crosspost/"}, {"body": "You just need to be a tad bit better or cheaper than the other product that has 19k preorders. If you are confident of that, I would not waste my time on market validation. Go make the MVP. ", "post": "https://www.reddit.com/r/startups/comments/85hun8/paralysed_by_research_any_suggestions_crosspost/"}, {"body": "Other advice I would add is - \nLearn the Rules of the Game.\nIf they want to look good then they need X, then you have to do X.\nAn Accelerator didn't let me advance to one thing because I didn't do a pitch deck for the event.... so what should I have done exactly the way they wanted? a pitch deck in their fashion.\nPlay the game- if they have the money - they make the rules or be prepared to keep playing until you self fund.", "post": "https://www.reddit.com/r/startups/comments/85feds/the_perfect_networking_equation_how_to_get/"}, {"body": "I think there should be subreddit for that :)\n\nLet me know if you will need a partner in Singapore. I would be happy to give a shot and try to cooperate ", "post": "https://www.reddit.com/r/startups/comments/85iowi/how_to_find_a_business_partner_overseas/"}, {"body": "Hi, can you send me a message going a little more in depth to what you will need? I am the operations Administrator for a venture capital company based in Hong Kong. We might be able to work something out", "post": "https://www.reddit.com/r/startups/comments/85iowi/how_to_find_a_business_partner_overseas/"}, {"body": "They got Craigslist over there? Lol", "post": "https://www.reddit.com/r/startups/comments/85iowi/how_to_find_a_business_partner_overseas/"}, {"body": "I don't know *exactly* what you're looking for, but there are a bunch of service providers here that specialize in outsourcing this sort of thing. ESG (http://eservicesgroup.com/solutions/accelerator-selling-through-marketplaces/) is the biggest, but I could probably name 10 others off the top of my head. ", "post": "https://www.reddit.com/r/startups/comments/85iowi/how_to_find_a_business_partner_overseas/"}, {"body": "start from selling", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "Hard to answer this question without specifics on what the product is.  Based on your idea of using a mailing or web ad, it kind of limits things.  It is hard to target demographics other than localities with mailings.  Web ads may work but it kind of depends on what your product or service is.\n\nFor example, if you are building a rocket to go to Mars, or a flying car, then your problem may be mostly physics, engineering and government regulations.    These are the things you'd want to validate.\n\nIf you are selling t-shirts, your problem may be finding a profitable marketing channel or a high quality manufacturer.  This is what you'd want to validate.\n\nIf you are building a video game, your problem may be finding a marketing distribution channel, unique and fun game mechanic, or talented team of developers and artists.  These are the things you'd want to validate.", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "You could try to sell it. ", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "1. Just because you haven't heard of a business like that doesn't mean it doesn't exist. Do your due diligence and research.\n\n2. Option 1: Set up a landing page and start driving ads (Facebook, Google etc.) to the page. It should be a pre-launch page. You can't ask for people's payments since your product is not available yet but you can ask them to at least sign up to pre-order.  \n\n3. Option 2: Since it's a service start reaching out to potential customers and pitch your product as if it exists. Once you have your first few clients figure out the rest ;)", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "Don\u2019t worry about the team. I use three different strategies based on the idea that can be used together. The goal is the least amount of work for most validation.\n\n1.) make a variety of ads. Use google ad words and post them. Look at success rate.\n\n2.) landing page to collect emails with ads that drive people there. Look at engagement levels.\n\n3.) MVP. Prove the value. Don\u2019t worry about software if you can do the legwork to prove the value. Automate later.", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "go to 5-10 successful businessmen and ask them", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "Your best bet is to go directly to customers that you think might be interested in your service and ask them.", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "Maybe do a pitch with some people you trust see how they feel about the idea. Also there are state programs that give funding to small businesses maybe pitch your idea to them and if they like it you might feel better about it. ", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "If is a rather simple product or service then go get a business customer to help fund the idea in return for preferential treatment going forward. If you can solve a headache I have that no one can currently solve then hit me up everyday of the week and twice on Tuesdays. I make money by flattening issues for my customers. I spend money to flatten issues I encounter. Lots of ideas simply do not flatten an issue better than how I do now. ", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "Horizontal and vertical positioning (check Philip Morgan)", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "Your idea is worth approximately jack multiplied by shit.  Start the actual business and then you'll find out what it's worth.\n", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "You'll never sell an idea. Period. I work at an incubator and I've seen so many great ideas that we wouldn't invest in due to not having the right fonder. An idea in a bag is worth the bag, unless you have a great founder.", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "Is it already being done well be someone else?\n\nHas it been dismissed by domain experts because of a\u00a0domain reason?\n\nHas it been dismissed by domain experts because of a\u00a0technical reason?\n\nMore details here: \nhttps://www.techinasia.com/talk/develop-good-idea-startup", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "Talk to your potential customers. This is one of the biggest reasons start ups fail. Talk to your customers. Find out if they want it or not.", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "Having a good idea isn't the most important, having great execution is!", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "I would decide to straight up ask people. Or you can find those who are pro in it and ask them:) and decide for yourself whether the idea is scalable", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "It is a service, not a product. Also, I would not need a team as it would only be myself. \n\nAs for the service, without getting too specific it would be holding funds in installments for customers to pay yearly bills. ", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "Create an MVP website with a lead gen sign up form.  If you get interest you will know if people will buy the product or not.  With leads you can sell something, nobody is buying ideas.", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "You\u2019re skipping an important step in the process of starting a startup, team formation. Before you even start working on the product you need to get a team of people together. The idea almost doesn\u2019t really matter, with the right people you can make anything successful.", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "The first question you need to ask yourself is can an existing business add this into their existing platform relatively easily? If so, they are likely to crush you considering they would have an already overwhelming customer base. \n\nIf you're holding funds, think about banks or PayPal. Could they easily incorporate this? Not only that would have to contend with but you'd need some serious customer trust to even start with. I'd seriously consider trying to collaborate with a larger organization such as PayPal for an idea like that rather than try to make it on your own. \n\nYou need to look into banking/legal requirements too. A good talk with a lawyer should give you some answers.\n", "post": "https://www.reddit.com/r/startups/comments/85c6eq/how_can_i_find_out_if_my_business_idea_is_sellable/"}, {"body": "Of course things would be easier with more money. \n\nBut it's not like you just walk into someone's office and say \"can I have some money\" and they say yes and off you go. Raising money, via Kickstarter or an investor is not trivial in terms of work. It takes several weeks or months to prepare your Kickstarter campaign or establish yourself in the investment community. If you think it makes more sense to spend your time/energy trying to raise money rather than building the product, you can go ahead and do that. \n\nInvestors will give you money if they believe in you or the product. Almost never do they have the time or expertise to evaluate the idea. When you pitch, you may talk about the problem and opportunity and things like that, but ultimately few investors will make a decision without knowing the basic financial facts about the product: CAC, LTV, traction/retention, market size. You cannot know those things without having tested your prototype/MVP with real users. ", "post": "https://www.reddit.com/r/startups/comments/85ert5/startup_idea_funding_timing_advice/"}, {"body": "It's extremely difficult to raise funding on just an idea unless you have a track record that screams success like a previous exit. \n\nReceiving funding can differ between hardware and software startups. If you have really sick prototypes of a hardware product, you can potentially raise money from Kickstarter. You'll probably have to find someone to make a video of what the product can do and how it's so cool. That may validate your idea to potential investors if you can raise a little bit through that channel.\n\nThe bar for software startups to raise funds has raised over the past few years. There is now such thing as \"pre-seed,\" because seed investments have gotten so much larger and harder to raise. \n\nIs there anything you can disclose about your product?", "post": "https://www.reddit.com/r/startups/comments/85ert5/startup_idea_funding_timing_advice/"}, {"body": "Hi, it is never too early to start thinking about funding and going to the right place at the right time/ stage in your development is essential. Dave from Fluid UI wrote a great article on how to get into the right mindset for [Startup Funding](http://blog.fluidui.com/startup-fundraising-the-right-mindset/) recently which goes through all the possibilities. It is based on experience so well worth a read.", "post": "https://www.reddit.com/r/startups/comments/85ert5/startup_idea_funding_timing_advice/"}, {"body": "Get as much done as you can before raising capital. If you can pull off a successful kickstarter, go for it. Waiting until you have a prototype, product, sales, etc. (assuming you can) will only 1) help you raise capital and 2) improve your valuation. But if you need to build fast, go raise some angel money.", "post": "https://www.reddit.com/r/startups/comments/85ert5/startup_idea_funding_timing_advice/"}, {"body": "In SaaS, it's important to get people paying you ASAP (once you've built an MVP). That's not so you can make money, it's so you can validate that the problem you're solving is real. It's easy to get people to say that a product would be cool or that they could see themselves paying for it -- getting them to actually do it is the hard part.\n\nIn the process of getting those first few customers, you'll likely learn more about the (business) problem than you would with thousands of free users.", "post": "https://www.reddit.com/r/startups/comments/85fvyx/is_it_a_good_idea_to_make_saas_free_and_monetize/"}, {"body": "Go for free, once you get 10k+ subscribers figure out the business model. At least you will have a user base to market to and growth you need to sustain your operations.\n\nIf you can - stick to free option and build your revenue by offering something special.", "post": "https://www.reddit.com/r/startups/comments/85fvyx/is_it_a_good_idea_to_make_saas_free_and_monetize/"}, {"body": "For a inbound-focused biz SaaS model (direct sales/enterprise focused is a different story as is ad-based pricing for consumer), you have two main options:\n\n* Freemium. Charge nothing for a base tier, but provide incentives to bump up to a paid tier.\n* Trial. Free for 14 days, etc. and then you have to pay to keep using it.\n\nEven if you turn on pricing slowly (say, a beta period), you should be figuring out where you fit as people coming to your site will want to know what they're getting into.  \n\nThere is certainly a place for freemium in the world (this is a good article: https://www.saastr.com/2018-2025-age-saas-freemium/) and you have seen this really take off lately with APIs.  But, you really need a hook to get people paying you (usage, crippled features, necessary features, # of users, # of foo, etc.). Usage is easier as it makes sense to a user.  For example, mailchimp gives you x emails per month, but if you grow bigger you need to pay.  Crippled free tier is tricky, as you are by necessity not giving people the full experience of your software.\n\nIf you're app doesn't have any natural drivers like this, then a free trial works just as well.  Gotta really focus on onboarding and driving success in those first couple weeks.\n\nEither way, if you start providing value, turn on your pricing.  People will pay if you're giving them value.  \n\n\n\n\n", "post": "https://www.reddit.com/r/startups/comments/85fvyx/is_it_a_good_idea_to_make_saas_free_and_monetize/"}, {"body": "The thing is, people using your product and people paying for your product might be two different groups. Getting visitors doesn't equal getting customers.\n\n", "post": "https://www.reddit.com/r/startups/comments/85fvyx/is_it_a_good_idea_to_make_saas_free_and_monetize/"}, {"body": "Offer a free trial period, then a monthly subscription based fee. This will allow you to determine your retention and conversion rates.", "post": "https://www.reddit.com/r/startups/comments/85fvyx/is_it_a_good_idea_to_make_saas_free_and_monetize/"}, {"body": "There are good reasons for this hesitation. You have other less risky options on the table. For example, get an engineering job.\n\nIf you can establish a comfortable stable income, this is a much better foundation to start a business. It's a simple law of human nature, Maslow's hierarchy of needs. If you don't have security for yourself or your family, you are prone to making bad decisions. What level of security depends on each person which is why some people don't need it at all. But because you hesitate, that is probably not you and it's harder to change yourself than to bargain with yourself. \n\nI would say first get a steady job. Work on your ideas on the side. Also study patent law. Get some patents and license them. Keep your personal expenses low and use extra income to fund business ideas. That way if they fail you are not out on the street. \n\nSome would disagree with this, and say to put yourself in a position where failure is not an option and therefore a powerful motivator. It depends on you, but I think if you were able to do this, you would do it and this post would not be happening. ", "post": "https://www.reddit.com/r/startups/comments/85c0kp/how_to_overcome_a_mental_barrier/"}, {"body": "Ah mate, 20 year old Australian also in sorta similar shoes. Although I'm in software engineering, haven't had much luck in being able to get over the first step into startups and entrepreneurship unfortunately. Hope it works out for you soon! ", "post": "https://www.reddit.com/r/startups/comments/85c0kp/how_to_overcome_a_mental_barrier/"}, {"body": "creating a successful company requires some experience in the industry and the market. Without it this is still possible but as likely as winning a big lottery. Why not to try to get a job close to your interrests, look around and then decide what to do next?", "post": "https://www.reddit.com/r/startups/comments/85c0kp/how_to_overcome_a_mental_barrier/"}, {"body": "Where in Aus are you? Im in melbourne have a creative agency amd a few side projects. If your this side of the world it would be good to catch up and discuss. Ive gone through the full range of success and failure so might be able to help.", "post": "https://www.reddit.com/r/startups/comments/85c0kp/how_to_overcome_a_mental_barrier/"}, {"body": "Grab a beer with someone that works there.", "post": "https://www.reddit.com/r/startups/comments/85dxxm/how_to_discern_if_the_startup_youre_joining_is/"}, {"body": "That\u2019s actually a really important question to ask.", "post": "https://www.reddit.com/r/startups/comments/85dxxm/how_to_discern_if_the_startup_youre_joining_is/"}, {"body": "Go for it. Totally viable strategy, just make sure you keep the questions short and sweet. You can always circle back to the people who engage with you to ask them more questions later.", "post": "https://www.reddit.com/r/startups/comments/85dah7/international_customer_development_interviews/"}, {"body": "The average of the best iced tea recipe and the best hot tea recipe will not be better than either of them.", "post": "https://www.reddit.com/r/Python/comments/85waj3/consenus_cookery_generate_an_average_recipe_for/"}, {"body": "That is an amazing idea.  \n\n\nBecause of how it clusters, it can really be applied to all internet knowledge/opinions and a mixture thereof.", "post": "https://www.reddit.com/r/Python/comments/85waj3/consenus_cookery_generate_an_average_recipe_for/"}, {"body": "Pretty neat, but 1/8th teaspoon of baking powder as the only leavener for pancakes is just going to result in a soup of sadness", "post": "https://www.reddit.com/r/Python/comments/85waj3/consenus_cookery_generate_an_average_recipe_for/"}, {"body": "I love it!", "post": "https://www.reddit.com/r/Python/comments/85waj3/consenus_cookery_generate_an_average_recipe_for/"}, {"body": "Omg as Italian passionate about cooking and fine food this can either a great project or a kitchen hell app. ", "post": "https://www.reddit.com/r/Python/comments/85waj3/consenus_cookery_generate_an_average_recipe_for/"}, {"body": "This is neat, but I'm a little unclear on why node was needed.", "post": "https://www.reddit.com/r/Python/comments/85waj3/consenus_cookery_generate_an_average_recipe_for/"}, {"body": "How do you get the cooking instructions though?", "post": "https://www.reddit.com/r/Python/comments/85waj3/consenus_cookery_generate_an_average_recipe_for/"}, {"body": "This seems to have a lot of similarities to https://github.com/pydanny/cookiecutter-django.", "post": "https://www.reddit.com/r/Python/comments/85xp7i/a_framework_for_launching_new_django_projects/"}, {"body": "Are developers really launching so many projects that optimizing here is useful?", "post": "https://www.reddit.com/r/Python/comments/85xp7i/a_framework_for_launching_new_django_projects/"}, {"body": "Awesome! Fast cpyext is going to be a game-changer for pypy. Can't wait for it to be released.", "post": "https://www.reddit.com/r/Python/comments/85r3jx/pygame_on_pypy_usable_05x_to_30x_the_speed/"}, {"body": "As someone with no experience in designing games, will Python ever be a feasible language to write games in, or will it most likely always just be for fun/hobby?", "post": "https://www.reddit.com/r/Python/comments/85r3jx/pygame_on_pypy_usable_05x_to_30x_the_speed/"}, {"body": "Nice article! However, I disagree in one thing. Author writes: \"And in some cases it (pypy) can be faster than C.\" In the real applications, a good written program in C is always faster than a program interpreted through pypy. ", "post": "https://www.reddit.com/r/Python/comments/85r3jx/pygame_on_pypy_usable_05x_to_30x_the_speed/"}, {"body": "Am I reading that correctly? Wouldn't \"0.5x to 30x the speed\" imply that using this is potentially slower than not using it? 0.5x would imply a decrease in speed....\n\nEdit: I think that the author meant 1.5x to 30x the speed.", "post": "https://www.reddit.com/r/Python/comments/85r3jx/pygame_on_pypy_usable_05x_to_30x_the_speed/"}, {"body": "0.5x to 30x.  Performance unpredictable to within a factor of 60.\n\nI understand that certain parts of Python make JIT really hard, but this is sort of depressing.", "post": "https://www.reddit.com/r/Python/comments/85r3jx/pygame_on_pypy_usable_05x_to_30x_the_speed/"}, {"body": "Here's the actual link to the article instead of the junk from KDNuggets.\n\nhttps://medium.com/@rchang/a-beginners-guide-to-data-engineering-part-i-4227c5c457d7", "post": "https://www.reddit.com/r/Python/comments/85rt5z/a_beginners_guide_to_data_engineering/"}, {"body": "\"Let's write a compression algorithm...\"\n\nIt allows them to show they know the basics of data types and their manipulation.  The questions they ask show you what how they approach problems and how they handle ambiguity.  There are plenty of opportunities to discuss what is faster or more efficient in general, and what is faster or more efficient in Python.", "post": "https://www.reddit.com/r/Python/comments/85ymnb/good_questions_to_ask_interview_candidates/"}, {"body": "They should have a follow up post when they move to 3.", "post": "https://www.reddit.com/r/Python/comments/85mx69/the_great_python_refactor_of_2017_and_also_2018/"}, {"body": "&gt; So what was wrong with our codebase? Take your pick:\n\n&gt; ...\n\n&gt; *2*. We had a method named login.login.Login.login. (If you're wondering, this method was part of the login process.)\n\n:p", "post": "https://www.reddit.com/r/Python/comments/85mx69/the_great_python_refactor_of_2017_and_also_2018/"}, {"body": "Did OP just stop writing? I'm not seeing the part where they migrated to Python 3. ", "post": "https://www.reddit.com/r/Python/comments/85mx69/the_great_python_refactor_of_2017_and_also_2018/"}, {"body": "1. Why are you whitelisting modules?\n2. Divide your problem space so that you aren't stepping on each others toes. If everything is too entangled, minimize the number of people making changes at once. Ideally, build search and replace scripts to rename en mass, editing your script and building up a set of changes to make and then applying them all at once.\n3. Keep datafiles in locations relative to their usage. If you need to refer to a datafile in a higher level directory, reference it via a module in that directory.\n4. Don't use pickle. It is one of the least safe, most problematic ways of serializing things. Just don't use it.", "post": "https://www.reddit.com/r/Python/comments/85mx69/the_great_python_refactor_of_2017_and_also_2018/"}, {"body": "This kinda makes me want to cry. Great that they refactored, but it's going to get back to that state because it's a culture and process problem.", "post": "https://www.reddit.com/r/Python/comments/85mx69/the_great_python_refactor_of_2017_and_also_2018/"}, {"body": "&gt; Once we knew what files we wanted to go where, we used slicker to do the actual moving. It works as a smarter mv, not only renaming the file but also fixing all imports as well as references in comments and strings \n\nI can't imagine having to work on a project that size without a full-fledged IDE much less refactor one", "post": "https://www.reddit.com/r/Python/comments/85mx69/the_great_python_refactor_of_2017_and_also_2018/"}, {"body": "&gt; login.login.Login.login\n\n", "post": "https://www.reddit.com/r/Python/comments/85mx69/the_great_python_refactor_of_2017_and_also_2018/"}, {"body": "Some highlights:\n\n * Implicit dependency on file location makes it difficult to move files\n * If moving files (will happen) having oneliner imports will promote merge conflicts\n * A codebase under the watch of a performance[1] project, indirectly cause it to be well organized.\n\n[1] In this case, good performance of building and distribution (i.e. JS code).", "post": "https://www.reddit.com/r/Python/comments/85mx69/the_great_python_refactor_of_2017_and_also_2018/"}, {"body": "Some of this looks like it could of been solved with design patterns. \n\nA builder pattern would be great for RSS. ", "post": "https://www.reddit.com/r/Python/comments/85mx69/the_great_python_refactor_of_2017_and_also_2018/"}, {"body": "I find it interesting that you went with py.test that builds on unittest but stayed on print where the logging module is native? ", "post": "https://www.reddit.com/r/Python/comments/85tzg1/4_techniques_for_testing_python_commandline_cli/"}, {"body": "Google Scholar is your friend. Search there with your keywords to see what other people have done and then formulate a dissertation idea you like.\n\nCreating and formulating your dissertation topic is a big part of your research skills.\n\n", "post": "https://www.reddit.com/r/Python/comments/85xncf/final_year_project_ideas/"}, {"body": "\"Fluent Python\" is a good book you might want to check out. Not a video course though.", "post": "https://www.reddit.com/r/Python/comments/85tre2/intermediate_coursese/"}, {"body": "[https://training.talkpython.fm/](https://training.talkpython.fm/)   Michael Kennedy\u2019s courses are what you\u2019re looking for.  Listen to his podcast at talkpython.fm if you\u2019re still hesitant or email him.  He had a special still going.\n\nYou can also check out [python bytes](pythonbyt.es) which is a python community and actual coding challenges with teaching and so forth.  Two guys run the show and they are approachable and helpful.\n\nThis should keep you busy ", "post": "https://www.reddit.com/r/Python/comments/85tre2/intermediate_coursese/"}, {"body": "Learn design patterns.", "post": "https://www.reddit.com/r/Python/comments/85tre2/intermediate_coursese/"}, {"body": "https://www.udemy.com/the-python-mega-course/", "post": "https://www.reddit.com/r/Python/comments/85tre2/intermediate_coursese/"}, {"body": "Python can't be multithreaded because of the GIL. If you want to run parallel functions, you need to use [multiprocessing.Process](https://docs.python.org/3/library/multiprocessing.html?highlight=process#multiprocessing.Process).", "post": "https://www.reddit.com/r/Python/comments/85xc75/trying_to_run_2_while_loops_at_once/"}, {"body": "/r/django", "post": "https://www.reddit.com/r/Python/comments/85sik7/where_can_one_find_news_about_djangopython/"}, {"body": "For python this will be great , for django /r/django", "post": "https://www.reddit.com/r/Python/comments/85sik7/where_can_one_find_news_about_djangopython/"}, {"body": "A more general answer, but [Python Weekly](https://www.pythonweekly.com/) always seems to have some interesting articles and Django news pops up pretty frequently. ", "post": "https://www.reddit.com/r/Python/comments/85sik7/where_can_one_find_news_about_djangopython/"}, {"body": "Does this have asynchronous / threading enabled in case processing a response takes a long time and may block others reads &amp; responses?", "post": "https://www.reddit.com/r/Python/comments/85rzfp/slackapi_send_bot_messages_using_python/"}, {"body": "I found click a great tool to wrap python projects. To add migration steps, testing and other stuff related to the project itself.\n\nThis is just a click bait without technical fundamentals but only few wrong concept ideas such as \"only one purpose\"\n\nGo ahead, use click. If it fits your needs, use it, its that simple. ", "post": "https://www.reddit.com/r/Python/comments/85y5y9/please_dont_use_click/"}, {"body": "&gt; Fri 20 May 2016\n\nConsidering I've been using click successfully since before this, I'm gonna go a head and just ignore this.", "post": "https://www.reddit.com/r/Python/comments/85y5y9/please_dont_use_click/"}, {"body": "I feel like a better criticism is that the decorators return a callable which does not act like the function being decorated. This makes testing and composing functions seemingly obnoxious.\n\nI feel like my ideal interface would leverage type annotations and separate there cli registration from definition, maybe something like\n\n    def command(name: int, fun: Optional[bool]=None):\n        ...\n    \n    cli.run(\n        commands=[command],\n    )\n\nEdit: I may mean [hug](http://www.hug.rest/)", "post": "https://www.reddit.com/r/Python/comments/85y5y9/please_dont_use_click/"}, {"body": "All the old stuff is on PyPI.  Looks like the last version you can use is 1.10.4, which isn't all that old:\n\nhttps://pypi.python.org/pypi/numpy/1.10.4", "post": "https://www.reddit.com/r/Python/comments/85vxfq/looking_for_numpy_source_compatible_with_python/"}, {"body": "Great to see supplemental libs coming out for aiohttp ", "post": "https://www.reddit.com/r/Python/comments/85tz8a/aiohttpjwt_tiny_middleware_and_useful_utils_for/"}, {"body": "&gt; [SQLAlchemy is the Python SQL toolkit and Object Relational Mapper that gives application developers the full power and flexibility of SQL.](http://www.sqlalchemy.org/)", "post": "https://www.reddit.com/r/Python/comments/85t706/python_library_for_mssql/"}, {"body": "python's db-api 2.0 spec is the standard.\n\nUse pymssql not pyodbc.\n\nhttp://www.pymssql.org/en/stable/pymssql_examples.html\n\n    conn = pymssql.connect(\"192.168.10.198\", \"odoo\", \"secret\", \"EFACTURA\")\n    cursor = conn.cursor()\n    cursor.execute('SELECT * FROM usuario')    ", "post": "https://www.reddit.com/r/Python/comments/85t706/python_library_for_mssql/"}, {"body": "Please don't write SQL strings in 2018. Use something like SQLAlchemy. ", "post": "https://www.reddit.com/r/Python/comments/85t706/python_library_for_mssql/"}, {"body": "Sklearn ", "post": "https://www.reddit.com/r/Python/comments/85utqk/looking_for_recommandation_for_a_naive_bayesian/"}, {"body": "Not too sure what you are trying to do, but if you pip install something when a certain conda environment is active, I am pretty sure it gets installed in that environment...\nInstalling from source could also be a solution, as you can choose where to put the final library/executable.\n\nJust out of interest, what doesn't work in docker? :)", "post": "https://www.reddit.com/r/Python/comments/85uh1j/possible_to_put_nonconda_programs_in_a_conda/"}, {"body": "FreeBSD has \u2018jails\u2019 that allow you to virtualize or you can use something like virtual box to virtualize another OS as well. \n\n\n\nEdit: I see the comment on admin access now, [QEMU](https://www.qemu.org) says it allows install w/o admin right and might do what you need ", "post": "https://www.reddit.com/r/Python/comments/85uh1j/possible_to_put_nonconda_programs_in_a_conda/"}, {"body": "One approach would be to add recipes for those non-conda programs to [conda-forge](https://github.com/conda-forge/), and then they will be conda programs :)", "post": "https://www.reddit.com/r/Python/comments/85uh1j/possible_to_put_nonconda_programs_in_a_conda/"}, {"body": "You can include folders and files of any sort in a wheel file, would that help?\n\nhttps://python-packaging.readthedocs.io/en/latest/non-code-files.html", "post": "https://www.reddit.com/r/Python/comments/85uh1j/possible_to_put_nonconda_programs_in_a_conda/"}, {"body": "This will speed up my web app about four times once it\u2019s actually usable on non-dev machines. My app has to render images in WebGL and export to png constantly, and being able to multithread this will help a lot with performance.", "post": "https://www.reddit.com/r/javascript/comments/85reh7/excited_that_offscreencanvas_is_finally_happening/"}, {"body": "Could someone explain like I'm 5?", "post": "https://www.reddit.com/r/javascript/comments/85reh7/excited_that_offscreencanvas_is_finally_happening/"}, {"body": "I'm happy people are catching up to this.\n\nIt was a huge amount of work (both by us and FF) and it will soon be launched. :)", "post": "https://www.reddit.com/r/javascript/comments/85reh7/excited_that_offscreencanvas_is_finally_happening/"}, {"body": "Cool, I want to try that for my JS ray tracing project which is singlethreaded currently: https://rkibria.github.io/multiray.js/\n\nI\"ve been wondering how I might use workers but the message thing would be very annoying if you have to rely on strings. Transferring arrays like that sounds far more appropriate.", "post": "https://www.reddit.com/r/javascript/comments/85reh7/excited_that_offscreencanvas_is_finally_happening/"}, {"body": "finally! I am really happy to see these kind of changes on the web. Even though we cannot use many of them in production yet there is a hope for efficent web.", "post": "https://www.reddit.com/r/javascript/comments/85reh7/excited_that_offscreencanvas_is_finally_happening/"}, {"body": "The linked tweet was tweeted by [@ebidel](https://twitter.com/ebidel) on Mar 19, 2018 17:37:00 UTC\n\n-------------------------------------------------\n\nExcited that OffscreenCanvas is finally happening: &amp;lt;canvas&amp;gt; that's usable in a worker \ud83e\udd18Behind a flag in Chrome 60 and FF 44.\n\nDemo: [https://ebidel.github.io/demos/offscreencanvas.html](https://ebidel.github.io/demos/offscreencanvas.html)\n\nStatus: [https://www.chromestatus.com/feature/5424182347169792](https://www.chromestatus.com/feature/5424182347169792) \n\n[Attached photo](https://pbs.twimg.com/media/DYcxIQXUQAAzibD.jpg:orig)\n\n-------------------------------------------------\n\n^\u2022\u00a0Beep\u00a0boop\u00a0I'm\u00a0a\u00a0bot\u00a0\u2022\u00a0Find\u00a0out\u00a0more\u00a0about\u00a0me\u00a0at\u00a0/r/tweettranscriberbot/\u00a0\u2022", "post": "https://www.reddit.com/r/javascript/comments/85reh7/excited_that_offscreencanvas_is_finally_happening/"}, {"body": "You need to build things. No course is going to make up for experience. Just build things. It doesn't have to be anything fancy or new. Just find a website  or app that you think looks nice and rebuild it without just copying the code.", "post": "https://www.reddit.com/r/javascript/comments/85xbj3/about_to_graduate_and_feel_like_i_dont_know/"}, {"body": "I know this isn't much help but I felt the exact same out of college. It wasn't until I had to start using it at work that anything stuck. Yes, that's a sort of chicken before the egg scenario. Regardless, it was necessity that motivated me to learn in the first place. If I spent my whole life in college it wouldn't have taught me anywhere near as much as one year in a web dev job.\n\nThe point: don't worry about how little you think you know. Apply for jobs anyway. Having the right attitude counts for a lot more than whether or not you memorized for loops or whatever.", "post": "https://www.reddit.com/r/javascript/comments/85xbj3/about_to_graduate_and_feel_like_i_dont_know/"}, {"body": "Study data structures and algorithms, then apply javascript to that conceptual knowledge.\n\n***\n\nLearn your environment / API's. For example if you using a browser obviously it has a `window` object\n\nhttps://developer.mozilla.org/en-US/docs/Web/API\n\nIn contrast nodeJS doesn't have a window object, but it has other globals that a browser doesn't.\n\nhttps://nodejs.org/dist/latest-v8.x/docs/api/\n\n***\n\nUnderstand the execution lifecycle (sync vs async) of your chosen environment, take a look at the following :\n\nhttps://www.youtube.com/watch?v=OyKHD4NGCQo\n\nSounds intimidating at the start but most things are explained reasonably well.\n\n***\n\nAlso it's rather cliche but depending on what you're doing i'd recommend familiarising yourself with a framework. React is probably a safe bet for web stuff at the moment, otherwise vueJS. For other utility / generic libraries, underscore, lodash or ramda are decent choices. Why? Because it lets you go faster.\n\n***\n\nI'd also recommend reading the following\n\nhttps://github.com/getify/You-Dont-Know-JS", "post": "https://www.reddit.com/r/javascript/comments/85xbj3/about_to_graduate_and_feel_like_i_dont_know/"}, {"body": "&gt; bachelors in web development\n\nwait up\n\n&gt; bachelors\n\n...\n\n&gt; in web development\n\nYou mean, like, a Bachelors of Science? From an accredited university? In web development?", "post": "https://www.reddit.com/r/javascript/comments/85xbj3/about_to_graduate_and_feel_like_i_dont_know/"}, {"body": "Could you share specific topics that you covered, what you're already good at, and what you need help with?\n\nClosures? Asynchronous execution? Performance topics? Specific framework methodologies? Type coercion? Events, bubbling, and delegation? Network latency/server-side topics?\n\nYou could look at [the top Javascript questions](https://stackoverflow.com/questions/tagged/javascript?sort=frequent&amp;pageSize=15) on StackOverflow. Read the questions, don't look at the answer, then check your answer. It's pretty thorough, and they're all common interview questions.\n\nThe more specific you are the better we can help.", "post": "https://www.reddit.com/r/javascript/comments/85xbj3/about_to_graduate_and_feel_like_i_dont_know/"}, {"body": "Been writing it for a decade and feel like I don\u2019t know JavaScript for shit.\n\nBe patient and deliberate with your practice. No one ever masters anything, you\u2019ll just get more fluent and slowly realize you\u2019re not having to look up basic syntax or common functionality. \n\nFollow talented and driven devs on Twitter and Github. Look at their code and read about their habits. What blogs do they read? Who did _they_ look up to? Always be finding new people to admire.\n\nMy biggest piece of advice - and others here are saying it too - is to just build shit. I use random side projects as an excuse to learn new tech. Like just the other day I had to write a little webapp for our office manager that scraped a page and displayed some data \u2014 I wrote it in Laravel/Vue just so I could see what it\u2019s about (loved both).\n\nThink of an idea, original or not, and go for it. The classic example a former CS prof used for VisualBasic was a hotel booking application. You\u2019d have rooms, vacancies, dates, reservations, etc. Lots of good object-oriented friendly ideas to explore and plenty of common events to fire/listen-to.\n\nCheck out EloquentJavascript (free ebook online) - I\u2019d link you but my gf is finally ready and we\u2019re heading out to get some food. Good luck!", "post": "https://www.reddit.com/r/javascript/comments/85xbj3/about_to_graduate_and_feel_like_i_dont_know/"}, {"body": "As others have said, the best way to learn is to actually make things. Check out [JavaScript 30](https://javascript30.com/).", "post": "https://www.reddit.com/r/javascript/comments/85xbj3/about_to_graduate_and_feel_like_i_dont_know/"}, {"body": "There is also a Medium article for those who cannot watch a video at work!\nhttps://blog.matters.tech/10-redux-tips-from-the-trenches-55e06ed1c0a8", "post": "https://www.reddit.com/r/javascript/comments/85wmaa/struggling_with_redux/"}, {"body": "I know this is a demo, but its worth noting that this is unnecessary because Reddit has a REST-ish API.", "post": "https://www.reddit.com/r/javascript/comments/85xtpl/scraping_data_from_reddit_with_cheerio/"}, {"body": "Date doesn\u2019t have to parse a string to construct a date \u2013 you can pass in `(year, month, day /* etc */)` as integers. The only thing to be careful about is that months are 0-based in JS (because it copied Java), so make sure to account for that when you parse your string. ", "post": "https://www.reddit.com/r/javascript/comments/85yhvx/date_format_problem/"}, {"body": "The linked tweet was tweeted by [@wesbos](https://twitter.com/wesbos) on Mar 20, 2018 14:04:33 UTC\n\n-------------------------------------------------\n\n\ud83d\ude2e Did you know Chrome has a FaceDetector API? \n\n[Attached photo](https://pbs.twimg.com/media/DYvLKKMXkAAUxjf.jpg:orig)\n\n-------------------------------------------------\n\n^\u2022\u00a0Beep\u00a0boop\u00a0I'm\u00a0a\u00a0bot\u00a0\u2022\u00a0Find\u00a0out\u00a0more\u00a0about\u00a0me\u00a0at\u00a0/r/tweettranscriberbot/\u00a0\u2022", "post": "https://www.reddit.com/r/javascript/comments/85tquf/did_you_know_chrome_has_a_facedetector_api_and_it/"}, {"body": "Really sad to see Inferno drop so much. One of my favorite projects in the world.", "post": "https://www.reddit.com/r/javascript/comments/85so44/whats_new_in_javascript_frameworks_march_2018/"}, {"body": "anyone used svelte much?", "post": "https://www.reddit.com/r/javascript/comments/85so44/whats_new_in_javascript_frameworks_march_2018/"}, {"body": "Ironically, someone in my development team linked this article earlier today.\n\nI think this article is what it says it is, a rant, and aside from complaining about common misconceptions about the usage of `const` I find very little useful convincing information in this article.\n\nPoints 1-3 are what I just said, seemingly an outburst of frustration about misconception, and it's good to understand these.\n\nPoint 4 is, well, not a point. \n\nPoint 5 is seemingly the only argument he makes against using `const`, and to me doesn't make any sense. I use `const` **a lot** more than `let` and I don't ever \"change all the `let` that we didn't mutate to `const`\". I start off with a const, and change it to `let` if I need to - which is very rare, I'd say `const` is more than 10 times more common than `let` in our code at work. When I see a `const` I *assume* people don't reassign it, and when I see a `let` I *assume* people do. In most scenarios this helps contribute to the purpose of the variable. (So basically, what OP said)\n\nPoint 6 I agree with. We use the UPPER_SNAKE_CASE notation for our application constants, such as api keys, request urls, route identifiers, never inside functions, always at top scope. And as mentioned when using let, we use it in a function. We don't have strict rules about this, this is just how it ends up being.\n\nI do think the article is an interesting read, but don't think it should diminish usage of `const` over `let` for whatever little reasoning is provided in the article.", "post": "https://www.reddit.com/r/javascript/comments/85v3ui/when_do_you_use_let_vs_const/"}, {"body": "References being immutable is also quite valuable to know. I really think that should be the end of the conversation.\n\nThe only thing I'd add is that, unless you're being really subversive, `const` pretty much means it will always be the same type (and non-nullable). To me, that's probably the most important thing. `let` often means the variable starts off `null` or `undefined` and (potentially) gets defined later.\n\nI generally avoid mutating literally anything for any reason, though, so maybe the distinction is more valuable when you do that.", "post": "https://www.reddit.com/r/javascript/comments/85v3ui/when_do_you_use_let_vs_const/"}, {"body": "I think that many, especially developers moving from other languages to JavaScript misread const as constant where is is actually a constant reference. It just tells you that a variable will reference the same object (as in everything is an object in JS) that it was defined with. That is valuable information. \n\nWe go with `const` for everything, except when we really need a changeable reference, which should happen rarely if you follow programming patterns that prefer immutability. ", "post": "https://www.reddit.com/r/javascript/comments/85v3ui/when_do_you_use_let_vs_const/"}, {"body": "We default to \"const\" at work, and use \"let\" only when the variable will be changed later in the function. We also code in Scala and there use use \"val\" whenever we can, and we use \"var\" only when the variable in being changed.", "post": "https://www.reddit.com/r/javascript/comments/85v3ui/when_do_you_use_let_vs_const/"}, {"body": "I\u2019ve seen some big names on Twitter say they ditched const because it isn\u2019t actually a constant.\n\nI\u2019ve got to disagree. Sure they could have named it bind or something to make clear it\u2019s about reference binding and not immutability, but it\u2019s still far safer to use const over let 99% of the time.\n\nIt gets a bit confusing for people who think const means constant and then see someone, say, amending properties to a const object or pushing to a const array. Still worth it over let IMO.\n\nAlso coney variable names WRITTEN_LIKE_THIS is an old convention for constant values from other languages.", "post": "https://www.reddit.com/r/javascript/comments/85v3ui/when_do_you_use_let_vs_const/"}, {"body": "[The guy who proposed `const` be added to JavaScript says it was a mistake](https://twitter.com/littlecalculist/status/917875241891676160)", "post": "https://www.reddit.com/r/javascript/comments/85v3ui/when_do_you_use_let_vs_const/"}, {"body": "I 100% agree with that rant and I've been using [this](https://www.npmjs.com/package/eslint-plugin-prefer-let) ESLint plugin lately.\n\n&gt; Things being basically equal, code should speak to humans first, and computers second. As such, JavaScript codebases should follow the long-standing conventions set forth by both formal symbolic logic and the practice of functional programming.\n\n&gt; Usage of the const keyword to bind an intermediate value of a computation places emphasis on the compiler and its role in ensuring that a reference never changes. By contrast using let in the same situation reads, in plain English, the programmer's intent to declare a name value binding.\n&gt; \n&gt; It is this plugin's opinion that preventing reassignment of let bindings is better accomplished as a linting rule.\n&gt; \n&gt; const bindings are allowed at the top-level of a module's scope so that it can represent a value that is a true, dependency-free constant such as \u03c0, \u212f, etc...", "post": "https://www.reddit.com/r/javascript/comments/85v3ui/when_do_you_use_let_vs_const/"}, {"body": "I find it very helpful to see that a variable is a `const` and know that it won't change, makes it a lot easier for me to parse logic when reading code. I always use  `const` unless doing so would result in an error. I normally name global constants `LIKE_THIS`. ", "post": "https://www.reddit.com/r/javascript/comments/85v3ui/when_do_you_use_let_vs_const/"}, {"body": "I don't think there's anything wrong with classes, inherently. Though, they do make it somewhat easier to fall into traps (such as fragile inheritance chains) and can be confusing to those from other languages who don't understand prototypal inheritance. But anything you can do wrong with classes, you can also do wrong without using the `class` keyword. The solution isn't to stop using something that provides nice syntax sugar, the solution is to just not write bad code.", "post": "https://www.reddit.com/r/javascript/comments/85xt7m/when_if_ever_should_we_use_classes/"}, {"body": "A fun trick is to stop reading anything Eric Elliott writes ", "post": "https://www.reddit.com/r/javascript/comments/85xt7m/when_if_ever_should_we_use_classes/"}, {"body": "A classes (IMO) and OOP in general are useful for passing state around. Doing it without OOP is hard.\n\nExample. A `VideoPlayer` class that creates a video player on the page. At any point you can ask the class instance to pause/play or check the current play state.\n\nYou can pass the `videoPlayer` instance around between your code and know what state it's in and also what it can can't do.\n\nDoing that without OOP would be hard, convoluted (IMO).", "post": "https://www.reddit.com/r/javascript/comments/85xt7m/when_if_ever_should_we_use_classes/"}, {"body": "Sometimes it is convenient when you have a library you want to use (i.e. React) and there isn't really another option when using it. But then I would still follow: https://medium.com/@dan_abramov/how-to-use-classes-and-sleep-at-night-9af8de78ccb4", "post": "https://www.reddit.com/r/javascript/comments/85xt7m/when_if_ever_should_we_use_classes/"}, {"body": "Object oriented programming means binding data to behavior.  That doesn't imply classes.  *But!* they're an excellent choice.  And often, they're easier and more predictable to grok than the alternatives, especially if you're writing code that others will contribute to.\n\nWanna have a data structure and override defaults with custom values?  We often use objects for that.  What if some of those defaults are actually functions, or behaviors?  What if your non-default custom behaviors also want to occasionally  delegate or wrap the default behaviors?  That sounds an awful lot like methods.\n\nWhat if you don't know if you'll have custom behaviors, but you don't care and you just wanna move on with your day?  You can use classes and have the *possibility* of using all those features down the road, if / when the need arises.\n\nToo often JS libs reimplement some of classes' semantics in bespoke ways.  But in the end this just adds cognitive overhead without benefit.  If everyone understands classes, then you have an easy-to-grok out-of-the-box way to model a bunch of common coding patterns.  No sense reinventing the wheel.\n\nTooling understands classes well, too.  In case tab completion is a thing you care about.\n\nAnyway, not saying classes are always the right option, but be wary of advice that tells you to avoid them.  They work well for a lot of situations.", "post": "https://www.reddit.com/r/javascript/comments/85xt7m/when_if_ever_should_we_use_classes/"}, {"body": "A really good time to use classes is if you want high performance, highly polymorphic code.\n\nFor example, imagine you're writing an ecmascript parser. It typically has a ton of functions to parse various grammar productions, but it also needs to be extensible at arbitrary points of an incredibly complex algorithm to allow parsing arbitrary new syntax proposals without hardcoding them into the core parser. You also want your code to be as fast as possible: you already tackled all the obvious optimizations, and you are now in the territory of trying to avoid deopts from non-monomorphic calls, unnecessary stack allocations on function calls, unnecessary memory usage from closures, etc. What do you do?\n\nYou [write](https://github.com/babel/babylon/blob/1b612148bfee190cc05b0eb78d4c2b3537655c1c/src/parser/statement.js) [a](https://github.com/jquery/esprima/blob/512ce40c276c53adadb5f87e992c91b94bad614d/src/parser.ts#L63) [class](https://github.com/cherow/cherow/blob/84cf807f4d30c6c239005af9c60dc3346763e8f6/src/parser.ts#L64)", "post": "https://www.reddit.com/r/javascript/comments/85xt7m/when_if_ever_should_we_use_classes/"}, {"body": "    /^https:\\/\\/([^\\.]+\\.)?example\\.com\\/$/\n\nMatch `https://` followed OPTIONALLY by (non-period characters followed by a period), followed by `example.com/` and the end of the string.", "post": "https://www.reddit.com/r/javascript/comments/85x2zu/regex_help/"}, {"body": "dunning kruger effect", "post": "https://www.reddit.com/r/javascript/comments/85yel8/im_a_recent_graduate_and_panicking_what_is_going/"}, {"body": "You don't like jQuery and Angular? That's fine. There are plenty of jobs between React and Vue. You already know jQuery and Angular? Even better. It will be easier to learn React and Vue, and potential employers will think it's great if you're truly competent in all of the above.", "post": "https://www.reddit.com/r/javascript/comments/85yel8/im_a_recent_graduate_and_panicking_what_is_going/"}, {"body": "Huh? Using es6+ do we even need lodash or underscore anymore?! Native support for looping is incredible.", "post": "https://www.reddit.com/r/javascript/comments/85u7yb/smaller_lodash_bundles_with_webpack_and_babel/"}, {"body": "You apparently didn't just literally attend [Ember Conf](https://emberconf.com/), lol.\n\nIf you don't know Ember and they want you to use Ember for a \"coding test\" (which are bullshit), I'd say save your time and say thanks but no thanks.  But that's just me.", "post": "https://www.reddit.com/r/javascript/comments/85v8s6/employer_sent_frontend_test_but_they_want_me_to/"}, {"body": "I'd definitely try it as a challenge to test out what makes Ember different from Angular or React as I've noticed Apple using it for their new website. If you've got some free time, why not?", "post": "https://www.reddit.com/r/javascript/comments/85v8s6/employer_sent_frontend_test_but_they_want_me_to/"}, {"body": "I recommend you learn the basics of Ember, even if you don't end up taking the job. There's a lot about Ember that is different from the traditional react + redux stack, that could at the very least make you re-think some pre-convinced truths.\n\nEmber has been around for a long time, and it's not going to go away any time soon. Things you learn from Ember will also help you if you decide to try out other frameworks like vue or angular.", "post": "https://www.reddit.com/r/javascript/comments/85v8s6/employer_sent_frontend_test_but_they_want_me_to/"}, {"body": "Ember is worth it. \n\nI spent the last years developing projects for clients with Ember, I know Angular, React and Vue and for larger projects it would still be my first choice. While it once was quite hard to get started, the CLI makes it easy and the docs are helpful. ", "post": "https://www.reddit.com/r/javascript/comments/85v8s6/employer_sent_frontend_test_but_they_want_me_to/"}, {"body": "Ember is pretty legit, a few companies in London using it at least.\n\nIf it\u2019s not something you\u2019re happy to invest time learning then just pick up React or Angular for a safe bet.", "post": "https://www.reddit.com/r/javascript/comments/85v8s6/employer_sent_frontend_test_but_they_want_me_to/"}, {"body": "What is their stack? \n\nLikely they wanted to measure how fast/well you can learn new things. That's the part of the job description. Especially if they know that your resume does not have Ember. \n\nI think you can learn Ember in 3 full days from a udemy course with project building, and build the test project as you go along. Would take you 3-6 days in total. ", "post": "https://www.reddit.com/r/javascript/comments/85v8s6/employer_sent_frontend_test_but_they_want_me_to/"}, {"body": "I should note this is a bit of experimentation with Javascript AST's using (and inspired) by [recast](https://github.com/benjamn/recast) and [jscodeshift](https://github.com/facebook/jscodeshift).", "post": "https://www.reddit.com/r/javascript/comments/85rpzp/i_created_a_small_tool_to_show_how_many_exports/"}, {"body": "I learned about the future of TypeScript.\nIt have a bright future.", "post": "https://www.reddit.com/r/javascript/comments/85ww65/facts_probably_you_didnt_known_about_typescript/"}, {"body": "I think you mean\n\n    projects = dataset.map(function (d) {\n      return d.map(function (p) {\n        return p.y;\n      });\n    }).smoosh();", "post": "https://www.reddit.com/r/javascript/comments/85wc0i/meme_i_am_a_bad_person/"}, {"body": "This isn't a meme though.. This is just a terrible post.", "post": "https://www.reddit.com/r/javascript/comments/85wc0i/meme_i_am_a_bad_person/"}, {"body": "This is a pretty bad misuse of `map`. You're performing an internal mutation, and not even returning anything. If you want to do that, just use `forEach` instead.\n\nOr, preferably, use a `reduce` or `flatmap`.", "post": "https://www.reddit.com/r/javascript/comments/85wc0i/meme_i_am_a_bad_person/"}, {"body": "Everyone should click through and scroll down a bit just to see how Vez updates the globe with examples of the creation process.  Awesome!", "post": "https://www.reddit.com/r/javascript/comments/85k21i/making_the_globe_in_vanilla_javascript/"}, {"body": "Wow, some serious work went into this, well done!  Do you have any insights into translating some canvas mapping service like mapboxgl onto a 2d/3d sphere when very far zoomed out?", "post": "https://www.reddit.com/r/javascript/comments/85k21i/making_the_globe_in_vanilla_javascript/"}, {"body": "Amazing! This shows power of JS, I really like these interactive documents, I wish to see more of these type of articles. ", "post": "https://www.reddit.com/r/javascript/comments/85k21i/making_the_globe_in_vanilla_javascript/"}, {"body": "The globe is spinning the wrong way. It should be spinning eastwards. You know this because the UK experiences midnight before the states.", "post": "https://www.reddit.com/r/javascript/comments/85k21i/making_the_globe_in_vanilla_javascript/"}, {"body": "Love the article, but I have to ask: Isn't `.website` the most redundant TLD ever? What's next, `.www` so that someone can have `www.www.www`?", "post": "https://www.reddit.com/r/javascript/comments/85k21i/making_the_globe_in_vanilla_javascript/"}, {"body": "Ha ha ha... No NZ", "post": "https://www.reddit.com/r/javascript/comments/85k21i/making_the_globe_in_vanilla_javascript/"}, {"body": "very cool article and presented in a really interesting way", "post": "https://www.reddit.com/r/javascript/comments/85k21i/making_the_globe_in_vanilla_javascript/"}, {"body": "Wow.   And here I was with my bike geometry calculator feeling ... well, not impressed, but at least like I'd done something somewhat difficult.  I'm hoping to move on to having animation of kinematics, but it seems a steep climb.\n\nYou don't even seem to have that many lines of code - where's all the outline data?", "post": "https://www.reddit.com/r/javascript/comments/85k21i/making_the_globe_in_vanilla_javascript/"}, {"body": "VanillaJs, my favorite framework!", "post": "https://www.reddit.com/r/javascript/comments/85k21i/making_the_globe_in_vanilla_javascript/"}, {"body": "Fucking dope.", "post": "https://www.reddit.com/r/javascript/comments/85k21i/making_the_globe_in_vanilla_javascript/"}, {"body": "Very nicely done, some solid 3d and map / globe calcs in there too. Getting this stuff working nicely is HARD. Source: tried and failed to make anything this neat a couple of times. ;) ", "post": "https://www.reddit.com/r/javascript/comments/85k21i/making_the_globe_in_vanilla_javascript/"}, {"body": "Troy Hunt's API is rate-limited to 1 request per 1500 ms. https://haveibeenpwned.com/API/v2#RateLimiting\n\nOne would think that would be a good thing to mention in OP, and consider before building it into a production app. \n\nFew apps have more than one password set per 1.5 seconds on average. But what happens if you happen to get two within a second? A 500 error? One of your users waits 2 seconds extra for a response? It just doesn't check their password?  Depends on how you write your code of course.  I don't know what the gem referenced does, it doesn't mention it. Maybe raises cause it didn't account for it?\n\nIf you're checking passwords on every sign-in, not just password changes, as the OP also suggests, the rate limit would of course be even more problematic. \n\nThe API also has a CA-attribution license which suggests your app needs to advertise that it uses the API, something the OP also doesn't mention. \n\nPerhaps twilio wants to copy the data (which Troy provides for) and provide their own non-rate-limited API without an attribution requirement?", "post": "https://www.reddit.com/r/ruby/comments/85x5c0/better_passwords_in_ruby_applications_with_the/"}, {"body": "Just what I want - web apps to be sending my password around to other services to check how secure it no longer is.", "post": "https://www.reddit.com/r/ruby/comments/85x5c0/better_passwords_in_ruby_applications_with_the/"}, {"body": "AWS has a free tier of services, some for a year, others for life \u2014 could be a good place to deploy something (anything you want to build or just use) to gain practical, marketable skills. ", "post": "https://www.reddit.com/r/ruby/comments/85vi26/where_to_learn_ops/"}, {"body": "[Opsschool](http://www.opsschool.org/en/latest/) is suuuper good", "post": "https://www.reddit.com/r/ruby/comments/85vi26/where_to_learn_ops/"}, {"body": "Thanks! I haven't looked at the code yet, but this is something I have sometimes wanted to do. \n\nPerhaps no coincidence, I work in the library/archives/preservation sector, I see you are also either in that or publishing. :)", "post": "https://www.reddit.com/r/ruby/comments/85t6vu/i_just_open_sourced_30min_of_my_work_on_github/"}, {"body": "If you have an XML schema I'd suggest checking out [jaxb2ruby](https://github.com/sshaw/jaxb2ruby/) (author here). \n\n", "post": "https://www.reddit.com/r/ruby/comments/85t6vu/i_just_open_sourced_30min_of_my_work_on_github/"}, {"body": "Seems like more than 2, but I learned things. ", "post": "https://www.reddit.com/r/ruby/comments/85rarj/2_quick_tips_for_irb/"}, {"body": "I prefer [Pry](https://github.com/pry/pry) over IRB for most things. Colourful output and the ability to dive into objects is a lifesaver. [Example](https://i.imgur.com/a4fYacy.png).", "post": "https://www.reddit.com/r/ruby/comments/85rarj/2_quick_tips_for_irb/"}, {"body": "Im getting 'webpage not available' (mobile, australia)", "post": "https://www.reddit.com/r/ruby/comments/85rarj/2_quick_tips_for_irb/"}, {"body": "https://lankydanblog.com/2017/05/12/debugging-a-rails-server-in-visual-studio-code/\n\nI found this link pretty useful and getting up and running. It's for rails but the extensions involved look like they're also applicable to running standard ruby programs.\n\nIf you're using RVM you'll need to do some more configuration so that the debugger knows the path to your ruby--I don't have that code block on hand but I can look it up later if you need it.", "post": "https://www.reddit.com/r/ruby/comments/85ndzf/ruby_in_vscode/"}, {"body": "I think things are getting pretty well with LSP servers \\(correct completion, code analysis, etc...\\).\n\nHowever, I personally recommend [RubyMine](https://www.jetbrains.com/ruby/). It's my IDE and my best experience with a Ruby IDE \\(especially giving that I use other JetBrains' IDE for other languages\\).", "post": "https://www.reddit.com/r/ruby/comments/85ndzf/ruby_in_vscode/"}, {"body": "I went from TextMate -&gt; Sublime 2, then 3 -&gt; Atom -&gt; RubyMine (very briefly, we didn't get along) -&gt; VSCode.  I guess I've been using VSCode for about a year now, pretty happy with it.\n\nPlugins I use:\n\n* Ruby (by Peng Lv)\n* RubySolargraph\n* GitLens\n* Rubocop\n* Rails Test Runner\n* RailsCasts Theme (with some personal tweaks)", "post": "https://www.reddit.com/r/ruby/comments/85ndzf/ruby_in_vscode/"}, {"body": "All you need is a text editor and a terminal, so yes. The rest is just a matter of preference, play around with different editors/IDEs. \n\nI use Vim and iTerm2", "post": "https://www.reddit.com/r/ruby/comments/85ndzf/ruby_in_vscode/"}, {"body": "I'm pretty content with VSCode and RoR development. Only downside is that VSCode runs inside an electron container so it gobbles up a GB of ram or more :/", "post": "https://www.reddit.com/r/ruby/comments/85ndzf/ruby_in_vscode/"}, {"body": "I really like VSCode. I switch between VIM and VSCode depending on my platform. As far as plugins go, it's pretty lightweight. I just use these 10 plugins. Not pictured is Rubocop, didn't have it on this compy, but is one that I typically use.\n\nhttps://imgur.com/a/zxr13\nhttps://imgur.com/a/CDU8n", "post": "https://www.reddit.com/r/ruby/comments/85ndzf/ruby_in_vscode/"}, {"body": "VS Code is a great choice for Ruby. Definitely install vscode-ruby, which is the main Ruby extension. Try to get linting and autoformat working if you are into that sort of thing.\n\nI'm also working on a new extension called Bust A Gem that adds support for Go to Definition - [Bust A Gem](https://marketplace.visualstudio.com/items?itemName=gurgeous.bust-a-gem) | [github](https://github.com/gurgeous/bust-a-gem)", "post": "https://www.reddit.com/r/ruby/comments/85ndzf/ruby_in_vscode/"}, {"body": "I use VSCode for javascript and sublime for ruby.  I dunno why but Sublime just feels \"right\" with ruby.  Plus it has a superior vim mode.\n\nThe debugger support for ruby in VSCode is becoming a lot better though.", "post": "https://www.reddit.com/r/ruby/comments/85ndzf/ruby_in_vscode/"}, {"body": "[old but relevant](https://www.reddit.com/r/rails/comments/6sonqz/vs_code_setup_for_rails_development/)\n\n[solargraph](https://github.com/castwide/solargraph) is pretty awesome. \n\nI have done a decent amount of ruby development with VSCode and tried a bunch of extensions and key mappings to maximize my development flow.. and to tell you the truth, after 5 days of trying vim.. I no longer care about my VSCode ruby workspace.\n\n", "post": "https://www.reddit.com/r/ruby/comments/85ndzf/ruby_in_vscode/"}, {"body": "Emacs has Rspec, Git and project support.", "post": "https://www.reddit.com/r/ruby/comments/85ndzf/ruby_in_vscode/"}, {"body": "Redmine is really good. ", "post": "https://www.reddit.com/r/ruby/comments/85ndzf/ruby_in_vscode/"}, {"body": "The only way this exception could have happened is if your uploader classes got loaded before your Shrine configuration. Make sure you've loaded the Shrine configuration first.\n\nIn the future it's better to ask for help in the [Shrine google group](https://groups.google.com/forum/#!forum/ruby-shrine).", "post": "https://www.reddit.com/r/ruby/comments/85or5v/shrine_gem_and_s3_and_response_content/"}, {"body": "Well done. This gave me some inspiration also ", "post": "https://www.reddit.com/r/ruby/comments/85i35u/how_ive_built_a_profitable_slack_bot_as_a_side/"}, {"body": "I love the idea of a slackbot as a profitable side project. \n\nI wonder if this is something that there is a limited window on, when slack is/was fairly new and there wasn't a big market of slack integration. (Like it used to be way easier to make a profitable ios game than it is now, cause there are just so many). \n\nI also wonder if the particular feature, sending anonymous messages, is actually contributing to healthy team dynamics or harming them. :)", "post": "https://www.reddit.com/r/ruby/comments/85i35u/how_ive_built_a_profitable_slack_bot_as_a_side/"}, {"body": "this is super cool. I would love to hear a little more about how you first marketed it &amp; got the word out. ", "post": "https://www.reddit.com/r/ruby/comments/85i35u/how_ive_built_a_profitable_slack_bot_as_a_side/"}, {"body": "Congratulations and thanks for sharing. \n\nWhy not use PayPal for your payment provider? ", "post": "https://www.reddit.com/r/ruby/comments/85i35u/how_ive_built_a_profitable_slack_bot_as_a_side/"}, {"body": "Interesting project. The only thing that really came to mind is since the messages are deleted on their server, could someone use it as a way to harass to a colleague leaving the company unable to take any action because it would be 100% anonymous.\n", "post": "https://www.reddit.com/r/ruby/comments/85i35u/how_ive_built_a_profitable_slack_bot_as_a_side/"}, {"body": "Hello,\n   I've \"converted\" the  pseudo-code published by Sean Soria in\n  [\"CryptoKitties mixGenes Function\"](https://medium.com/@sean.soria/cryptokitties-mixgenes-function-69207883fc80) into a running (working) ruby script. Try:\n\n    mgenes_hex = 0x000063169218f348dc640d171b000208934b5a90189038cb3084624a50f7316c\n    sgenes_hex = 0x00005a13429085339c6521ef0300011c82438c628cc431a63298e3721f772d29\n \n    mgenes = Kai.encode( mgenes_hex )\n    p Kai.fmt( mgenes )\n    # =&gt; \"ddca 578k a4f7 949p 4d11 535k aeea 175h 846k 2243 aa9g fdcd\"\n\n    sgenes = Kai.encode( sgenes_hex )\n    p Kai.fmt( sgenes )\n    # =&gt; \"c9am 6556 7ff7 b9gg 1d11 3853 9f77 6475 77k4 6784 f9gp fcaa\"\n\n    babygenes = mixgenes( mgenes, sgenes )\n    p Kai.fmt( babygenes )\n    # =&gt; \"9dca 5586 aff7 b99p 1d11 33k5 aea7 67h5 74kk 6744 aafg ffaa\"\n    \nHappy CryptoKitties gene mixing in ruby. Cheers.\n", "post": "https://www.reddit.com/r/ruby/comments/85n14r/cryptokitties_genesciencemixgenes_magic/"}, {"body": "`UNIXSocket.new(\"/tmp/my_socket\")` is how you setup a unix domain socket on the filesystem. Take a look at https://ruby-doc.org/stdlib-2.4.3/libdoc/socket/rdoc/UNIXSocket.html", "post": "https://www.reddit.com/r/ruby/comments/85l5ex/bind_external_command_output_to_a_socket/"}, {"body": "can't you just `$stdout.reopen` and put it at the unix socket", "post": "https://www.reddit.com/r/ruby/comments/85l5ex/bind_external_command_output_to_a_socket/"}, {"body": "A couple related tips:\n\nI wouldn't recommend using `enum` unless there is a clear ordering to the values, absent that you're likely better off with a `status` string field and a `CHECK` constraint on it in the DB. \n\nIf you do need an enum, and are using postgres, use their enum type:\n\n    execute &lt;&lt;~SQL\n      CREATE TYPE client_visits_statuses AS ENUM ('inprocess', 'completed' , 'incomplete');\n    SQL\n\n    add_column :client_visits, :status, :client_visits_statuses\n\n\n    class ClientVisit &lt; ApplicationRecord\n      enum status: {\n        inprocess: 'inprocess',\n        completed: 'completed',\n        incomplete: 'incomplete'\n      }\n    end\n\nThis has a couple advantages:\n\n1) You get database validation similar to a check constraint.\n\n2) You can add values into the middle of the ordering without breaking anything or having to migrate all values which I find this to be a major cause of needing to alter the ordering query. e.g. `ALTER TYPE enum_type ADD VALUE 'new_value' BEFORE 'old_value';`\n\nIf you do need arbitrary ordering, the approach in the article has a problem in that in most databases I'm aware of it will prevent index usage for the sort. Additionally since ransake is mentioned, there is a decent chance there are a lot of records here and likely a `LIMIT` at the end of that query. With a LIMIT if the ORDER BY doesn't use an index, you can end up constructing the entire result set in the DB then scanning up to the LIMIT...this is _sloooooow_.  \n\nAnother approach is to use `UNION` to combine the results in the order you want and push down the sub-ordering and limiting. This will trigger 3 sub queries but each should be fully indexed and have a small result set, generally should be pretty fast. Doing this in ActiveRecord will require you to drop to `find_by_sql`.\n\n    (SELECT * FROM client_visits WHERE status = 'completed' ORDER BY due_date DESC LIMIT 25)\n    UNION\n    (SELECT * FROM client_visits WHERE status = 'incomplete' ORDER BY due_date DESC LIMIT 25)\n    UNION\n    (SELECT * FROM client_visits WHERE status = 'inprocess' ORDER BY due_date DESC LIMIT 25)\n    LIMIT 25\n\nIn the example above you likely want a btree index on [:status, :due_date].", "post": "https://www.reddit.com/r/ruby/comments/85idtl/how_to_sort_records_in_custom_order_by_enum_value/"}, {"body": "Hello,\n\nI've added a couple of new chapters to the \"Programming Blockchains Step-by-Step from Scratch (Zero)\" and starting with (crypto) hashes...\n\nWhat's News? Mining, mining, mining! What's your hash rate? Let's find out and use the \"stand-alone\" version of the by now \"classic\" compute_hash_with_proof_of_work function:\n\n    def compute_hash_with_proof_of_work( data, difficulty='00' )\n      nonce = 0\n      loop do\n        hash = Digest::SHA256.hexdigest( \"#{nonce}#{data}\" )\n        if hash.start_with?( difficulty )\n          return [nonce,hash] ## bingo! proof of work if hash starts w/ leading zeros (00)\n        else\n          nonce += 1             ## keep trying (and trying and trying)\n        end\n      end # loop\n    end # method compute_hash_with_proof_of_work\n\n\nLet's try (run) benchmarks for the difficulty from 0 (4 bits) to 0000000 (28 bits)...\n\nOn my \"low-end\" home computer the hash rate per second is...\nabout 100 000. What's yours?", "post": "https://www.reddit.com/r/ruby/comments/85jpwo/whats_your_hash_rate_find_out_your_mining_speed_w/"}, {"body": "Shrine is set up in a super modular way, which I really like but can make it hard to give one explanation for all situations.\n\nWithout knowing more about your app, here are some questions and possible things to try:\n\n* Are you trying the default file-goes-to-your-server-and-then-gets-uploaded-to-S3 kind of upload or the more complex and shinier [direct-to-S3](http://shrinerb.com/rdoc/files/doc/direct_s3_md.html) upload?\n  * For the default type, which part of the upload is failing? Is it the browser-to-your-app part or the your-app-to-S3 part? What kind of errors are you getting?\n  * For the direct type, I'd triple-check the [CORS configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) on the S3 bucket to make sure it allows POST requests from *, and then make sure you're POST all the fields you get back from the presigning to S3 as multipart form data, not as query params or JSON.\n* You say you've got a non-Rails app \u2014\u00a0what are you using to work with data? Shrine works most easily if it can integrate directly with your ORM via the builtin plugins for [ActiveRecord](http://shrinerb.com/rdoc/classes/Shrine/Plugins/Activerecord.html) or [Sequel](http://shrinerb.com/rdoc/classes/Shrine/Plugins/Sequel.html), or using external gems like [shrine-mongoid](https://github.com/shrinerb/shrine-mongoid). This lets shrine hook into the lifecycle of your models and handle things appropriately when they're saved.\n* If you're not using an ORM that Shrine supports directly, you'll probably want to take the more manual approach of manipulating the [Shrine Attacher](http://shrinerb.com/rdoc/files/doc/attacher_md.html) directly.", "post": "https://www.reddit.com/r/ruby/comments/858w0z/how_to_upload_an_image_to_s3_using_the_shrine_gem/"}, {"body": "It is fairly simple. Might get a bit confusing because of all those abstractions.\n\nFirst, you need to [set up Shrine](https://www.ironin.it/blog/store-your-files-on-s3-using-the-ruby-shrine-gem-part-1.html).\n\nSince you're not using Rails, skip the `migration` and `ActiveRecord`/`attacher` part.\n\nLet's say you have a class `FileUploader` (defined as `FileUploader &lt; Shrine`).\n\nThis is the class you'll have to use to upload files.\n\nThen, all you have to do is instantiate the class and call `#upload`.\n\n    uploader = FileUploader.new(:storage) # instantiate it\n    uploader.upload(\n      tempfile, # `tempfile` is a file stream. Might be an instance of `Tempfile`\n      upload_options: { acl: 'public-read' }, # if you want it to be readable by everyone,\n      ...\n    )\n\nBoom, it's done.", "post": "https://www.reddit.com/r/ruby/comments/858w0z/how_to_upload_an_image_to_s3_using_the_shrine_gem/"}, {"body": "Here you go: https://gist.github.com/janko-m/9aea154d72eb85b1fbfa16e1d77946e5\n\nThanks for sharing your frustration, I'll link this walkthrough on the website.", "post": "https://www.reddit.com/r/ruby/comments/858w0z/how_to_upload_an_image_to_s3_using_the_shrine_gem/"}, {"body": "Once I've wrote a example app to show the Simplest Way to upload files to S3.\n\nThe only dependence is aws-sdk ;)\n\nMaybe it can help.\n\nhttps://github.com/acdesouza/ruby-s3-simplest", "post": "https://www.reddit.com/r/ruby/comments/858w0z/how_to_upload_an_image_to_s3_using_the_shrine_gem/"}, {"body": "do you have to use shrine? ive never used it, but have done work with other ones", "post": "https://www.reddit.com/r/ruby/comments/858w0z/how_to_upload_an_image_to_s3_using_the_shrine_gem/"}, {"body": "Net http", "post": "https://www.reddit.com/r/ruby/comments/858w0z/how_to_upload_an_image_to_s3_using_the_shrine_gem/"}, {"body": "Don't use shrine. Carrierwave and Paperclip are much better supported.", "post": "https://www.reddit.com/r/ruby/comments/858w0z/how_to_upload_an_image_to_s3_using_the_shrine_gem/"}, {"body": "The instructions are slightly misleading. The description says that it should match sentences starting with \u201cBurgers\u201d but example shows that a \u201cBurger\u201d should also match. \n\nThat said checkout [http://rubular.com](http://rubular.com) where you can play with your test data. It lists some helpful items too.", "post": "https://www.reddit.com/r/ruby/comments/859jyo/need_help_with_ruby_script_for_a_quiz_please/"}, {"body": "See here https://regular-expressions.mobi/anchors.html?wlr=1", "post": "https://www.reddit.com/r/ruby/comments/859jyo/need_help_with_ruby_script_for_a_quiz_please/"}, {"body": "Regex by default doesn't care where in a line a match occurs. You can specify this with the start of line or end of line anchors:\n\n    /^Start of sentence/\n    /end of sentence$/\n\n", "post": "https://www.reddit.com/r/ruby/comments/859jyo/need_help_with_ruby_script_for_a_quiz_please/"}, {"body": "this looks awesome. If you resize the terminal does it reflow the text?", "post": "https://www.reddit.com/r/ruby/comments/857ey9/ttymarkdown_adds_multiline_content_display_and/"}, {"body": "I was hoping for some [bytebeat](http://canonical.org/~kragen/bytebeat/) :p ", "post": "https://www.reddit.com/r/cpp/comments/85uzkr/github_supersimple_intro_program_for_generating/"}, {"body": "Looks cool! A few suggestions:\n\n- perhaps add CMake support for cross platform goodness\n- perhaps implement operator&lt;&lt;(std::pair&lt;int, int&gt; p)\n- automatically call done() on destruction", "post": "https://www.reddit.com/r/cpp/comments/85uzkr/github_supersimple_intro_program_for_generating/"}, {"body": "Just found out about `std::launder` thanks to this and wow, apparently most code using `aligned_storage` etc is UB in C++17 if you don't sprinkle `std::launder` calls all over the place?", "post": "https://www.reddit.com/r/cpp/comments/85rtwf/rfc_c_devirtualization_v2_the_proposal_for_sound/"}, {"body": "    A *a = new A;\n    a-&gt;foo(); \n    A *b = new(a) B;\n    if (a == b)\n      b-&gt;foo(); // This call could be devirtualized to A::foo()\n\nIs this not undefined behaviour anyway? It would surprise me if new'ing an object over an existing one and then using a pointer to the original wasn't undefined behaviour somewhere.", "post": "https://www.reddit.com/r/cpp/comments/85rtwf/rfc_c_devirtualization_v2_the_proposal_for_sound/"}, {"body": "I already get sound devirtualization by not using virtualization.  I'm not sure this complexity of trying to take the wrong approach (from a performance perspective) and soften the performance degradation you get from it is warranted in the standard.   ", "post": "https://www.reddit.com/r/cpp/comments/85rtwf/rfc_c_devirtualization_v2_the_proposal_for_sound/"}, {"body": "Such an exciting programme - I envy those who go there and look forward to the videos.\nThe idea of having 45 min and 90 min presentations is good. Last year I felt that the one hour limit was a little bit to short for some presenters.", "post": "https://www.reddit.com/r/cpp/comments/85m1p0/cnow_2018_the_conference_program_is_published/"}, {"body": "this is a very good report and congrats on getting function_ref forwarded to LWG. (though i'm surprised no one wanted a bikeshed for function_view)", "post": "https://www.reddit.com/r/cpp/comments/85nux3/trip_report_first_iso_c_meeting_experience/"}, {"body": "Congrats. It's good to see `function_ref` progressing well. I'm really really hoping that if non-allocating-in-some-cases coroutines make progress, we can extend that to `constexpr`, allowing an elegant, coroutine-based implementation of ranges that works at compile time without fancy bells and whistles like figuring out the stack frame allocation.", "post": "https://www.reddit.com/r/cpp/comments/85nux3/trip_report_first_iso_c_meeting_experience/"}, {"body": "The idea about epochs looks very good at first sight!!", "post": "https://www.reddit.com/r/cpp/comments/85nux3/trip_report_first_iso_c_meeting_experience/"}, {"body": "Hey all! This post talks briefly about Rust \"epochs\"; in the meantime, we've re-named them to \"editions.\" The C++ process, including compiler flags, was a big inspiration for us doing this kind of thing in Rust. Happy to answer questions related to that, and I really appreciate that the C++ community writes these kinds of experience reports; it lets me follow along with C++'s evolution in a really interesting way.", "post": "https://www.reddit.com/r/cpp/comments/85nux3/trip_report_first_iso_c_meeting_experience/"}, {"body": "I think the `ConvertibleTo` examples for Herb's paper need to be spelled:\n\n    void foo(ConvertibleTo{}&lt;T&gt; x);\n    // x must be convertible to T\n\n    void foo(ConvertibleTo{U}&lt;T&gt; x);\n    // x must be convertible to T, x's type is U\n\nAssuming `ConvertibleTo&lt;From, To&gt;`. In TS syntax, it's:\n\n    void foo(ConvertibleTo&lt;T&gt; x);\n\n    template &lt;ConvertibleTo&lt;T&gt; U&gt;\n    void foo(U x);", "post": "https://www.reddit.com/r/cpp/comments/85nux3/trip_report_first_iso_c_meeting_experience/"}, {"body": "Excellent and very informative.", "post": "https://www.reddit.com/r/cpp/comments/85nux3/trip_report_first_iso_c_meeting_experience/"}, {"body": "Yes, yes, yes to epochs....\n\nBTW one thing that is not mentioned: some modifications could be automatic, meaning you could have \"clang tidy\" tool that upgrades your code.", "post": "https://www.reddit.com/r/cpp/comments/85nux3/trip_report_first_iso_c_meeting_experience/"}, {"body": "void foo(ForwardIterator{T} x, T y);\n\n*barf* \n\nif you are gonna use this syntax then natural meaning would be:\n\nvoid foo(T : ForwardIterator x, T y); // same syntax as inheritance\n\n\n", "post": "https://www.reddit.com/r/cpp/comments/85nux3/trip_report_first_iso_c_meeting_experience/"}, {"body": "As a Mathy high performance c++ programmer, I wonder if a high performance standardised linear algebra library is desired or not. Quite a few high performance Expression Template Linear Algebra comes and go and only Eigen is left to survive and getting some love from Google. Here are some open concern I have about Linear Algebra to be in standard library while not having to read any of the std literature regarding linear algebra:\n\n\n1. The amount of template trickery (or abstraction) in Eigen or any other ET LA to archive high performance is only comprehensible by a handful of the core developer. Should this level of template meta programming to exist in std? Should std have this much hidden complexity? Without expression template, performance is not going to come close to state of the art. \n\n2. I feel that std tries to be portable more so than absolute performance in API design and specification. std::exp and std::log are good examples. Can we truly have portable performance in different platform? At least Eigen guys are testing on multiple platforms because they are indepentent. If it is standardised, are all std writer incentivised to write most optimal library on all hardware? Lastly portability often means compromise in performance. \n\n3. Linear Algebra is deep, and numerical linear algebra is even more so. New algorithms are appearing over the decades. The closest things to standardise is Matrix/Array/Tensor ABI, BLAS API and LAPACK API in my mind. Do we know where is the cut off for standardisation? \n\n4. Unlike discrete algorithm, FLOP algorithm has problems with tolerance, and different algorithms exhitibits very different numerical characteristic. This is a real problem that one can already face in level 3 BLAS routines. While there are quite a few maths PhD in the existing standard committee, do we really have all the expertise to completely specify and implement even the basic level 3 BLAS routines in high performance way? How do one even start to specify the require tolerance anyway. I really think that in linear algebra world, you can either be the fastest on a given architecture, offer the wildest classes of algorithm, or you have no user. Even you solve the FLOP problem, what about linear algebra in integral domain or a number field? Are we good enough to specific the semantics without anger all number theorist?\n\n5. These days high performance maths are often off load to GPGPU. Are the API going embrace the existing of GPGPU so it doesn\u2019t suck when we have to write application to work with CUDA and such?\n\n6. The (D)NN application are driving much of the new high peroformance array library development, is the std going to move fast enough to support what the industries desire? It tooks decades to get to string_view so that performance doesn\u2019t have to suck in certain use case, and this caused many companies to roll their own string library. The library must be design to be extensible enough to survive until next round of new API, otherwise people will just fall back to Eigen or alike.", "post": "https://www.reddit.com/r/cpp/comments/85nbhp/oh_lockfree_circular_buffers_yay_hey_no_2d/"}, {"body": "Sorry, but 2D still doesn't belong in the standard.", "post": "https://www.reddit.com/r/cpp/comments/85nbhp/oh_lockfree_circular_buffers_yay_hey_no_2d/"}, {"body": "&gt; However, it\u2019s all down to who is in the room on the day. Everyone in the room gets a vote, and only they get a vote\n\nThat's frankly quite bad. Couldn't this at least be open to \"registered\" persons ? \n\n", "post": "https://www.reddit.com/r/cpp/comments/85nbhp/oh_lockfree_circular_buffers_yay_hey_no_2d/"}, {"body": "Glad to hear you made it home alright, Guy.", "post": "https://www.reddit.com/r/cpp/comments/85nbhp/oh_lockfree_circular_buffers_yay_hey_no_2d/"}, {"body": "Sorry to hear about your health problems and sorry to hear the graphics proposal wasn't forwarded. I'm not yet convinced one way or the other if it should be in the standard, but I'd love to see it as a TS.\n\nSubmission to boost sounds like a great Idea however.", "post": "https://www.reddit.com/r/cpp/comments/85nbhp/oh_lockfree_circular_buffers_yay_hey_no_2d/"}, {"body": "I'm sorry to hear you fell ill during the meeting. :( Getting sick while traveling really sucks, but it's great that others helped you out.\n\nI also wanted to say thank you and Mike McLaughlin for your work on the 2D graphics library. I know how frustrating it can be to work so long on something, and have it not be accepted; at least so far.\n\nI personally don't think it should be in the standard library, but I really _really_ hope you try to get it into Boost, for the following reasons:\n\n* The API will get more real-world usage and feedback, similar if not better than having it in a TS would do.\n* Boost is widely used and popular, so issues with packaging+installing it have mostly been addressed, or at least explained in various searchable websites.\n* Boost generally supports older C++ standard versions and older compilers. So if the 2D lib could be made to work with them, it would get more use and a wider audience - arguably much sooner than if it had to wait for C++2x and however long it takes for people to upgrade compilers.\n* If it becomes popular, that would provide a strong argument for putting it into the standard library.\n", "post": "https://www.reddit.com/r/cpp/comments/85nbhp/oh_lockfree_circular_buffers_yay_hey_no_2d/"}, {"body": "Ugh, sorry to hear you were so unwell, Guy!\n\nAlways unfortunate to have that stuff hit right in the middle of a trip. :/", "post": "https://www.reddit.com/r/cpp/comments/85nbhp/oh_lockfree_circular_buffers_yay_hey_no_2d/"}, {"body": "I understand that the author is pissed off, but the person to be blamed is certain Canadian that encouraged this insane idea of pushing 2D graphics in the standard. \n\nYes it would be nice, but give me a break, ISO barely managed to do half of core stuff they needed to do for C++17 (by half I mean half will be in C++20, not C++17).\n\nNo way that 2D graphics will make it in the standard when you have a gazillion mature and good libraries anyway while standard lacks certain stuff that no library can do. ", "post": "https://www.reddit.com/r/cpp/comments/85nbhp/oh_lockfree_circular_buffers_yay_hey_no_2d/"}, {"body": "&gt; **Thou Shalt Not Specialize std Function Templates!**\n\n&gt; [...]\n\n&gt; - Taking the address of a standard library function is not allowed.\n\nOf *any* std function, or only templated ones?\n", "post": "https://www.reddit.com/r/cpp/comments/85d5v0/jacksonville18_iso_c_report_j_daniel_garc\u00eda/"}, {"body": "I'm quite excited for `span` :-)\n\nI wish there was some progress on a multi-dimensional array-view too, but I've mentioned that already a few times here :P", "post": "https://www.reddit.com/r/cpp/comments/85d5v0/jacksonville18_iso_c_report_j_daniel_garc\u00eda/"}, {"body": "    template &lt;typename ... Args&gt;\n    void f(Args ... args) {\n      auto f = [...x = std::move(args)]() { return g(x...); };\n      f();\n    }\nWhy are the triple dots sometimes on the left and sometimes on the right?", "post": "https://www.reddit.com/r/cpp/comments/85d5v0/jacksonville18_iso_c_report_j_daniel_garc\u00eda/"}, {"body": "    while (a&gt;0) {\n      [[unlikely]] g();\n    }`\n\nor \n\n    while (a&gt;0) [[unlikely]] {\n       g();\n    }\n\nIs this allowed and would their be any difference?", "post": "https://www.reddit.com/r/cpp/comments/85d5v0/jacksonville18_iso_c_report_j_daniel_garc\u00eda/"}, {"body": "&gt;     template&lt;class T&gt; void f(T::R); // Ill-formed (no diagnostic required), attempt to declare a void variable template\n\nGreat, just what C++ needed: another most-vexing-parse...", "post": "https://www.reddit.com/r/cpp/comments/85d5v0/jacksonville18_iso_c_report_j_daniel_garc\u00eda/"}, {"body": "For the &lt;version&gt; paragraph, you put the link to the date Github repo instead of the link to the paper (https://wg21.link/P0754 I believe ?)\n\nThanks for this report, very informative.", "post": "https://www.reddit.com/r/cpp/comments/85d5v0/jacksonville18_iso_c_report_j_daniel_garc\u00eda/"}, {"body": "Are there any plans to allow formal parameters to lambda expressions to be structured bindings? This would be useful IMO.", "post": "https://www.reddit.com/r/cpp/comments/85d5v0/jacksonville18_iso_c_report_j_daniel_garc\u00eda/"}, {"body": "Would this benefit from wg21.link/p0829 ?", "post": "https://www.reddit.com/r/cpp/comments/85e2hp/cuda_to_c/"}, {"body": "This is AMD's ROCm - CUDA generfication tool to allow for using other hardware ", "post": "https://www.reddit.com/r/cpp/comments/85e2hp/cuda_to_c/"}, {"body": "This library looks nicer and nicer every time I see it! I'm really looking forward to having a proper formatting library in the standard.\n\nUsing iostreams is so cumbersome that I have to fight the urge to just use plain old `printf`. Not to mention the localization aspect.", "post": "https://www.reddit.com/r/cpp/comments/856p3z/text_formatting_at_the_iso_c_standards_meeting_in/"}, {"body": "In my opinion we need constexpr parameters. \n\nYou could do something like that:\n\n    template&lt;typename... Args&gt;\n    auto format(constexpr std::string_view str, Args const&amp;... args) {\n        // str act like non type template parameter\n        // Can be used at compile time\n    }\n\nIn the body of the function, `str` is available as a compile time string view. The function `format` could be constexpr, or not, but the `str` parameter is. The constexpr string view would act like a non type template parameter, but sent as parameter. So the syntax of it usage would look like that:\n\n    auto s = format(\"{}\", 34);\n\nThe parameter is sent normally, but keep its constexpr-ness.", "post": "https://www.reddit.com/r/cpp/comments/856p3z/text_formatting_at_the_iso_c_standards_meeting_in/"}, {"body": "Excellent news and an example of some of the benefits the standardisation process offers.\n\nJust glad we have been able to use the fmt library while this enhanced version is still brewing.\n\nThank you.\n\n", "post": "https://www.reddit.com/r/cpp/comments/856p3z/text_formatting_at_the_iso_c_standards_meeting_in/"}, {"body": "Just to clarify, since it's a little unclear. p0424 would have allowed:\n\n    template &lt;char const* &gt; void foo();\n    foo&lt;\"hello\"&gt;(); // error today, ok with p0424\n\n    template &lt;auto&amp;&gt; void bar();\n    bar&lt;\"hello\"&gt;(); // error today, ok with p0424\n\np0732 doesn't allow either case, but it does allow you to have a type that is _constructible_ from a string literal, such as `basic_fixed_str` in the paper:\n\n    template &lt;basic_fixed_str&gt; void quux(); // error today, ok with p0732\n    quux&lt;\"hello\"&gt;();\n\nYou can ultimately write all the things you want to write anyway, and p0732 let's you do lots of other cool stuff that has nothing to do with strings too.", "post": "https://www.reddit.com/r/cpp/comments/856p3z/text_formatting_at_the_iso_c_standards_meeting_in/"}, {"body": "What was the reason given for the single strong oppose to the user-extensibility? Was it just an opposition to the specific details of how it's done, or to the entire concept?", "post": "https://www.reddit.com/r/cpp/comments/856p3z/text_formatting_at_the_iso_c_standards_meeting_in/"}, {"body": "&gt; There was a question of whether it is possible to check format strings for user-defined types at compile-time. The design of the extension API allows this and here\u2019s an example\n\nI am grateful that you thought of this! One of the issue with printf is of course the absence of such a facility.\n\nI am quite surprised at the API, though, to be honest. It seems somewhat wasteful to first parse the format at compile-time, and then parse it again at run-time when actually formatting. It would be useful if in the case of a compile-time format string the format could be extracted at compile-time into a \"formatting\" object and then passed to the actual format method.\n\nReusing a similar structure to what you proposed, I'd go for:\n\n    namespace fmt {\n        template &lt;&gt;\n        struct formatter&lt;S&gt; {\n             using FormatSpecifier = char;\n\n             static constexpr FormatSpecifier parse(const char* begin, const char* end) {\n                 if (begin == end) { return 'd'; }\n\n                 if (begin + 1 != end) { throw format_error(\"invalid specifier: expected 0 or 1 character\"); }\n                 if (*begin != 'd' and *begin != 's') { throw format_error(\"invalid specifier: expected 'd' or 's'\"); }\n\n                 return *begin;\n             }\n\n             template &lt;typename FormatContext&gt;\n             static auto format(const S&amp;, const FormatSpecifier&amp; specifier, FormatContext&amp; ctx) {\n                 return specifier == 's' ? format_to(ctx.begin(), \"{}\", \"fourty-two\") : format_to(ctx.begin(), \"{}\", 42);\n             }\n        }\n    }\n\nNote that `formatter` is now stateless, so one could actually use user-defined functions instead rather than struct specializations, and rely on ADL. I personally think it would be a much nicer API, as breaking out of one's namespace to specialize something is always jarring.\n\nAlso, a nice benefit of using functions is that they work with *derived* classes by default. Whereas here anything inheriting from `S` has to re-define the formatting functions (even just to forward to S) or gets nothing. Not nice :x\n\nInstead, consider how the following flows naturally:\n\n    struct S {};\n\n    //  where the first parameter is just an alias for S*, and always null.\n    constexpr char parse(fmt::type&lt;S&gt;, const char* begin, const char* end) {\n        if (begin == end) { return 'd'; }\n\n        if (begin + 1 != end) { throw format_error(\"invalid specifier: expected 0 or 1 character\"); }\n        if (*begin != 'd' and *begin != 's') { throw format_error(\"invalid specifier: expected 'd' or 's'\"); }\n\n        return *begin;\n    }\n\n    template &lt;typename FormatContext&gt;\n    auto format(const S&amp;, const char&amp; specifier, FormatContext&amp; ctx) {\n        return specifier == 's' ? format_to(ctx.begin(), \"{}\", \"fourty-two\") : format_to(ctx.begin(), \"{}\", 42);\n    }\n\n*Note: I also which the error message could be better... like showing \"where\" in the format string the error occurred, and the erroneous character, but C++ constexpr facilities are just not there yet :(*", "post": "https://www.reddit.com/r/cpp/comments/856p3z/text_formatting_at_the_iso_c_standards_meeting_in/"}, {"body": "Will it work with scoped enums safely? Both g++ and clang++ ignore the underlying type specifier.\n\n    enum class MyEnum : unsigned int\n    {\n         A, B\n    };\n\n    format(\"%u\", MyEnum::A); // ok\n    format(\"%d\", MyEnum::B); // not ok\n    format(\"%u\", static_cast&lt;typename std::underlying_type&lt;MyEnum&gt;::type&gt;(MyEnum::A)); // faff", "post": "https://www.reddit.com/r/cpp/comments/856p3z/text_formatting_at_the_iso_c_standards_meeting_in/"}, {"body": "&gt; I'll likely go into the exact ideas and reasoning for this interface later, for now lets focus on how to create it.\n\nI think this is exactly what is missing from the article. As is the article is rather useless, because it doesn't explain the why and give some solid reasoning. ", "post": "https://www.reddit.com/r/cpp/comments/85bn5s/a_short_tmp_experiment_with_boosts_mp11_fusion/"}, {"body": "If you look at the previous post https://www.reddit.com/r/cpp/comments/854mu9/2018_jacksonville_iso_c_committee_reddit_trip/ you will see that a `[[no_unique_address]]` attribute is proposed for C++20 to allow zero-sized objects.\n\nThe attribute would be used on a per-data-member basis, allowing the data-member to be zero-sized, from I could gather from http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0840r1.html", "post": "https://www.reddit.com/r/cpp/comments/856fhr/what_are_the_real_barriers_to_allowing_objects_of/"}, {"body": "I would assume such a change would break a lot of legacy code that depends on separate objects having unique addresses or expects that division by `sizeof(Object)` won't result in division by zero.", "post": "https://www.reddit.com/r/cpp/comments/856fhr/what_are_the_real_barriers_to_allowing_objects_of/"}, {"body": "As someone who is developing their own systems programming language that allows objects of size zero, I have some thoughts on this.\n\nIn terms of the memory model, there are three operations one might want to perform on an object: load, store and taking its address. For zero-sized objects, loads and stores are simply no-ops and are never actually seen by the compiler backend, so there is no optimization to be performed or broken. Taking the address needs to return some pointer value different from the null-pointer (this is useful for generic code), but it does not matter what the value actually is since such a pointer is never loaded from or stored to. Hence, for my language I made the choice to simply use the value 1 as the address of any such objects.\nNow as for arrays, clearly using sizeof as a means to determine the end of an array of such objects cannot work. Fortunately, in my language arrays know their length so this is not an issue. This problem needs to be resolved in C++ somehow, but I would argue that it isn't too bad if begin==end and iterating over such an array is always a no-op too (again, this needs to be valid for generic code to work).\n\nI think EBO is a hack and I would rather have the language support (and require!) that empty objects have a size of zero precisely so that people do not have to worry about it.\n\nOn another note, the lack of this feature also shows in that it was decided to add std::monostate for std::variant. void would have been the perfect type for that purpose - had we had zero sized types and regular void.\n\ntl;dr: I don't think it's all that hard, but someone needs to propose it. Personally I have given up on C++ so that person is not me.", "post": "https://www.reddit.com/r/cpp/comments/856fhr/what_are_the_real_barriers_to_allowing_objects_of/"}, {"body": "&gt;I've had conversations with people ... who were unaware of the size 0 issue\n\nThat's me right now. Can you expand on the inheritance workaround, how does it work in practice?", "post": "https://www.reddit.com/r/cpp/comments/856fhr/what_are_the_real_barriers_to_allowing_objects_of/"}, {"body": "Regarding your point (1), I think the main problem is not that it wouldn't be possible to make it work but that nobody took the time to write a proposal for this. Keep in mind that for a proposal one has to make a full case study with motivation and possible benefits, side effects, feasibility from the compiler dev's point of view, etc. Probably, there are many more important features the exports spend time on and that there are easier possible solutions for problems where zero size objects arise than allowing `sizeof(...) = 0`.\n\nI think the biggest problem of size zero objects would be that it is a huge special case with questionable benefit. When would size zero objects be important? If you had large collections of them. 1.) Is this a common problem? I don't think so, considering what objects may be of size zero anyway. 2.)  You already mentioned addresses of these objects. How would iteration over an array of a size zero objects work, etc.? How could this fit into the current memory model?\n\nProbably it's a better idea to directly look at the problems where you want to use the zero size objects and introduce something to make the problems easier to solve without inheritance and without trying to fit zero size objects into current memory model (small impact special case vs. large scale special case). For example the new [[no_unique_address]] attribute which was already mentioned by another redditor is a step in this direction.", "post": "https://www.reddit.com/r/cpp/comments/856fhr/what_are_the_real_barriers_to_allowing_objects_of/"}, {"body": "arrays of such objects?\n\na[n] == n[a] == * (&amp;a + n) == *(a *)((char *)&amp;a + n * sizeof(a))", "post": "https://www.reddit.com/r/cpp/comments/856fhr/what_are_the_real_barriers_to_allowing_objects_of/"}, {"body": "In Rust, those are called [zero-sized objects](https://doc.rust-lang.org/nomicon/exotic-sizes.html#zero-sized-types-zsts) and they interact weirdly compared to rest of language as far \"unsafe\" code is concerned. In particular:\n\n- 0-sized allocators may return null pointer which is indistinguishable from out of memory situation. Whatever allocator is used, it needs to be aware that it may be used to allocate zero-sized objects.\n\n- Pointer arithmetic is pretty much a no-op. This is a big deal, in particular it breaks iterating over an C array. A specific rule could be added about arrays that if an array element is 0 sized, it will be 1 sized in array. So for instance `sizeof(A)` would be `0` and `sizeof(A[10])` would be `10`. Such a rule would complicate implementation of `new[]` operator, as usually `sizeof` includes alignment.\n\n  Rust deals with that by iterating over 0-sized arrays differently, but this isn't an option for C++, as pointer arithmetic is likely to be used for such iteration, without an abstraction dealing with an iteration.\n\n- There is code that assumes it can divide by a sizeof. For instance, an usual ARRAY_SIZE macro in C does exactly that. This will cause compile-time errors for zero sized structures.\n\nIn the end, it's probably better to have `sizeof` of empty objects to be `1` and relax rules about pointer uniqueness for those. I can imagine there will be code that depends on pointers being unique and/or usable for data storage (perhaps somebody was crazy enough to use 1 byte storage of a zero-sized object) however.\n\nAlso such a change will likely cause ABI structures to be incompatible, but that could be dealt with by not requiring this. This being optional will likely things to not be really useful in most operating systems however. Probably explicit annotation is the way to go, as users would be able to mark structures where ABI compatibility is non-issue. This is verbose - you need to annotate every struct element where you don't care about pointer uniquness - which is the case most of the time, but that's probably the way to go.", "post": "https://www.reddit.com/r/cpp/comments/856fhr/what_are_the_real_barriers_to_allowing_objects_of/"}, {"body": "Sounds like Pandora's box of abuse potential. In theory you could probably use CRTP inheritance and an inlined static comparator method to achieve a `map` with the same stateless comparator effect, with a bit more code overhead. Definitely far from ideal, but for a niche case it's pretty acceptable. I don't see any benefit that couldn't be achieved by other means, and this sounds like a massive overhaul. A `map` with a size 0 comparator ceases to be a map, opening the gates to confusion, with two objects of identical interfaces having different sizes and types. That would also mean operator overloading for every function accepting a map to also accept a stateless comparator map. \n", "post": "https://www.reddit.com/r/cpp/comments/856fhr/what_are_the_real_barriers_to_allowing_objects_of/"}, {"body": "[deleted]", "post": "https://www.reddit.com/r/cpp/comments/856fhr/what_are_the_real_barriers_to_allowing_objects_of/"}, {"body": "On phone so keeping short, but zero-sized objects/types would be a useful extension for embedded.", "post": "https://www.reddit.com/r/cpp/comments/856fhr/what_are_the_real_barriers_to_allowing_objects_of/"}, {"body": "The line about extern \"C\" seems like a bad idea.  extern \"C\" disables name mangling.  That's something completely different and unrelated to memory layout.", "post": "https://www.reddit.com/r/cpp/comments/856fhr/what_are_the_real_barriers_to_allowing_objects_of/"}, {"body": "&gt; Disclaimer: GCC 8 has not been released yet, so this document is a work-in-progress.", "post": "https://www.reddit.com/r/cpp/comments/85a69z/gcc_8_c_changelog/"}, {"body": "There isn't much information around: you can find a bit more on the libstdc++ status page: https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2017\n\nAs you can see a few C++17 library features have been implemented: `constexpr` for `std::char_traits`, putting the Filesystem TS into the `std::` namespace and plenty of assorted fixes.\n\nThe page hasn't been updated for C++20 yet, but I have seen a few changes here and there in the mailing lists. A few C++20 language features such as `__VA_OPT__` have been implemented too, but no changelog reflects that yet.", "post": "https://www.reddit.com/r/cpp/comments/85a69z/gcc_8_c_changelog/"}, {"body": "From gcc's git log, the majority of the work on C++ is on bug fixes. ", "post": "https://www.reddit.com/r/cpp/comments/85a69z/gcc_8_c_changelog/"}, {"body": "https://developers.redhat.com/blog/2018/03/15/gcc-8-usability-improvements/\r\n\r\nWas posted here couple of days ago.", "post": "https://www.reddit.com/r/cpp/comments/85a69z/gcc_8_c_changelog/"}, {"body": "&gt; Maybe the precious backwards compatibility is more damaging to progress?\n\nIf backwards compatibility is dropped, we might as well design a completely new language. It would be D, but without the GC. Is there anything that's easy to do in C++ but not in D, according to just the language? I haven't had time to mess about with D yet.", "post": "https://www.reddit.com/r/cpp/comments/8577qc/c_committee_please_look_at_the_big_picture/"}, {"body": "Maybe i don't agree with everything as put here, but i do agree that C++ simply just has to become more agile.\n\nCompiler technology, like LLVM, has really enabled the competition, and there are languages out there ready to challenge C++ in its core competencies: speed and efficiency.\n\nDo you think Rust would be where it is today if it had to wait until the developers of 3 or 4 various C++ compilers were happy before making a change? I doubt it.", "post": "https://www.reddit.com/r/cpp/comments/8577qc/c_committee_please_look_at_the_big_picture/"}, {"body": "&gt; C++ designers tout \"you only pay for what you use\", but that's simply not true when the cost of learning, using and reading these features is factored in.\n\nWhat? If you don't use a feature ever, you don't have to learn about it, because they're well designed enough to be avoidable. You absolutely only pay, in terms of learning, for what you use. Hell, if you really want, you can still write C++98 style in C++17 and not have to learn any new features.\n\n&gt; but they are distracting from basic networking, execution control, reflection, even the prospect of simplifying use of the language with meta classes.\n\nI think that's more of a chicken and egg thing, and not just the committee. They now prefer if there are tested implementations, but the compilers don't (seem to) prioritize keeping up with things that may or may not be in the future standard, so people don't use those proposed features, and so we don't have enough experience with a proposal for the committee to make a quick decision on.", "post": "https://www.reddit.com/r/cpp/comments/8577qc/c_committee_please_look_at_the_big_picture/"}, {"body": "&gt;Maybe the precious backwards compatibility is more damaging to progress?\n\nThe world needs a language for software that lives for decades. Not everything is a shitty throwaway app. ", "post": "https://www.reddit.com/r/cpp/comments/8577qc/c_committee_please_look_at_the_big_picture/"}, {"body": "We all want backward compatible breaking changes. ", "post": "https://www.reddit.com/r/cpp/comments/8577qc/c_committee_please_look_at_the_big_picture/"}, {"body": "Attend a committee or working group meeting to see how the C++ Standard sausage is made.\n\n\nIts easy, just take a week off, book hotel and flight, and you can see the committee in action. Also might change your views.", "post": "https://www.reddit.com/r/cpp/comments/8577qc/c_committee_please_look_at_the_big_picture/"}, {"body": "This thread is full of people who can't see anything other than how it affects their own project.", "post": "https://www.reddit.com/r/cpp/comments/8577qc/c_committee_please_look_at_the_big_picture/"}, {"body": "It is 70-30, i agree on many things but i dont on others\n\nDont worry that much, natural selection will do the job as always do, if the C++ awesome people dont adapt as well as any other rival, well... it time has come to end. Now that Rust is the THING you can see it as a direct rival, if it isnt another will arise and compete making the committee change or be replaced by other language\n\nAnd if you really care take part and try to Make C++ Great Again, dont be like many others that roam about things but do nothing and expect to change, do your part citizen! \nhttps://images-cdn.9gag.com/photo/ap2QVMM_460s.jpg", "post": "https://www.reddit.com/r/cpp/comments/8577qc/c_committee_please_look_at_the_big_picture/"}, {"body": "&gt; 80/20\n\nHuh?", "post": "https://www.reddit.com/r/cpp/comments/8577qc/c_committee_please_look_at_the_big_picture/"}, {"body": "The best thing that ever happened to Fortran was that FORTRAN III died in committee. The problem with C++ is that it was designed by a committee; there is no one clear vision of what it should be. And without that vision, it will remain a collection of clever ideas.", "post": "https://www.reddit.com/r/cpp/comments/8577qc/c_committee_please_look_at_the_big_picture/"}, {"body": "I would say that's the same thing and I reject it as nonsense.  ", "post": "https://www.reddit.com/r/cpp/comments/8577qc/c_committee_please_look_at_the_big_picture/"}, {"body": "I find it funny that the C Embedded Extensions spec has yet to be incorporated into C++.  Makes using C++ on architectures like AVR difficult when you can't mark a pointer as being in a specific address space... something C++ benefits from more than C.\n\nNon-breaking change, would help bring more embedded programmers to C++... but zero interest in it. It is frustrating.", "post": "https://www.reddit.com/r/cpp/comments/8577qc/c_committee_please_look_at_the_big_picture/"}, {"body": "I agree that C++ is moving slowly and it is really disappointing to see that a lot of features promised to be in C++20 will probably be pushed back again. This is one of the drawbacks of design by committee.\n\nOn the other hand let's compare how e.g. C++ and D have evolved since 2010. C++ had a big improvement in 2011 and minor improvements and bug fixes in 2014 and 2017. Many C++ devs who remember the old days will agree that it is much more enjoyable to write C++ today than it was before 2010.\n\nHow did D evolve? I remember that around the time Andrei Alexandrescu joined the development team of D (2007-2010) there was some kind of Hype about the D programming language and many D and C++ devs thought that D would have a bright future. But somehow the Hype faded out (mostly due to the lack of companies supporting D) and it is now not even clear whether D is actually improving or deteriorating.\n\nSo yes, the slow pace of C++ is disappointing and important features being pushed back again and again sucks. But not everything is bad, C++ is slowly but steadily improving. C++ sails while D is ...\n", "post": "https://www.reddit.com/r/cpp/comments/8577qc/c_committee_please_look_at_the_big_picture/"}, {"body": "Backward compatibility is BS. If you have old project then probably manager will not allow you to use newer compiler.", "post": "https://www.reddit.com/r/cpp/comments/8577qc/c_committee_please_look_at_the_big_picture/"}, {"body": "The C++ committee meeting in Jacksonville is about to finish. Our reddit trip report will be posted to this subreddit, and there will be an update on ranges.", "post": "https://www.reddit.com/r/cpp/comments/853be7/what_is_the_state_of_the_ranges_v3_library_and/"}, {"body": "Just to chime in -- at zenAud.io (https://zenaud.io), we're using it in production. In fact it's fair to say it's completely taking over our codebase. We use it in UI code (including our OpenGL-based rendering engine), business logic, and even increasingly in performance-sensitive audio code. (Our demo synth was recently rewritten based on lightweight, semi-regular operators and is ultimately rendered to sample data using range v3.)\n\nWhat we're finding is that not only is range-v3 usable, but indeed the *harder* the problem, the more indispensable range-v3 becomes, precisely because of a) the excellent suite of views, actions, and algorithms, and b) because you're encouraged into creating small, unit-like functions that are much easier to reason about.\n\nAnother tip: range-v3 interacts *very nicely* with libraries like Boost.Fusion and Boost.Hana.\n\n[edit: fixed typo, thanks DevOmem]", "post": "https://www.reddit.com/r/cpp/comments/853be7/what_is_the_state_of_the_ranges_v3_library_and/"}, {"body": "See his tweets:\n\nhttps://twitter.com/ericniebler/status/974115132161839104\n\nhttps://twitter.com/ericniebler/status/974278786752577537", "post": "https://www.reddit.com/r/cpp/comments/853be7/what_is_the_state_of_the_ranges_v3_library_and/"}, {"body": "By the way, previous times, the was a thread about developments happening on a committee meeting. But not this time?", "post": "https://www.reddit.com/r/cpp/comments/853be7/what_is_the_state_of_the_ranges_v3_library_and/"}, {"body": "/u/CaseyCarter for MSVC", "post": "https://www.reddit.com/r/cpp/comments/853be7/what_is_the_state_of_the_ranges_v3_library_and/"}, {"body": "AFAIK you can not use range v3 with MSVC since compiler still does not fully implement C++11. :)", "post": "https://www.reddit.com/r/cpp/comments/853be7/what_is_the_state_of_the_ranges_v3_library_and/"}, {"body": "If you are using C++17 then you can write isInSet as:\n\n    template &lt;typename... Strings&gt;\n    bool\n    isInSet(const std::string_view s, const Strings&amp;... strings)\n    {\n        return ((s == strings) || ...);\n    }", "post": "https://www.reddit.com/r/cpp/comments/84u0jo/my_little_optimization_the_compiler_is_magic/"}, {"body": "- Writes a whole post about a compiler optimization\n\n- Doesn't say what compiler/version it is\n", "post": "https://www.reddit.com/r/cpp/comments/84u0jo/my_little_optimization_the_compiler_is_magic/"}, {"body": "[Aho-Corasick](https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_algorithm) is what you want if you need a general purpose optimal solution and you have a large static set of strings, for example, virus checking.", "post": "https://www.reddit.com/r/cpp/comments/84u0jo/my_little_optimization_the_compiler_is_magic/"}, {"body": "&gt; For std::string I can get away with that because an empty std::string is guaranteed to have a single zero value in its contents\n\nIs this correct? I couldn't find anything about this in the standard. \n\nClosest I found was:\n\n&gt; const charT&amp; front() const;\n\n&gt; charT&amp; front();\n\n&gt; Requires: !empty().\n\n&gt; Effects: Equivalent to: return operator[](0);\n\nwhich, kind of contradicts with the post", "post": "https://www.reddit.com/r/cpp/comments/84u0jo/my_little_optimization_the_compiler_is_magic/"}, {"body": "A compile time hash (I'm fond of FNV-1) of the cases and a runtime hash of the switch value might be faster in most situations.", "post": "https://www.reddit.com/r/cpp/comments/84u0jo/my_little_optimization_the_compiler_is_magic/"}, {"body": "That doesn't seem remotely close to optimal; all those strings are no more than 8 chars so you should just be able to chain a few integer comparisons. Unfortunately `memcpy` remains painfully slow for small dynamic sizes so I'm not sure you can gain much (unless you can figure out how to make the instruction set less terrible or circumvent it with some really clever knowledge of page alignment\\*) but you can probably solve that at a higher level.\n\n\\* Eg. by doing two aligned reads and shifting them over each other.", "post": "https://www.reddit.com/r/cpp/comments/84u0jo/my_little_optimization_the_compiler_is_magic/"}, {"body": "So this is C++\u2026\n\nYou could just have an std::set of std::string and return if find(target) != set.end().\n\nI\u2019m sure with the proper use of const or constexpr, this probably gets optimized better than you can do by hand.", "post": "https://www.reddit.com/r/cpp/comments/84u0jo/my_little_optimization_the_compiler_is_magic/"}, {"body": "OP, that's not what \"code unit\" means, you're talking about code points.\n\na code unit is the UTF types size, in UTF-8 it's 8 bits, in UTF-16 it's 16 bits.\n\nin UTF-8 you can have up to 4 code units per code point, in UTF-16 up to 2 code units per code point.", "post": "https://www.reddit.com/r/cpp/comments/84u0jo/my_little_optimization_the_compiler_is_magic/"}, {"body": "&gt;so for gcc 8 I\u2019ve added hints telling you which header files are missing (for the most common cases)\n\nIs this language-specific? For example, would g++ recommend `&lt;cstring&gt;` instead of `&lt;string.h&gt;`?\n", "post": "https://www.reddit.com/r/cpp/comments/84op5c/usability_improvements_in_gcc_8/"}, {"body": "&gt; incomplete.c:4:17: note: \u2018INT_MAX\u2019 is defined in header \u2018&lt;limits.h&gt;\u2019; did you forget to \u2018#include &lt;limits.h&gt;\u2019?\n\nThis seems redundantly verbose.  Why not just:\n\n&gt; incomplete.c:4:17: note: \u2018INT_MAX\u2019 is defined in header \u2018&lt;limits.h&gt;\n\n?\n\nAlso, is this extensible?  Is it hard-coded?\n", "post": "https://www.reddit.com/r/cpp/comments/84op5c/usability_improvements_in_gcc_8/"}, {"body": "In the cases like:\n\n    int i\n    int j;\n\nit would seem more useful to me for the message to be \"missing semicolon after `i`\", rather than \"missing semicolon before `int`\".\n Similar for the `42` example and others.", "post": "https://www.reddit.com/r/cpp/comments/84op5c/usability_improvements_in_gcc_8/"}, {"body": "Is my mobile font off or are the green arrows pointing anywhere but the correct column? That would kinda defeat the purpose....", "post": "https://www.reddit.com/r/cpp/comments/84op5c/usability_improvements_in_gcc_8/"}, {"body": "This is awesome. Haven't checked, but some (many?) of those actually seem even better than on Clang, just out of memory. Competition between compilers is great!", "post": "https://www.reddit.com/r/cpp/comments/84op5c/usability_improvements_in_gcc_8/"}, {"body": "Great, esp std::string example, recently I got some insane error from VC++ and on [SO](https://stackoverflow.com/questions/1631338/error-c2679-binary-no-operator-found-which-takes-a-right-hand-operand-of) some guy magically guessed that it is caused by missing &lt;string&gt; include. \n\n", "post": "https://www.reddit.com/r/cpp/comments/84op5c/usability_improvements_in_gcc_8/"}, {"body": "These are really nice changes and in hindsight seem so obvious I'm a little surprised it didn't work like that in the first place.", "post": "https://www.reddit.com/r/cpp/comments/84op5c/usability_improvements_in_gcc_8/"}, {"body": "This makes me very happy. Improving error messages is something I have been working on myself.\n\nWhat is the current error message for\n\nstd::cout &gt;&gt; 42;\n\nOn older compilers this would generate roughly 100 lines of unreadable error messages, so I detect and fix it in the static analyzer I wrote.", "post": "https://www.reddit.com/r/cpp/comments/84op5c/usability_improvements_in_gcc_8/"}, {"body": "Looks like I really need to start using SCL now on CentOS, so I can get rid of GCC 4.8.5.\r\n\r\nIt seems so obvious, why wasn't it implemented like that in the first place?\r\n\r\nMy private hell are some obscure compiler errors from templates (usually in combination with Boost).", "post": "https://www.reddit.com/r/cpp/comments/84op5c/usability_improvements_in_gcc_8/"}, {"body": "Now your turn Microsoft ;)", "post": "https://www.reddit.com/r/cpp/comments/84op5c/usability_improvements_in_gcc_8/"}, {"body": "That's neat ;)", "post": "https://www.reddit.com/r/cpp/comments/84op5c/usability_improvements_in_gcc_8/"}, {"body": "Thank you for doing this type of work. I'm intrigued by the private field getter - I'm not sure I've ever needed it, but it seems like a neat idea. The template improvements I will definitely use and am looking forward to. Thanks!", "post": "https://www.reddit.com/r/cpp/comments/84op5c/usability_improvements_in_gcc_8/"}, {"body": "Could the error message for invalid tokens such as `0xE+foo` or `0_lit.foo` be improved? This kind of error is not all that common, but is quite surprising when it happens, and currently it's hard to infer what's going on from the error message.", "post": "https://www.reddit.com/r/cpp/comments/84op5c/usability_improvements_in_gcc_8/"}, {"body": "Really cool... Anyone knows if rust has been an influence for these types of really helpful error messages that pinpoint the location because that's where I've seen them.", "post": "https://www.reddit.com/r/cpp/comments/84op5c/usability_improvements_in_gcc_8/"}, {"body": "Usability is fine, but they'd better focus on regressions, it is very sad situation.", "post": "https://www.reddit.com/r/cpp/comments/84op5c/usability_improvements_in_gcc_8/"}, {"body": "... is pretty cool, but won't slake my lust for hot-and-heavy template metaprogramming.", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "I can write shitty bug-filled spaghetti code in any language, I might as well do it in a language I already know.", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "I think Rust improves on C++ in many ways, but it's got a ways to go before it can really claim to be mature and have stood the test of time. That said, many of Rust's best features are ones C++ can learn and borrow^haha from to improve itself.\n\nWhen it comes to languages features, I think Rust has the stronger type system, with traits, algebraic types, and basically no implicit casting. I also think its zero-cost ownership model is great, albeit hard to work with at times. That said, it needs features such as non-type template parameters. It also doesn't have the (ton of) cruft that comes with being an old language and having to maintain legacy support, but that's not really a matter of better design on Rust's part.\n\nAs for non-language stuff, C++ really needs something like `cargo`, but in every other way C++ has superior tooling due to it's age and popularity. Rust also obviously loses in the availability and quality of libraries, again due to age and popularity.", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "... lacks function overloading, value generics, variadic generics and exceptions.", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "is a good language but the community is toxic towards people not using rust.\n\n(atleast in my experience)", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "...is much nicer, though I doubt I'll get to use it in my current job any time soon.", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "Rust code looks like it is trying to get my eyeballs to explode... \n\nIf it is a game to get safest language possible, I'd rather bet on ADA. Because it is not only about making it is technically impossible to shoot your feet, but also about making it easy to read and verify the actual logic of the code. \n\nP.S. Last time when I've checked, ADA was pretty much same capable as C++98. ", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "...is a topic way too often spawning on this __C++__ subreddit.", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "... solves a non-problem if you use modern C++.", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "Has made some big innovations in terms of the borrow checker, and move semantics. However, is really disappointing on the compile time computation side. Lack of non type template parameters and variadics make arrays and tuples feel second class. No constexpr.\n\nThe biggest mistake Rust has made is its macros. Because effectively it's acted as a crappy band-aid to these very real problems in its type system. There's no sane reason that something like printf should be a macro (one that's too complicated to actually write; the core is implemented inside the compiler). But when you can't do variadics or compile time strings, you can't do printf another way, so you use macros as a (poor) crutch.\n\nWhat's sad is that Rust's compile time computation and these particular aspects of its type system are such a huge step backwards. Even from C++, but even more so from D. It's a real shame to see a new language fail to leverage existing knowledge/experience of languages/developers already working in its target.", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "... would have been a compelling alternative if it came out 10 years ago.", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "... lacks library support.", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "I still don't get the point either. C++ is more powerful in every way.\nRust only brings safety to the table, nothing that can't be done with C++ sanitizers.\nI hate cargo!, I mean, I love it... but I hate the \"nodejs\" philosophy of Rust that for anything you want to build you'll need to depend on hundreds of third party crates.\nThe C++ community sometimes decide to rewrite stuff as to not have to depend on third party libs, this is expected on a so called \"systems language\".\nAnyways, Rust seems very interesting... but not really enough, at least for me! ", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "Would be greatly improved if it didn't try to emulate C syntax.\n\nFor instance, significant whitespace would make it a lot more readable.", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "want more lispy style rather than ocaml style. (oops i am c++ programmer).", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "... has some interesting ideas but isn't good enough or popular enough to withstand the test of time.", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "Needs a \"slogan\". Every language heavily used has a implicit or explicit slogan, a mental anchor that connects the problem you are trying to solve with the best language for the job. Python has \"simplicity and terseness\" , C has \"close to the hardware\", C++ has \"powerful and cheap abstractions\", etc. What does rust have as it's slogan? \"safety\"? I mean, that's a great choice if I'm ever writing space shuttle software... ", "post": "https://www.reddit.com/r/cpp/comments/84z9a3/as_a_c_developer_i_think_that_rust/"}, {"body": "While generally a very good article, the 100% memory safety claim is dubious. There are still plenty of ways to hit UB or out of bounds accesses, but the methods described are definitely worth following. Think it might be worth mentioning flagging anything going through void* (especially without a length).", "post": "https://www.reddit.com/r/cpp/comments/84r0oc/a_usable_c_dialect_that_is_safe_against_memory/"}, {"body": "The article starts with reactors, that's where I left off. I've done that style before, it makes programs very hard to understand.", "post": "https://www.reddit.com/r/cpp/comments/84r0oc/a_usable_c_dialect_that_is_safe_against_memory/"}, {"body": "Does C++ demand a specific heap implementation? There's more than one possibility. They all have different costs. Sorting can be as cheap as O(1).", "post": "https://www.reddit.com/r/cpp/comments/84u0cs/building_unbuilding_and_sorting_heaps_in_c_with/"}, {"body": "Now let it be available via C++ package managers like buckaroo, cget, conan, conda, cpm, cppan, hunter and vcpkg.  \n( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)", "post": "https://www.reddit.com/r/cpp/comments/84vmio/yet_another_semver_in_c_with_similar_feature_from/"}, {"body": "Why operate directly on strings and not parsed representations?", "post": "https://www.reddit.com/r/cpp/comments/84vmio/yet_another_semver_in_c_with_similar_feature_from/"}, {"body": "Where I work, we switched to 11 a couple of years ago. Currently some teams work on 11 and some on 14, they are both supported generally (I of course have moved my team to 14). It's likely that 17 will be supported within the next year, or perhaps less.\n\nNewer C++ versions are almost entirely backwards compatible, so while demanding to work on an idiomatic &gt; C++11 codebase isn't always feasible, but not being able to at least write *new* code in C++11/14 is pretty bad. I'd definitely jump ship so your skills aren't falling out of date. There isn't a dramatic amount of new stuff to learn post 11, but 03-&gt;11 is a huge transition, value categories, variadics, different idioms for memory management, etc.", "post": "https://www.reddit.com/r/cpp/comments/84pqg6/considering_to_change_job_to_work_with_newer/"}, {"body": "You're not asking too much, but also your employer isn't necessarily wrong either. When you've got a large code base for a product used by a lot of customers, there's a lot of risk and an unknown reward in changing to the latest and greatest; especially when weighed against getting the next set of features out.\n\nIf you feel it's hurting your career, or even just makes you unhappy, and if you can find a job that's using something newer, then of course go for it. We're using C++14 at my company, and we'll upgrade to C++17 once the compilers are more stable, but we have that luxury because we're small; plus we're engineering driven, and consider it important for morale if nothing else.", "post": "https://www.reddit.com/r/cpp/comments/84pqg6/considering_to_change_job_to_work_with_newer/"}, {"body": "I'd recommend making it you pet / side project at work to allow smooth future migration to C++11/14. Spend on it say 1 hour a day (instead of reading reddit and/or browsing facebook). At first stage make it possible to compile your code base with later versions of your compiler which properly supports C++11 (but still compile your code with C++03 enabled). Once you get it working, try to enable C++11 and get the code compiled again. You'll be surprised to see all the errors that are going to be reported, you may even find a bug or two in the existing code. After you compile it successfully, deploy it to your embedded device(s) and prove that it works. Work on separate branch if necessary. At the end make the migration as easy as changing single environment variable in your build scripts. At that stage convincing your manager to migrate will be much easier task than now. You may even get a bonus / reward for proactive thinking.", "post": "https://www.reddit.com/r/cpp/comments/84pqg6/considering_to_change_job_to_work_with_newer/"}, {"body": "We have switched to C++14, and only thing that is preventing C++17, is that most compilers only partially support it (talking about the specific version of Clang used in Xcode 9, Android studio, and the one in Emscripten), when we get to an acceptable level of support we will switch again.", "post": "https://www.reddit.com/r/cpp/comments/84pqg6/considering_to_change_job_to_work_with_newer/"}, {"body": "I am one of like three c++ guys in a small company that is otherwise mostly about webdev. And we pretty much get to choose what we want to use and naturally we chose latest available features. This is not without issues though, for example just last week gcc 7.3 broke with internal compiler error and an unhelpful diagnostic on some moderately complex TMP code that 7.2 grokked without problem.", "post": "https://www.reddit.com/r/cpp/comments/84pqg6/considering_to_change_job_to_work_with_newer/"}, {"body": "[deleted]", "post": "https://www.reddit.com/r/cpp/comments/84pqg6/considering_to_change_job_to_work_with_newer/"}, {"body": "In my experience...\n\nSmall companies move way faster than big ones.  My first gig let us pretty much do what we wanted with that.  I was able to convince them to use boost and then again to begin using C++0x features that were available in VS 2010.\n\nLarge companies are completely different.  Pretty much every one has a huge codebase that they're very squeamish about changing.  They do not want to introduce risk.  I've been working in C++03, at best, ever since I left that job at the small company.  In my current one we simply cannot change because we need to compile into Flash and that compiler is ancient.\n\nI've also found that developers are frightened of modern programming in C++.  So many of them, the great majority that I've worked with, want nothing to do with it.  They want to stay in the old C with classes style of development and want little, if anything, to do with templates.  I thought it was just an old-timer issue (which I now pretty much am), but even the young ones are like this.  They just don't have the drive or desire to learn.\n\n&gt; My current employer is an embedded developer, hence the longer adoption curve also.\n\nMaybe show them what can be done with C++11/14/17.  I'm, very slowly, working on AVR library that uses C++14 (latest available for that architecture).  I'm able to do quite a lot with hana style metaprogramming.  \n\nMy current effort (which as you can see hasn't been touched in months) is in the 'capacities' branch.  I don't know that I'd showcase what I did in the `chip` directory though; at least not right away.\n\nIt's far from anything resembling production, and I'm sure it's more complex than it needs to be right now, but it does showcase some of what you can do in an embedded environment with modern C++.  What would normally have a bunch of functions, many of which you don't need, compiles down to the least necessary items to get the job done.  It does as much as possible during compile time, leaving runtime to be minimal in size and execution.\n\nhttps://github.com/crazy-eddie/arduino_modern", "post": "https://www.reddit.com/r/cpp/comments/84pqg6/considering_to_change_job_to_work_with_newer/"}, {"body": "C++11 is a god send. It really is such an improvement to the language. With smart pointers, auto, range based for loops and std move you can write faster and safer code. I'm sure there is other stuff I've missed out but that's what i use the most.", "post": "https://www.reddit.com/r/cpp/comments/84pqg6/considering_to_change_job_to_work_with_newer/"}, {"body": "Where I work we switched to 11 ~2 years ago, and just a week or two ago we upgraded the compiler to one that supports 14. Not allowed to start using 14 features yet though.", "post": "https://www.reddit.com/r/cpp/comments/84pqg6/considering_to_change_job_to_work_with_newer/"}, {"body": "c++03!? That is pretty good honestly. I don't know what you expect, but if you are working on serious, impactful software, it won't be modern. That's just life.", "post": "https://www.reddit.com/r/cpp/comments/84pqg6/considering_to_change_job_to_work_with_newer/"}, {"body": "4 year old project.  Started with c++11, now on 14.  Will switch to 17 as soon as I can get comfortable with the \"backported\" clang. (embedded device; updating the OS is scary and customers hate when things go wrong, even if it's easily recoverable)", "post": "https://www.reddit.com/r/cpp/comments/84pqg6/considering_to_change_job_to_work_with_newer/"}, {"body": "On top of your product requirement, it's also very dependent of your team mindset\n\nI am working for a tier 1 bank for low latency components, we are using c++17 and we pushed toward its usage worldwide, but similar team of other region are relunctant to do the switch (for bad reason usually, e.g. not enough time for this kind of thing, which usually is a symptom of technical debts)\n\nOnce you do the switch the easy way to never had that issue again is to constantly update your compiler when there's a new release, and little by little change your codebase with the newest feature available if it makes sense, that way the transition is much more smooth, and it's also easier for everyone to keep up to date and to avoid technical debt on this point\n\nEdit: If you are considering applying for a new job, I suggest to ask the team you are applying for which version of compiler they are using, it's a good metric (i.e. if they can't tell the version or if they use old version e.g. gcc 4.8, it's not a good sign)\n", "post": "https://www.reddit.com/r/cpp/comments/84pqg6/considering_to_change_job_to_work_with_newer/"}, {"body": "Life is short, and programming jobs are plenty. If you're unhappy, change places! The recent stack overflow Dev survey showed that mindset is fairly common. ", "post": "https://www.reddit.com/r/cpp/comments/84pqg6/considering_to_change_job_to_work_with_newer/"}, {"body": "Before you jump ship, I'd first check if there is a way to speed up the addoption of c++14 and later and in particular to communicate to the tool vendor that support for newer c++-standards is important to you. Nothing is going to change in the embedded industry if chip and tool vendors don't see support for c++14 and later as a competitive advantage.", "post": "https://www.reddit.com/r/cpp/comments/84pqg6/considering_to_change_job_to_work_with_newer/"}, {"body": "90-day free license. [Previous discussion](https://www.reddit.com/r/cpp/comments/7qtwbd/intel_system_studio_free_renewable_commercial/).", "post": "https://www.reddit.com/r/cpp/comments/84ksbg/intel_vtune_now_has_a_free_commercial_license/"}, {"body": "Anyone have experience with this on linux? I'm using perf + hotspot for profiling now, I guess it could be a big step forward to have vtune instead.", "post": "https://www.reddit.com/r/cpp/comments/84ksbg/intel_vtune_now_has_a_free_commercial_license/"}, {"body": "ELI5 What is Intel VTune?", "post": "https://www.reddit.com/r/cpp/comments/84ksbg/intel_vtune_now_has_a_free_commercial_license/"}, {"body": "Be careful when installing this on Windows. On my Win 10 machine, it BSOD with problem in VTSS.SYS (The Event Sampling Driver) - it can be disabled from the install.", "post": "https://www.reddit.com/r/cpp/comments/84ksbg/intel_vtune_now_has_a_free_commercial_license/"}, {"body": "What is the advantage / disadvantage of VTune over Windows Performance Toolkit or the VS Profiler?", "post": "https://www.reddit.com/r/cpp/comments/84ksbg/intel_vtune_now_has_a_free_commercial_license/"}, {"body": "Can someone explain how to go through page \"Register an Account\", button is not clickable. Student and free commercial behave the same. :(", "post": "https://www.reddit.com/r/cpp/comments/84ksbg/intel_vtune_now_has_a_free_commercial_license/"}, {"body": "Could it be due to gamedev having quite low salary and being mostly done in C++? \n\nNote that java did not make it to the list also.", "post": "https://www.reddit.com/r/cpp/comments/84kjc4/are_c_developers_so_little_paid/"}, {"body": "I would take everything in this survey with a grain of salt. It shows that less than a third of developers have children which I think is an indication that selection bias is heavily skewing the results. ", "post": "https://www.reddit.com/r/cpp/comments/84kjc4/are_c_developers_so_little_paid/"}, {"body": "Ignore heavily biased sources and look for reports from the industry you are interested in. E.g. C++ in financial services pays considerably more than the top of that list.", "post": "https://www.reddit.com/r/cpp/comments/84kjc4/are_c_developers_so_little_paid/"}, {"body": "Does \"language X developer\" even make sense these days? To get a well-paid job you likely need to be proficient in multiple languages and in CS too (to pass the interview, at the very least).", "post": "https://www.reddit.com/r/cpp/comments/84kjc4/are_c_developers_so_little_paid/"}, {"body": "I had the exact same feeling.. i actually expect that C++ dev's are generally well paid. Just consider that quite some work in finance, which are typically well paid jobs.", "post": "https://www.reddit.com/r/cpp/comments/84kjc4/are_c_developers_so_little_paid/"}, {"body": "C++ isn't actually mentioned in the data linked to by the OP, I think they are actually referring to [this plot of average number of years of experience vs salary by language](https://insights.stackoverflow.com/survey/2018/?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=dev-survey-2018-promotion#work-salary-and-experience-by-language).\n\nThis doesn't match with my personal experience, but the [salary by developer type](https://insights.stackoverflow.com/survey/2018/?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=dev-survey-2018-promotion#work-salary-and-experience-by-developer-type) does. I'm just one data point though!", "post": "https://www.reddit.com/r/cpp/comments/84kjc4/are_c_developers_so_little_paid/"}, {"body": "Is there a cpp specific salary survey that has been performed in the recent past?\n\nThanks!", "post": "https://www.reddit.com/r/cpp/comments/84kjc4/are_c_developers_so_little_paid/"}, {"body": "Quite funny, I am a c++ dev because I love it and it is one of my hobby I think. But here in EU you barely find any jobs for c++. If you go to any recruiting site in EU everybody want that JS crap, fallowed strangely by php, java, and so other exotic languages. I basically support my hobby from freelance projects mostly, I don't even know anymore how is to have a job where you can code in c++. Sadly.. strange times.", "post": "https://www.reddit.com/r/cpp/comments/84kjc4/are_c_developers_so_little_paid/"}, {"body": "Yup. I work for peanuts. *TROOOOOT*\n", "post": "https://www.reddit.com/r/cpp/comments/84kjc4/are_c_developers_so_little_paid/"}, {"body": "Your experience and local competition (supply/demand) has a lot more to do with what you are paid than the programming language you use. Also, it is *not* important what you are paid. What is important is your buying power. A US$150k salary (for example) is not much if you live in an expensive place like Silicon Valley. In a lot of European countries, a much lower salary will give you a much better lifestyle than an equivalent salary somewhere else (even taking into account tax differences).", "post": "https://www.reddit.com/r/cpp/comments/84kjc4/are_c_developers_so_little_paid/"}, {"body": "Could it be that this reflects the distribution of the developers across countries?\n\nLook at the US where the salary are much higher than the average and the difference between languages way smaller, and again I image the salary differences might be significant in USA.\n\nA meaningful list would have been to normalize the salary by the average salary (in programming and overall) in that location.", "post": "https://www.reddit.com/r/cpp/comments/84kjc4/are_c_developers_so_little_paid/"}, {"body": "I think that StackOverflow results are accurate for C++ devs with three to eight years of experience. It takes longer than that to properly master C++ nowadays. Certainly in the clients I've contracted at in recent years, nobody had less than seven years experience, and usually more than fifteen or twenty, in some cases thirty years.\n\nOne of the most remarkable things is the paucity of younger engineers. I'm regularly the youngest in a client's team, despite twenty years of experience. Long run that can't be good for C++.", "post": "https://www.reddit.com/r/cpp/comments/84kjc4/are_c_developers_so_little_paid/"}, {"body": "It would be interesting if we were given the median instead of mean.", "post": "https://www.reddit.com/r/cpp/comments/84kjc4/are_c_developers_so_little_paid/"}, {"body": "When I was looking around for C++ work accross europe, the tendency was that gamedev payed like 2x less then most other C++ jobs. Best salaries for C++ developers were mostly in the finance industry, I saw some pretty outrageous offers like 120k - 350k euro/year, however the entry barrier was high as well, lots of competition.", "post": "https://www.reddit.com/r/cpp/comments/84kjc4/are_c_developers_so_little_paid/"}, {"body": "Currently i working on c++ job(H264 SDK library), but it almost done.\nnow, i have to find another item.\n\n", "post": "https://www.reddit.com/r/cpp/comments/84kjc4/are_c_developers_so_little_paid/"}, {"body": "Thanks for such a great, easy to use JSON library for Modern C++.", "post": "https://www.reddit.com/r/cpp/comments/84gvom/json_for_modern_c_version_312_released/"}, {"body": "Thank you! Another great update for a great library!\n\nSmall question though, I haven't looked deep into it but is there a way to get a `std::string_view` out of a `nlohmann::json`? Right now I'm doing `std::string_view{value.get_ptr&lt;const nlohmann::json::string_t*&gt;()-&gt;c_str()}`", "post": "https://www.reddit.com/r/cpp/comments/84gvom/json_for_modern_c_version_312_released/"}, {"body": "I'm blown away by the number of package managers you support. Can I ask how and why?", "post": "https://www.reddit.com/r/cpp/comments/84gvom/json_for_modern_c_version_312_released/"}, {"body": "Thank you for this library! I use it for quite some time now and it definitely is the best json implementation I've ever seen.", "post": "https://www.reddit.com/r/cpp/comments/84gvom/json_for_modern_c_version_312_released/"}, {"body": "Nice! I use this library extensively for my embedded web-backend project at work. ", "post": "https://www.reddit.com/r/cpp/comments/84gvom/json_for_modern_c_version_312_released/"}, {"body": "Does anyone look at GoldFish(https://github.com/OneNoteDev/GoldFish). It is extremely fast. I tested on my machine (core i5 6500, 4GB ram) with 4k json size and the speed is 600 MB/s. But it canot compiled by GCC.", "post": "https://www.reddit.com/r/cpp/comments/84gvom/json_for_modern_c_version_312_released/"}, {"body": "\"Overworked README by adding likes to the documentation (#981).\"\n\nI'm sure you meant \"links\" instead of \"likes\".", "post": "https://www.reddit.com/r/cpp/comments/84gvom/json_for_modern_c_version_312_released/"}, {"body": "I am using this awesome json lib in my projects, thank you so much. ", "post": "https://www.reddit.com/r/cpp/comments/84gvom/json_for_modern_c_version_312_released/"}, {"body": "I really like the simple usage.  But damn, I looked at some of the source and it\u2019s still a mystery to me how the C++ committees think they\u2019re making a good language and going in the right direction.", "post": "https://www.reddit.com/r/cpp/comments/84gvom/json_for_modern_c_version_312_released/"}, {"body": "Best match is the big one. \n\nHowever ranges V3 shows that a lot can be emulated. A huge cost, though. ", "post": "https://www.reddit.com/r/cpp/comments/84i79m/is_there_anything_that_concepts_can_do_that/"}, {"body": "Constraining class template specializations, without having the class template author opt-in to having this extra defaulted `void` template parameter for conditional specializations. For instance, I could write one `std::hash` specialization for all class types that have a Java-style `hashCode` member function:\n\n    namespace std {\n        template &lt;typename T&gt;\n            requires requires(T const&amp; v) {\n                { v.hashCode() } -&gt; size_t;\n            }\n        struct hash&lt;T&gt; {\n            size_t operator()(T const&amp; v) const { return v.hashCode(); }\n        };\n    }\n\n+/- syntax errors.", "post": "https://www.reddit.com/r/cpp/comments/84i79m/is_there_anything_that_concepts_can_do_that/"}, {"body": "Constraining special member functions.\n\nAlso, partial ordering by constraints.", "post": "https://www.reddit.com/r/cpp/comments/84i79m/is_there_anything_that_concepts_can_do_that/"}, {"body": "look good", "post": "https://www.reddit.com/r/cpp/comments/84i79m/is_there_anything_that_concepts_can_do_that/"}, {"body": "I don't know about \"can't\". Someone already mentioned constraining class template specializations, this is annoying but if the author provides the extra void template parameter then it's easy.\n\nThe worst IMHO that no amount of foresight can save you from having to write some horrifying code is when you have multiple constrained implementations, but you want one to be higher priority than the other. As long as you have disjoint traits, sfinae really isn't that bad:\n\n    template &lt;class T, std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;, int&gt; = 0&gt;\n    void foo(const T&amp; t);\n\n    template &lt;class T, std::enable_if_t&lt;!std::is_arithmetic_v&lt;T&gt;, int&gt; = 0&gt;\n    void foo(const T&amp; t);\n\nBut if you instead want:\n\n    template &lt;class T, std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;, int&gt; = 0&gt;\n    void foo(const T&amp; t);\n\n    template &lt;class T, std::enable_if_t&lt;std::is_trivial_v&lt;T&gt;, int&gt; = 0&gt;\n    void foo(const T&amp; t);\n\nThis doesn't compile for e.g. T = int, because an int is both trivial and arithmetic. Since all arithmetic types are trivial, in a scenario like this you can only mean that if a type is trivial then you want the first function called. In concept speak, I think one cay say that arithmetic \"refines\" the trivial concept, and then the arithmetic overload should get selected.\n\nThe main technique I use to resolve these situations is:\n\n    struct low {};\n    struct high : low {};\n\n    template &lt;class T, std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;, int&gt; = 0&gt;\n    void foo(const T&amp; t, high);\n\n    template &lt;class T, std::enable_if_t&lt;std::is_trivial_v&lt;T&gt;, int&gt; = 0&gt;\n    void foo(const T&amp; t, low);\n\n    foo(t, high{});\n\nThis is pretty ugly and ad hoc but relatively short and it works well (an alternative is to disable the trivial implementation when arithmetic is true, but this scales much more poorly). It sucks to have to expose this to a user, but it's not that terrible as an implementation detail. Proper libraries like boost concept and the mini implementation of concepts inside ranges v3 handle this in more organized ways I'd imagine.\n\nThis of course also applies to template specializations; you can use the extra `void` parameter trick to implement template specializations under constraints, but once you are doing that, there's no ordering, so your constraints must be disjoint.", "post": "https://www.reddit.com/r/cpp/comments/84i79m/is_there_anything_that_concepts_can_do_that/"}, {"body": "With concepts, instantiating a class template with an invalid type results in a soft error. Without concepts, your only option is a static assert in the class definition, and that will be a hard error.\n\nhttps://godbolt.org/g/xRkdwZ", "post": "https://www.reddit.com/r/cpp/comments/84i79m/is_there_anything_that_concepts_can_do_that/"}, {"body": "I doubt, knowing that C++ templates are turing complete.", "post": "https://www.reddit.com/r/cpp/comments/84i79m/is_there_anything_that_concepts_can_do_that/"}]